{
  "questions": [
    "Öğrenci No.",
    "Ara sınavdan yaklaşık hangi notu bekliyorsun (0-100)?",
    "Java GUI'leri bağlamında olay güdümlü  (event driven) programlamayı tanımlayın.",
    "Geleneksel sıralı programlama ile olay güdümlü (event driven) programlama arasındaki temel fark nedir?",
    "BorderLayout yöneticisi, bir konteynerdeki bileşenleri nasıl düzenler?",
    "Java GUI uygulamalarında JPanel'in amacı nedir?",
    "Java'daki GUI programları neden tipik olarak sonsuz bir olay döngüsü çalıştırır ve bu durum sistem veya uygulama tarafından tetiklenen yeniden çizim (repaint) olaylarıyla nasıl ilişkilidir?",
    "Bir Swing uygulamasında repaint() metodunu çağırmanın etkisi nedir?",
    "Aşağıdaki kodun çalışmasını izleyin ve düğmeye tıklandığında ne olduğunu belirleyin:\n\npublic class SimpleGUI extends JFrame implements ActionListener {\n    public SimpleGUI() {\n        setSize(200, 100);\n        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n        JButton button = new JButton(\"Click Me\");\n        button.addActionListener(this);\n        add(button);\n        setVisible(true);\n    }\n    \n    public void actionPerformed(ActionEvent e) {\n        JOptionPane.showMessageDialog(this, \"Button was clicked!\");\n        System.exit(0);\n    }\n    \n    public static void main(String[] args) {\n        new SimpleGUI();\n    }\n}",
    "Aşağıdaki kod parçasını inceleyin:\n\nimport javax.swing.*;\nimport java.awt.*;\n\npublic class LayoutExample {\n    public static void main(String[] args) {\n        JFrame frame = new JFrame(\"Layout Test\");\n        frame.setSize(400, 300);\n        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n        frame.setLayout(new BorderLayout());\n        frame.add(new JLabel(\"N\"), BorderLayout.NORTH);\n        frame.add(new JButton(\"S\"), BorderLayout.SOUTH);\n        frame.add(new JPanel(), BorderLayout.CENTER);\n        frame.setVisible(true);\n    }\n}\n\nBu program çalıştığında bileşenlerin nasıl düzenlendiğini açıklayın."
  ],
  "answers": [
    {
      "id": "3963286",
      "cevap1": 45,
      "cevap2": ".",
      "cevap3": ".",
      "cevap4": ".",
      "cevap5": ".",
      "cevap6": ".",
      "cevap7": ".",
      "cevap8": ".",
      "cevap9": "."
    },
    {
      "id": "7732416",
      "cevap1": "50-60",
      "cevap2": "Sonsuz döngü içerisinde fire edilen event objeleri listener adlı objeler tarafından tutulur ve ona göre bir action perform edilir. Yani sıraya göre değil actionlara göre davranılır",
      "cevap3": "Sıralı olma durumu. Event driven kullanıcan gelinen aksiyona göre hareket ederken gelenekselde kodlar sıralı çalışır",
      "cevap4": "Bölge olarak 5 e ayırır. Center east west north ve south ",
      "cevap5": "Bir panel yaratmak ve işine component koymak ",
      "cevap6": ".",
      "cevap7": ".",
      "cevap8": "ActionEvent fire edilir. Listener tarafından yakalanır ve sonrasında actionperformed metodu çağrılır. Ekrana this button was clicked basıldıktan sonra sistemden çıkılır",
      "cevap9": "South bölgesinde S isimli bir butonu olan N adında bir frame oluşur"
    },
    {
      "id": "4275079",
      "cevap1": 60,
      "cevap2": "Daha çalişmadım.",
      "cevap3": "Daha çalişmadım.",
      "cevap4": "Daha çalişmadım.",
      "cevap5": "Daha çalişmadım.",
      "cevap6": "Her yeni hamlede ekran yeniden cizilerek akici bir grafik akişi saglanir.",
      "cevap7": "Ekran yeniden cizilir guncelleme gibi",
      "cevap8": "Daha çalişmadım.",
      "cevap9": "400 e 300 luk bir ekran hazirlanir ekranin kuzeyine N adli guneyine ise S adli bir button eklenir ekran gorunur kilinir."
    },
    {
      "id": "5187413",
      "cevap1": 30,
      "cevap2": "Atılan event objesini yakalayan listenerların olduğu programlama turudur",
      "cevap3": "Evetler gidişata karar verir bazı metotlar hiç kullanılmayabilir",
      "cevap4": "Konteyner üzerindeki konumlarını ayarlamaya yardımcı olur.",
      "cevap5": "--",
      "cevap6": "Her seferinde ekrandaki şeklin güncellenmesi gerekir ",
      "cevap7": "Ekrana yeni eklenen şeyleri yansıtmak",
      "cevap8": "This button was clicked. Program sonlanır.",
      "cevap9": "Frame in başlığı Layout test olur. Frame in üstünde kuzeyde N güneyde S yazar ."
    },
    {
      "id": "9905145",
      "cevap1": 60,
      "cevap2": "event driven program calistiginda kodlarin calismasi değilde, belli bir sart gerceklestirildiginde (butona tiklamak gibi) yazilan kod satirinin calismasi anlamina gelir.",
      "cevap3": "kodun calisma şekli farklidir, geleneksel siralida kodlar sirayla calisir ancak event drivenda hangi kodun şarti gerceklestirilse anlik olarak o calisir, event drivenda aslinda sinirsiz bir döngü var koddan cikmamamiz icin",
      "cevap4": "kuzey, batı, merkez, doğu, güney olmak uzere 5 ayri kutucuga boler ve bilesenleri bu siraya uygun olarak doldurur",
      "cevap5": "JPanel yazdigimiz gui bilesenleri yonetebilecegimiz fonksiyonlar ekler ( butonlar, listeler gibi)",
      "cevap6": "kullanici farkli islemler yapmak isteyebilecegi icin program sonsuz döngüde calisir, repaintde her bir kareyi boyayıp tekrar ettigi icin bir resmi ekrana bu sayede basabiliriz.",
      "cevap7": "ekrana gorseli yazdirmaya yarar, repaint ile ekrandaki kareleri boyuyoruz aslinda",
      "cevap8": "Button was clicked!",
      "cevap9": "N yukarida, S en altta, ortası boş(center) ve görünür kılınmış."
    },
    {
      "id": "4114373",
      "cevap1": 70,
      "cevap2": "event driven programlama program akışını kullanıcının kontroluyle devam ettirebilir. kullanıcının girdilerine göre değişen program akışıdır.",
      "cevap3": "geleneksel sıralı programlamada program akışı, programı yazan tarafından önceden belirlenmiştir ve buna göre çalışır fakat event driven'da çeşitli olaylara karşılık çeşitli fonksiyonlar vardır ve bu fonksiyonlar kullanicinin girdilerine göre çalışır.",
      "cevap4": "içerisinde çeşitli metodlar ve parametreler vardır ve içerisine yazdığımız contentleri yönlere göre atayabilir NORTH SOUTH CENTER gibi",
      "cevap5": "JPanel, ekleyeceğimiz componentleri tutan bir paneldir. olusturdugumuz window içerisine çeşitli paneller ekleyerek katmanlara göre farklı componentler ekleyebiliriz.",
      "cevap6": "program kullanıcı programı kapatmadigi sürece tüm girdileri ölçmek zorundadır ve buna göre tepki vermek zorundadır. örneğin bir oyunda karakterin yürümesini istiyorsak arkaplanda program sürekli bizim klavyemize basıp basmadigimizi kontrol etmesi gerekiyor ve bunu aynı zamanda ekrana çizmesi gerekiyor.",
      "cevap7": "repaint() belli aralıklarla ekrana gosterilen icerikleri gunceller, eğer bir metod ekranda değişiklik yapıyorsa, metottan sonra repaint() bu değişiklikleri sürekli olarak ekrana verir.",
      "cevap8": "program basladiginda SimpleGUI() objesi yaratır ve 200 100 boyutlarinda bir pencere açar ve pencerenin içinde \"Click me\" yazan buton vardır. butona basıldığında \"Button was clicked\" gösterilir ve system.exit(0) ile programdan çıkılır.",
      "cevap9": "program calistiginda Layout Test yazan bir frame oluşur 400 300 boyutlarinda ve framein layoutu ayarlanir, kuzeye N, güneye S, ve ortaya panel objesi ekler ve frame'in gorunurlugunu true olarak ayarlar."
    },
    {
      "id": "2103960",
      "cevap1": 60,
      "cevap2": "belirli olaylara göre (click vs)  tetiklenen kodlama",
      "cevap3": "Sıralı progrmda eventlere dikkat etmeksizin düz ilerler, güdümlü ise sürekli eventleri kontrol eder ve ona göre çalışır",
      "cevap4": " ",
      "cevap5": " ",
      "cevap6": " Örneğin mouse event olarak takip ediliyorsa her an değişeceğinden sonsuz döngüde çalışır ",
      "cevap7": " ",
      "cevap8": "Sistemi kapatır",
      "cevap9": " "
    },
    {
      "id": "6157698",
      "cevap1": 60,
      "cevap2": "Sürekli bir loop içerisinde eventin gerçekleşip gerçekleşmediğini takip ederek evente göre ilerleyen programlamadır",
      "cevap3": "Kullanıcı eventi belirlediği için sonraki gerkçekleşecek olayı programcı bilemez",
      "cevap4": "NORTH, WEST, EAST, SOUTH ve CENTER diye 5 bölüme ayırır",
      "cevap5": "Componentları tutan bir container olmak",
      "cevap6": "Event driven olduğu için sürekli bir döngü içinde event beklemesi gereklidir.",
      "cevap7": "paint merhodunu çalıştırır",
      "cevap8": "Program sonlandırılır",
      "cevap9": "Windowun üst Kısmında N yazar\nWindowun alt kısmında S yazan bir buton olur\nWindowun ortasında boş bir panel vardır"
    },
    {
      "id": "1280995",
      "cevap1": 60,
      "cevap2": "olay güdümlü programlama, kullanıcının verdiği input'lara bağlı olarak karşılaşılabilecek farklı durumların programcı tarafından tasarladığı programlama şeklidir. Kullanıcıdan alınan inputa göre tetiklenen olaylar ile çalışır. ",
      "cevap3": "Sıralı programlamada aşama aşama ne olacağı bilinirken, olay güdümlü programlamada bilgisayarın gerçekleştireceği işlemler kullanıcının input'una bağlı değişir. ",
      "cevap4": "Konteynerdaki bölümleri farklı yönlere göre \"border\"lara (adı üzerinde) böler. ",
      "cevap5": "Frame üzerinde bir panel oluşturabilmek, bu panele ne koyacağımız bize kalmış. Temelde container ile beraber frame'i parçalara ayırırken kullandığımız bir eleman. ",
      "cevap6": "Programların kullanıcıdan kapatılmaya dair bir input alıncaya dek açık kalması ve çalışması gerektiğinden. Bunun repaint ile olan ilişkisi, bu loop'da program içerisinde gerçekleşen değişikliklerin program repaint edilmediği sürece kullanıcı tarafından görülememesi. Bu yüzden programın düzenli aralıklarla repaint edilmesi gerekir. ",
      "cevap7": "Program görüntüsü tekrardan çizilir ve programda yaşanan değişiklikler ekrana yansır.",
      "cevap8": "\"Button was clicked!\" mesajını gösterir ve sistem kapatılır.",
      "cevap9": "N yazan JLabel ekranın orta üstüne, S yazan JButton ekranın orta altına, Ekranın ortasında ise boş bir Jpanel yerleştirilir. "
    },
    {
      "id": "2384475",
      "cevap1": 68,
      "cevap2": "Bir frame açılır ve dışarıdan bizim yaptığımız etkinlikleri klavye, mouse vb. araçlarla algılar.",
      "cevap3": "Event driven bizim kararlarımıza bağlıdır. ",
      "cevap4": "3 parçaya böler.  North, South, Center",
      "cevap5": "JFrame component eklemek.",
      "cevap6": ".",
      "cevap7": "Paint değiştirdiğimizde uygulanır. ",
      "cevap8": "Butona basıldığında frame e  \"Button was clicked!\" yazdırır.",
      "cevap9": "İsmi Layout Test olan bir frame oluşur. Northa ismi N olan label , southa üstünde S olan buton, centera bir panel ekler ve görünür yapar. "
    },
    {
      "id": "8059049",
      "cevap1": "30-50 arası",
      "cevap2": "Programın belli olaylara(click gibi) tepki verdiği programlamadır",
      "cevap3": "Gelenekselde satırlar sırayla çalışır,olay güdümlüde olaya göre çalışır ",
      "cevap4": "5 e ayırır,4 temel yön(Doğu vs.) ve merkez",
      "cevap5": "JPanel içindekileri  bileşenleri düzenler ve gruplar.",
      "cevap6": "repaint bileşenin yeniden çizilmesi gerektiğini belirtir  ve bileşen yeniden çizilir",
      "cevap7": "Doğrudan bileşeni boyamaz ama EDT ile repaint in metodu kullanılır ve boyama yapar",
      "cevap8": "Button was clicked yazısı çıkar",
      "cevap9": "Jpanel adeta bir joystick gibi N ve S yi North ve South a atar"
    },
    {
      "id": "7374887",
      "cevap1": 80,
      "cevap2": "event driven programming belirli olaylar bekleyerek bu olaylar sonucu programın farklı davranış göstermesidir.Örneğin mouseun sağ tuşuyla ateş etmek sol tuşuyla silah değiştirmek.",
      "cevap3": "Sıralıda kod bizim yazdığımız şekilde tahmin edilebilir şekilde çalışırken event driven da eventlerin kod çalıştıktan sonra meydana gelmesinden dolayı öngörülemezlik vardır.",
      "cevap4": "South north east west center olmak üzere 5 bölgeye ayırır.",
      "cevap5": "JPanel componentleri gruplamak için kullanılır.",
      "cevap6": "Sonsuz olay döngüsü programın çalışma esnasında değişebilmesine izin verir.",
      "cevap7": "paint() metodunu  tekrardan yeni statede çağırarak çizdiğimiz şeydeki değişikliklerin çizime yansıtılması.",
      "cevap8": "Button was clicked! Yazan yeni bir pencere açar ve sistemi kapatır.",
      "cevap9": "Üstte N yazan bir text bloğu altta ,S yazan bir buton,bunların arasında ise boş bir panel vardır."
    },
    {
      "id": "6094496",
      "cevap1": "25-40",
      "cevap2": "Kullanıcıların etkileşimlerine yanıt veren bir proglamadır",
      "cevap3": "Sıralıda kod baştan sona sıralı çalışır. Güdümlüde olayları bekler ve ilgili olayı çalıştırır.",
      "cevap4": "North center south east west gibi tarif eder",
      "cevap5": "Bileşenleri gruplandırmak ve düzenlemek",
      "cevap6": "repaint metodu bileşenlerin yeniden çizilmesini sağlar. ",
      "cevap7": "-",
      "cevap8": "bir pencere oluşur \"Click Me\" butonu eklenir. Butona tıklandığında bir mesaj kutusu açılır ve ardından program kapanır",
      "cevap9": "N etiketi \"North\" Üstte\nS etiketi \"South\" altta\nJPanel Etiketi centerda yani merkezde konumlandırılır"
    },
    {
      "id": "5361565",
      "cevap1": 63,
      "cevap2": "actioneventler ve eventlistenerlar arasında olan ilişki sayesinde olur",
      "cevap3": "sıralı programlamada kodun akışına kodu yazan karar verir ama event drivenda yapılan actionlarla ilerler.",
      "cevap4": "center east west south north olarak",
      "cevap5": "jframein içini doldurmak için kullanılır container kapsayıcı bir bilesendir bilesenleri bir araya getirmek için kullanilir.",
      "cevap6": "kullanicidan gelen girdileri almak için eventloop vardir  dongu repainti de cagirir bu olmazsa sistem olayları calisamaz.",
      "cevap7": "bütün her şeyi tekrar yukler bu sayede belli bir seyler hareket falan ediyorsa bu sağlanmış olur ya da pencere buyutme kucultme gibi sistem olayları bu sayede olur",
      "cevap8": "buttonun olduğu yerde button was clicked yazar ve sistem kapanır.",
      "cevap9": "border layout kullanilmis yukarıya N asagiya S merkeze de bir şey yazmayan paneller eklenmiş.adi da layout testtir."
    },
    {
      "id": "6494434",
      "cevap1": "30-40",
      "cevap2": "Kullanıcının etkileşimlerine ve sistem olaylarına yanıt veren uygulamadır.",
      "cevap3": "Program olayları bekler ve ilgili olay geldiğinde calışır.",
      "cevap4": "Kuzey güney sağ sol orta kısım şeklinde ",
      "cevap5": "Bileşenleri gruplamak ve düzenlemek için kullanılır.",
      "cevap6": ".",
      "cevap7": "Grafiksel değişiklikler için kullanılır.\n",
      "cevap8": "Pencere açılır ve Click Me butonu butonu eklenir. Butona tıklandığında mesaj kutusu açılır ve program sonlanır.\n",
      "cevap9": "N üstte\nS altta\nJpanel merkezi cendere konumunda konumlandırılır."
    },
    {
      "id": "6343320",
      "cevap1": 65,
      "cevap2": "Programın nasıl işleyeceğini kullanıcıya göre belirler",
      "cevap3": "Geleneksel uygulama başladıktan sonra sabit olay akışıyla ilerler ancak event böyle değildir",
      "cevap4": "-",
      "cevap5": "Konuya birçok yönden yaklaşıp incelemek",
      "cevap6": "Sistemdeki şeyleri sürekli dinleyerek uygular",
      "cevap7": "Swingin yeniden çizmesini ister",
      "cevap8": "Click me yazar ok dendiğinde biter",
      "cevap9": "D"
    },
    {
      "id": "6914659",
      "cevap1": 30,
      "cevap2": "Event, kullanıcının yaptığı eylemler. Event Source, olayın gerçekleştiği bileşen. Event Listener, olayı yakalayan ve ilgili kodu çalıştıran arayüz veya sınıf. ",
      "cevap3": "Programin akışının kontrolü ",
      "cevap4": ".North kuzey, .South güney, .East doğu, .West batı, .Center tam orta",
      "cevap5": "Yeni bir panel açmayı sağlar.",
      "cevap6": "Kullanıcının veya sistemin tetiklediği olayları devamlı dinler ve işleyerek uygulamanın dinamik ve etkileşimli olmasını sağlar.",
      "cevap7": "Bilesenleri yeniden çizer.",
      "cevap8": "Button was clicked! Yazar ve kapanir",
      "cevap9": "T"
    },
    {
      "id": "9245287",
      "cevap1": 90,
      "cevap2": "Olay güdümlü programlama, kullanıcı etkileşimleri veya diğer sistem olaylarına tepki vermek amacıyla yazılmış bir yazılım modelidir. Java GUI'leri bağlamında, bu modelde, kullanıcıdan gelen girişler (fare tıklamaları, tuş vuruşları vb.) veya sistemdeki değişiklikler (örneğin, zamanlayıcıların çalışması) \"olaylar\" olarak kabul edilir. Bu olaylar, belirli işlevlerin (örneğin, buton tıklama, pencere açma) çalıştırılmasına sebep olur.",
      "cevap3": "Geleneksel sıralı programlama, kodun baştan sona belirli bir sırayla çalıştığı, akışın geliştirici tarafından önceden tanımlandığı bir modeldir.\n\nOlay güdümlü programlama ise kullanıcı etkileşimleri (buton tıklama, fare hareketi) veya sistem olayları (zamanlayıcı, ağ yanıtı) gibi olaylara dayalı olarak çalışan bir modeldir. Akış, olaylara bağlı olarak dinamik şekilde belirlenir.\n",
      "cevap4": "BorderLayout, bir konteynerdeki bileşenleri beş bölgeye yerleştirerek düzenler: kuzey güney doğu batı merkez",
      "cevap5": "diğer bileşenleri (butonlar, metin alanları vb.) gruplamak, düzenlemek ve yönetmek için kullanılır. Özel çizimler yapmak veya düzen (layout) kontrolü sağlamak için de yaygın olarak kullanılır.",
      "cevap6": "Java GUI programları, sonsuz bir olay döngüsü çalıştırarak kullanıcının etkileşimlerini ve sistem olaylarını sürekli dinler.\n\nBu döngü bileşenlerin yeniden çizilmesi gerektiğinde  Swing bileşenlerini güncelleyerek arayüzün doğru şekilde görüntülenmesini sağlar.",
      "cevap7": "Daha önce çizilmiş olan şekillerinin üstüne yeni şekiller çizer.",
      "cevap8": "Click Me adında buton oluşturur. Butona tıklandığında Button was clicked mesajı ekrana gelir. Butona tıklama işlemi actionlistener ile kontrol edilir.",
      "cevap9": "Kuzeye N, southa S, ortaya hiç bir şey yazmayan paneller ekliyor."
    },
    {
      "id": "1889298",
      "cevap1": "Bahaeddin hoca hangi notu verirse o notu",
      "cevap2": "Java GUI'lerinde olay güdümlü programlama, kullanıcı etkileşimleri gibi olaylara göre çalışan bir yaklaşımdır. Bu modelde, butona tıklamak gibi bir olay gerçekleştiğinde, önceden tanımlanmış kod parçaları devreye girer",
      "cevap3": "Biri kodun baştan sona işlendiği bir proglamlamayken diğeri dış etkileşimlere göre kodun belirli kısımlarının çalıştığı programlamadır",
      "cevap4": "BorderLayout, bileşenleri kuzey, guney, doğu, batı ve merkez olmak üzere beş bölgeye yerleştirir, merkezdeki bileşen kalan alanı doldurur",
      "cevap5": "Bileşenleri gruplamak ve düzenlenmek için kullanılır.",
      "cevap6": "GUI programları kullanıcıyı dinlemek için sonsuz olay döngüsü çalıştırır repaint olayları da tetiklenir ve arayüz güncel kalır",
      "cevap7": "-",
      "cevap8": "\"Button was clicked\" yazısı basılır",
      "cevap9": "-"
    },
    {
      "id": "3688139",
      "cevap1": 40,
      "cevap2": "Kullanicidan gelen tepkilere gore yanit veren programlamadir.",
      "cevap3": "Sirali programlamada programin ne zaman calisacigini programci belirler. Olay gudumlude ise program kullanicidan event bekler, ona gore hareket eder.",
      "cevap4": "North south east west center bolgelerine yerlestirerek ",
      "cevap5": "Layout manager kullanarak etiketler, butonlar koymamiza yarayan arac",
      "cevap6": "Cunku program kullanicidan, kullanici programi sonlandirana kadar event bekler. Ornegin kullanici pencereyi kapattiginda repaint calisir bu yuzden hep sonsuz bir dongu icinde calisiyor olmasi lazim.",
      "cevap7": ".",
      "cevap8": ".",
      "cevap9": "."
    },
    {
      "id": "6429016",
      "cevap1": 50,
      "cevap2": "Klavyeden giriş yapıldığında olayların tetiklenmesi. Event handlerların devreye girmesi. ",
      "cevap3": "Geleneksel programlamada bir olay dizisini takip edip program sonlanır. Olay güdümlü ise olaylara tepki verir. Sürekli çalışır ve kullanıcı ve sistem girdilerine göre şekillenir. ",
      "cevap4": "North south yatay çizgiler east west dikey çizgiler oluşturur ve aralarında bir alan kalır. Merkez bölgesi bu alani doldurur. Birden fazla bileşen aynı bölgeye denk gelirse son eklenen görülür. ",
      "cevap5": "Arayüzü bölmek ve işlevsel hale getirmek. Arkaplan rengi ve stili ayarlamak. Jpaneller kullanarak düzenlemek. Farkli jpaneller ile farklı layout managerlar kullanabilmek. ",
      "cevap6": "A",
      "cevap7": "Paint mekanizmasini tetiklemek icin istek gönderir. Bileşenlerin güncellemesini ve yeniden çizilmesini saglar. ",
      "cevap8": "Button was clicked! Bilgilendirme penceresi açılır. Program sonlanır. ",
      "cevap9": "Başlık oluşturulur. Layout test exit on close. Ust bolge n alt bölge s. Center jpanel. "
    }
  ]
}