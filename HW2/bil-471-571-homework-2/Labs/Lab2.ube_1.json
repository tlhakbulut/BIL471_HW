{
  "questions": [
    "Müzik Çalar Simülasyonu\n\nBIL 211 - Laboratuvar 2\n\n6 Şubat 2025\n\n1 Giriş\nBu laboratuvarda Inheritance, Polymorphism ve Interface kullanarak bir Müzik Çalar Simülasyonu\ngeliştireceğiz.\n\n2 Genel Yapı\nSistem, üç ana bileşenden oluşmaktadır:\nŞarkı (Sarki) sınıfı ve türevleri. Farklı müzik türlerini temsil eder.\nÇalma Stratejisi Arayüzü (CalmaStratejisi). Farklı çalma yöntemlerini tanımlar.\nMüzik Çalar (MuzikCalar) sınıfı. Stratejilere bağlı olarak şarkıları çalar.\n\n3 Sınıf ve Arayüz Tanımları\n\n3.1 Sarki Sınıfı (Soyut Sınıf )\nDeğişkenler:\n\n- isim (String) - Şarkının adı\n\n- sanatci (String) - Sanatçının adı\n\nMetodlar:\n\n- void oynat() - Soyut metod, türetilmiş sınıflar tarafından override edilecek\n\n3.2 MetalSarki, RockSarki, KlasikSarki Sınıfları\nBu sınıflar Sarki sınıfından türetilmiştir. oynat() metodu şarkıları türlerine özgü şekilde çalar ve ekrana\nyazdırır. Doküman sonunda (Ana Program bölümü) her sınıfın şarkıları ne şekilde çaldığına ve ekrana\nyazdırdığına dair bir örnek bulabilirsiniz. RockSarki ve KlasikSarki sınıflarında Sarki sınıfında bulun-\nmayan constructor metodlar mevcuttur (kullanımları Ana Program bölümünde mevcut). MetalSarki sınıfının\nSarki sınıfında bulunmayan değişken ve metodları aşağıda belirtilmiştir.\n\n3.2.1\n\nMetalSarki Sınıfı\n\nDeğişkenler:\n\n- metalOzellik (String) - Şarkıya ait nitelik (örn., agresif ritim, yüksek enerji)\n\nMetodlar:\n\n- MetalSarki(String isim, String sanatci, String metalOzellik) - Constructor\n\n- void gosterMetalOzellikleri() - metalOzellik değişkenini ekrana yazdırır\n\n3.3 CalmaStratejisi Arayüzü\nMetodlar:\n\n- void cal(List<Sarki> sarkiListesi) - Şarkıları belirli bir sıra ile çalar\n\n1\n\n\f3.4 SiraliCalma ve KarisikCalma Sınıfları\nBu sınıflar CalmaStratejisi arayüzünü uygular ve cal(List<Sarki> sarkiListesi) metodunu tanımlar.\nSiraliCalma. sarkiListesi’ni liste sırasında çalar.\nKarisikCalma. sarkiListesi’ni her şarkı bir kere çalınmak üzere karışık sırada çalar.\nRockcuOzelCalma. sarkiListesi’ni liste sırasında çalar. RockSarki çalarken sesi yükseltir ve diğer şarkılar\niçin sesi normal düzeye döndürür (Ana Program bölümünde örnek bilgi mesajları bulabilirsiniz). Listede\nardışık RockSarki bulunduğunda, ses yalnızca ardışık bölümdeki ilk şarkıdan önce yükseltilir ve ardışık\nbölümdeki son şarkıdan sonra normal düzeye döndürülür.\n\n3.5 MuzikCalar Sınıfı\nDeğişkenler:\n\n- strateji (CalmaStratejisi) - Çalma yöntemi\n\nMetodlar:\n\n- void setStrateji(CalmaStratejisi s) - Çalma stratejisini günceller.\n\n- void muzikCal(List<Sarki> sarkiListesi) - Seçilen stratejiye göre şarkıları çalar.\n\n4 Ana Program (Main Sınıfı)\nAna programda, farklı türlerde şarkılar oluşturulacak ve çeşitli çalma stratejileri uygulanacaktır.\n\n4.1 Ana Program Örneği\n\npublic class Main {\n\npublic static void main(String[] args) {\n\n// Farkli turde sarkilar olusturuluyor\nSarki s1 = new MetalSarki(\"Years of Silence\", \"Thurisaz\", \"Aykiri ve atmosferik\");\nSarki s2 = new MetalSarki(\"Voice of the Soul\", \"Death\", \"Enstrumantal\");\nSarki s3 = new RockSarki(\"Small Mountain\", \"Midlake\");\nSarki s4 = new RockSarki(\"Ankara\", \"Vega\");\nSarki s5 = new KlasikSarki(\"Una Mattina\", \"Ludovico Einaudi\");\n\n// Sarkilari iceren calma listesi\nList<Sarki> sarkiListesi = Arrays.asList(s1, s2, s3, s4, s5);\n\n// Muzik calar objesi\nMuzikCalar muzikCalar = new MuzikCalar();\n\n// Sirali calma stratejisi\nSystem.out.println(\"Sirali Calma:\");\nmuzikCalar.setStrateji(new SiraliCalma());\nmuzikCalar.muzikCal(sarkiListesi);\n\n// Karisik calma stratejisi\nSystem.out.println(\"Karisik Calma:\");\nmuzikCalar.setStrateji(new KarisikCalma());\nmuzikCalar.muzikCal(sarkiListesi);\n\n// Rockcu ozel calma stratejisi\nSystem.out.println(\"Rockcu Ozel Calma:\");\nmuzikCalar.setStrateji(new RockcuOzelCalma());\nmuzikCalar.muzikCal(sarkiListesi);\n\n// Metal sarkilarin ozelliklerini goster\nSystem.out.println(\"Metal Ozellikleri:\");\nfor (Sarki sarki : sarkiListesi) {\n\n... // Bu kismi cikti ornegini saglayacak sekilde doldurun\n\n}\n\n}\n\n}\n\n2\n\n\f4.2 Çıktı Örneği\n\nSirali Calma:\n[METAL] Thurisaz - Years of Silence (Aykiri ve atmosferik)\n[METAL] Death - Voice of the Soul (Enstrumantal)\n[ROCK] Midlake - Small Mountain (Huzurlu ve nostaljik)\n[ROCK] Vega - Ankara (Huzurlu ve nostaljik)\n[KLASIK] Ludovico Einaudi - Una Mattina (Hafif ve sakin)\n\nKarisik Calma:\n[ROCK] Vega - Ankara (Huzurlu ve nostaljik)\n[KLASIK] Ludovico Einaudi - Una Mattina (Hafif ve sakin)\n[METAL] Thurisaz - Years of Silence (Aykiri ve atmosferik)\n[ROCK] Midlake - Small Mountain (Huzurlu ve nostaljik)\n[METAL] Death - Voice of the Soul (Enstrumantal)\n\nRockcu Ozel Calma:\n[METAL] Thurisaz - Years of Silence (Aykiri ve atmosferik)\n[METAL] Death - Voice of the Soul (Enstrumantal)\n[BILGI] Ses duzeyi: Yuksek\n[ROCK] Midlake - Small Mountain (Huzurlu ve nostaljik)\n[ROCK] Vega - Ankara (Huzurlu ve nostaljik)\n[BILGI] Ses duzeyi: Normal\n[KLASIK] Ludovico Einaudi - Una Mattina (Hafif ve sakin)\n\nMetal Ozellikleri:\nThurisaz - Years of Silence [Ozellik: Aykiri ve atmosferik]\nDeath - Voice of the Soul [Ozellik: Enstrumantal]\n\n3\n\n"
  ],
  "answers": [
    {
      "id": "4380745",
      "Bil211L2.java": "import java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\nimport java.util.Random;;\n\npublic class Bil211L2 {\n    public static void main(String[] args) {\n        // Farkli turde sarkilar olusturuluyor\n        Sarki s1 = new MetalSarki(\"Years of Silence\", \"Thurisaz\", \"Aykiri ve atmosferik\");\n        Sarki s2 = new MetalSarki(\"Voice of the Soul\", \"Death\", \"Enstrumantal\");\n        Sarki s3 = new RockSarki(\"Small Mountain\", \"Midlake\");\n        Sarki s4 = new RockSarki(\"Ankara\", \"Vega\");\n        Sarki s5 = new KlasikSarki(\"Una Mattina\", \"Ludovico Einaudi\");\n        // Sarkilari iceren calma listesi\n        List<Sarki> sarkiListesi = Arrays.asList(s1, s2, s3, s4, s5);\n        // Muzik calar objesi\n        MuzikCalar muzikCalar = new MuzikCalar();\n        // Sirali calma stratejisi\n        System.out.println(\"Sirali Calma:\");\n        muzikCalar.SetStrateji(new SiraliCalma());\n        muzikCalar.muzikCal(sarkiListesi);\n        // Karisik calma stratejisi\n        System.out.println(\"Karisik Calma:\");\n        muzikCalar.SetStrateji(new KarisikCalma());\n        muzikCalar.muzikCal(sarkiListesi);\n        // Rockcu ozel calma stratejisi\n        System.out.println(\"Rockcu Ozel Calma:\");\n        muzikCalar.SetStrateji(new RockcuOzelCalma());\n        muzikCalar.muzikCal(sarkiListesi);\n        // Metal sarkilarin ozelliklerini goster\n        System.out.println(\"Metal Ozellikleri:\");\n        for (Sarki sarki : sarkiListesi) {\n            if(sarki == null){\n                continue;\n            }\n\n            if(sarki instanceof MetalSarki){\n                ((MetalSarki)sarki).gosterMetalOzellikler();\n            }\n        }\n    }\n}\n\nabstract class Sarki {\n    protected String isim;\n    protected String sanatci;\n    \n    abstract void oynat();\n}\n\ninterface CalmaStratejisi{\n    abstract void cal(List<Sarki> sarkiListesi);\n}\n\nclass MetalSarki extends Sarki{\n\n    private String metalOzellik;\n\n    public MetalSarki(String isim, String sanatci, String metalOzellik){\n        this.isim = new String(isim);\n        this.sanatci = new String(sanatci);\n        this.metalOzellik = new String(metalOzellik);\n    }\n\n    @Override\n    public void oynat(){\n        System.out.println(sanatci + \" - \" + isim + \" (\" +  metalOzellik +\")\");\n    }\n\n    public void gosterMetalOzellikler(){\n        System.out.println(sanatci + \" - \" + isim + \" [Ozellik: \" +  metalOzellik +\"]\");\n    }\n}\n\nclass RockSarki extends Sarki{\n\n    public RockSarki(String isim, String sanatci){\n        this.isim = new String(isim);\n        this.sanatci = new String(sanatci);\n    }\n\n    @Override\n    public void oynat(){\n        System.out.println(sanatci + \" - \" + isim + \" (\" +  \"Huzurlu ve nostaljik\" +\")\");\n    }\n}\n\nclass KlasikSarki extends Sarki{\n\n    public KlasikSarki(String isim, String sanatci){\n        this.isim = new String(isim);\n        this.sanatci = new String(sanatci);\n    }\n\n    @Override\n    public void oynat(){\n        System.out.println(sanatci + \" - \" + isim + \" (\" +  \"Hafif ve sakin\" +\")\");\n    }\n}\n\nclass SiraliCalma implements CalmaStratejisi{\n\n    @Override\n    public void cal(List<Sarki> sarkiListesi) {\n        String etiket;\n        for(Sarki sarki: sarkiListesi){\n            if(sarki == null){\n                continue;\n            }\n\n            if(sarki instanceof MetalSarki){\n                etiket = \"[METAL]\";\n            }\n            else if(sarki instanceof RockSarki){\n                etiket = \"[ROCK]\";\n            }\n            else{\n                etiket = \"[KLASIK]\";\n            }\n\n            System.out.print(etiket + \" \");\n            sarki.oynat();\n        }\n    }\n}\n\nclass KarisikCalma implements CalmaStratejisi{\n\n    Random random = new Random(666);\n\n    @Override\n    public void cal(List<Sarki> sarkiListesi) {\n        String etiket;\n        \n        List<Sarki> sarkiListesi_ = new ArrayList<>();\n        \n        for(Sarki sarki: sarkiListesi){\n            if(sarki == null){\n                continue;\n            }\n\n            sarkiListesi_.add(sarki);\n        }\n\n        while(sarkiListesi_.size() > 0){\n            int index = random.nextInt(sarkiListesi_.size());\n\n            if(sarkiListesi_.get(index) == null){\n                sarkiListesi_.remove(index);\n                continue;\n            }\n\n            if(sarkiListesi_.get(index) instanceof MetalSarki){\n                etiket = \"[METAL]\";\n            }\n            else if(sarkiListesi_.get(index) instanceof RockSarki){\n                etiket = \"[ROCK]\";\n            }\n            else{\n                etiket = \"[KLASIK]\";\n            }\n\n            System.out.print(etiket + \" \");\n            sarkiListesi_.get(index).oynat();\n            sarkiListesi_.remove(index);\n        }\n    }\n}\n\nclass RockcuOzelCalma implements CalmaStratejisi{\n\n    Random random = new Random(666);\n\n    @Override\n    public void cal(List<Sarki> sarkiListesi) {\n        String etiket;\n        String mode = \"METAL\";\n        \n        for(Sarki sarki: sarkiListesi){\n            if(sarki == null){\n                continue;\n            }\n\n            if(sarki instanceof MetalSarki){\n                etiket = \"[METAL]\";\n                if(mode.equals(\"ROCK\")){\n                    System.out.println(\"[BILGI] Ses duzeyi: Normal\");\n                }\n                mode = \"METAL\";\n            }\n            else if(sarki instanceof RockSarki){\n                etiket = \"[ROCK]\";\n                //degisti = mode.equals(\"Normal\") ? false : true;\n                if(!mode.equals(\"ROCK\")){\n                    System.out.println(\"[BILGI] Ses duzeyi: Yuksek\");\n                }\n                mode = \"ROCK\";\n            }\n            else{\n                etiket = \"[KLASIK]\";\n                //degisti = mode.equals(\"Normal\") ? false : true;\n                if(mode.equals(\"ROCK\")){\n                    System.out.println(\"[BILGI] Ses duzeyi: Normal\");\n                }\n                mode = \"KLASIK\";\n            }\n\n            System.out.print(etiket + \" \");\n            sarki.oynat();\n        }\n    }\n}\n\nclass MuzikCalar{\n    CalmaStratejisi strateji;\n\n    public void SetStrateji(CalmaStratejisi s){\n        strateji = s;\n    }\n\n    public void muzikCal(List<Sarki> sarkiListesi){\n        strateji.cal(sarkiListesi);\n    }\n}"
    },
    {
      "id": "7214465",
      "calmastratejisi.java": "import java.util.Collections;\nimport java.util.List;\n\n\ninterface CalmaStratejisi {\n    void cal(List<Sarki> sarkiListesi);\n}\n    class SiraliCalma implements CalmaStratejisi {\n        @Override\n        public void cal(List<Sarki> sarkiListesi) {\n            for (Sarki sarki : sarkiListesi) {\n                sarki.oynat();\n            }\n        }\n    }\n\n    class KarisikCalma implements CalmaStratejisi {\n        @Override\n        public void cal(List<Sarki> sarkiListesi) {\n            Collections.shuffle(sarkiListesi);\n            for (Sarki sarki : sarkiListesi) {\n                sarki.oynat();\n            }\n        }\n    }\n\n\n    class RockcuOzelCalma implements CalmaStratejisi {\n        @Override\n        public void cal(List<Sarki> sarkiListesi) {\n            boolean bl = true;\n            for (Sarki sarki : sarkiListesi) {\n                if (sarki instanceof RockSarki && bl == false) {\n                    System.out.println(\"     [BİLGİ] Ses düzeyi: Yüksek\");\n                    bl = true;\n                } \n                else if (!(sarki instanceof RockSarki) && bl == true) {\n                    System.out.println(\"     [BİLGİ] Ses düzeyi: Normal\");\n                    bl = false;\n                }\n                sarki.oynat();\n            }\n            if (bl) {\n                System.out.println(\"     [BİLGİ] Ses düzeyi: Normal\");\n            }\n        }\n    }\n\n",
      "muzikcalar.java": "import java.util.List;\n\nclass MuzikCalar {\n    private CalmaStratejisi strateji;\n\n    public void setStrateji(CalmaStratejisi s) {\n        this.strateji = s;\n    }\n\n    public void muzikCal(List<Sarki> sarkiListesi) {\n        if (strateji != null) {\n            strateji.cal(sarkiListesi);\n        }\n    }\n}\n",
      "soru1.java": "import java.util.Arrays;\nimport java.util.List;\n\npublic class soru1 {\n    public static void main(String[] args) {\n        Sarki s1 = new MetalSarki(\"Years of Silence\", \"Thurisaz\", \"Aykiri ve atmosferik\");\n        Sarki s2 = new MetalSarki(\"Voice of the Soul\", \"Death\", \"Enstrumantal\");\n        Sarki s3 = new RockSarki(\"Small Mountain\", \"Midlake\");\n        Sarki s4 = new RockSarki(\"Ankara\", \"Vega\");\n        Sarki s5 = new KlasikSarki(\"Una Mattina\", \"Ludovico Einaudi\");\n        List<Sarki> sarkiListesi = Arrays.asList(s1, s2, s3, s4, s5);\n\n        MuzikCalar muzikCalar = new MuzikCalar();\n\n        System.out.println(\"Sirali Calma:\");\n        muzikCalar.setStrateji(new SiraliCalma());\n        muzikCalar.muzikCal(sarkiListesi);\n\n        System.out.println(\"Karisik Calma:\");\n        muzikCalar.setStrateji(new KarisikCalma());\n        muzikCalar.muzikCal(sarkiListesi);\n\n        System.out.println(\"Rockcu Ozel Calma:\");\n        muzikCalar.setStrateji(new RockcuOzelCalma());\n        muzikCalar.muzikCal(sarkiListesi);\n\n        System.out.println(\"Metal Ozellikleri:\");\n        for (Sarki sarki : sarkiListesi) {\n            if (sarki instanceof MetalSarki){\n                ((MetalSarki) sarki).gosterMetalOzellikleri();\n            } \n        }\n    }\n}",
      "sarki.java": "abstract class Sarki {\n    public String isim;\n    public String sanatci;\n\n    public Sarki(String isim, String sanatci) {\n        this.isim = isim;\n        this.sanatci = sanatci;\n    }\n\n    public abstract void oynat();\n}\nclass MetalSarki extends Sarki {\n    private String metalOzellik;\n\n    public MetalSarki(String isim, String sanatci, String metalOzellik) {\n        super(isim, sanatci);\n        this.metalOzellik = metalOzellik;\n    }\n\n    @Override\n    public void oynat() {\n        System.out.println(\"     [METAL] \" + sanatci + \" - \" + isim + \" (\" + metalOzellik + \")\");\n    }\n\n    public void gosterMetalOzellikleri() {\n        System.out.println(\"     \" + sanatci + \" - \" + isim + \" [Özellik: \" + metalOzellik + \"]\");\n    }\n}\n\nclass RockSarki extends Sarki {\n    public RockSarki(String isim, String sanatci) {\n        super(isim, sanatci);\n    }\n\n    @Override\n    public void oynat() {\n        System.out.println(\"     [ROCK] \" + sanatci + \" - \" + isim + \" (Huzurlu ve nostaljik)\");\n    }\n}\n\nclass KlasikSarki extends Sarki {\n    public KlasikSarki(String isim, String sanatci) {\n        super(isim, sanatci);\n    }\n\n    @Override\n    public void oynat() {\n        System.out.println(\"     [KLASİK] \" + sanatci + \" - \" + isim + \" (Hafif ve sakin)\");\n    }\n}\n"
    },
    {
      "id": "1762204",
      "MuzikCalar.java": "import java.util.List;\n\npublic class MuzikCalar {\n    private CalmaStratejisi strateji;\n    \n    public void setStrateji(CalmaStratejisi s) {\n        this.strateji = s;\n    }\n\n    public void muzikCal(List<Sarki> sarkiListesi) {\n        strateji.cal(sarkiListesi);\n    }\n}\n",
      "Main.java": "import java.util.Arrays;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Farkli turde sarkilar olusturuluyor\n        Sarki s1 = new MetalSarki(\"Years of Silence\", \"Thurisaz\", \"Aykiri ve atmosferik\");\n        Sarki s2 = new MetalSarki(\"Voice of the Soul\", \"Death\", \"Enstrumantal\");\n        Sarki s3 = new RockSarki(\"Small Mountain\", \"Midlake\");\n        Sarki s4 = new RockSarki(\"Ankara\", \"Vega\");\n        Sarki s5 = new KlasikSarki(\"Una Mattina\", \"Ludovico Einaudi\");\n        \n        // Sarkilari iceren calma listesi\n        List<Sarki> sarkiListesi = Arrays.asList(s1, s2, s3, s4, s5);\n\n        // Muzik calar objesi\n        MuzikCalar muzikCalar = new MuzikCalar();\n\n        // Sirali calma stratejisi\n        System.out.println(\"Sirali Calma:\");\n        muzikCalar.setStrateji(new SiraliCalma());\n        muzikCalar.muzikCal(sarkiListesi);\n\n        // Karisik calma stratejisi\n        System.out.println(\"Karisik Calma:\");\n        muzikCalar.setStrateji(new KarisikCalma());\n        muzikCalar.muzikCal(sarkiListesi);\n\n        // Rockcu ozel calma stratejisi\n        System.out.println(\"Rockcu Ozel Calma:\");\n        muzikCalar.setStrateji(new RockcuOzelCalma());\n        muzikCalar.muzikCal(sarkiListesi);\n\n        // Metal sarkilarin ozelliklerini goster\n        System.out.println(\"Metal Ozellikleri:\");\n        for (Sarki sarki : sarkiListesi) {\n            if (sarki instanceof MetalSarki) {\n                MetalSarki metalSarki = (MetalSarki)sarki;\n                metalSarki.gosterMetalOzellikleri();\n            }\n        }\n    }\n}\n",
      "KlasikSarki.java": "public class KlasikSarki extends Sarki {\n\n    public KlasikSarki(String isim, String sanatci) {\n        this.isim = isim;\n        this.sanatci = sanatci;\n    }\n\n    @Override\n    void oynat() {\n        System.out.println(\"[KLASIK] \" + sanatci + \" - \" + isim + \" (Hafif ve sakin)\");\n    }\n}\n",
      "MetalSarki.java": "public class MetalSarki extends Sarki {\n    private String metalOzellik;\n\n    public MetalSarki(String isim, String sanatci, String metalOzellik) {\n        this.isim = isim;\n        this.sanatci = sanatci;\n        this.metalOzellik = metalOzellik;\n    }\n\n    public void gosterMetalOzellikleri() {\n        System.out.println(sanatci + \" - \" + isim + \" [Ozellik: \" + metalOzellik + \"]\");\n    }\n\n    @Override\n    void oynat() {\n        System.out.println(\"[METAL] \" + sanatci + \" - \" + isim + \" (\" + metalOzellik + \")\");\n    }\n}\n",
      "RockSarki.java": "public class RockSarki extends Sarki {\n\n    public RockSarki(String isim, String sanatci) {\n        this.isim = isim;\n        this.sanatci = sanatci;\n    }\n\n    @Override\n    void oynat() {\n        System.out.println(\"[ROCK] \" + sanatci + \" - \" + isim + \" (Huzurlu ve nostaljik)\");\n    }\n}\n",
      "KarisikCalma.java": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class KarisikCalma implements CalmaStratejisi {\n\n    @Override\n    public void cal(List<Sarki> sarkiListesi) {\n        List<Sarki> sarkiListesiCopy = new ArrayList<>(sarkiListesi);\n        while (!sarkiListesiCopy.isEmpty()) {\n            int randomNumber = (int) (Math.random() * sarkiListesiCopy.size());\n            sarkiListesiCopy.get(randomNumber).oynat();\n            sarkiListesiCopy.remove(randomNumber);\n        }\n    }\n}\n",
      "SiraliCalma.java": "import java.util.List;\n\npublic class SiraliCalma implements CalmaStratejisi {\n    \n    @Override\n    public void cal(List<Sarki> sarkiListesi) {\n        for (Sarki sarki : sarkiListesi) {\n            sarki.oynat();\n        }\n    }\n}\n",
      "Sarki.java": "public abstract class Sarki {\n    String isim;\n    String sanatci;\n\n    abstract void oynat();\n}",
      "RockcuOzelCalma.java": "import java.util.List;\n\npublic class RockcuOzelCalma implements CalmaStratejisi {\n\n    @Override\n    public void cal(List<Sarki> sarkiListesi) {\n        for (int i = 0; i < sarkiListesi.size(); i++) {\n            if (sarkiListesi.get(i) instanceof RockSarki) {\n                if ((i == 0) || (i > 0 && !(sarkiListesi.get(i-1) instanceof RockSarki)))\n                    System.out.println(\"[BILGI] Ses duzeyi: Yuksek\");\n            }\n            sarkiListesi.get(i).oynat();\n            if (sarkiListesi.get(i) instanceof RockSarki) {\n                if ((i == sarkiListesi.size()-1) || (i < sarkiListesi.size()-1 && !(sarkiListesi.get(i+1) instanceof RockSarki)))\n                    System.out.println(\"[BILGI] Ses duzeyi: Normal\");\n            }\n        }\n    }\n}\n",
      "CalmaStratejisi.java": "import java.util.List;\n\npublic interface CalmaStratejisi {\n    void cal(List<Sarki> sarkiListesi);\n}\n"
    },
    {
      "id": "9830856",
      "MuzikCalar.java": "import java.util.*;\npublic class MuzikCalar {\n    public CalmaStratejisi strateji;\n\n    public void setStrateji(CalmaStratejisi s) {\n        this.strateji = s;\n    }\n\n    public void muzikCal(List<Sarki> sarkiListesi) {\n        if (strateji != null) {\n            strateji.cal(sarkiListesi);\n        } else {\n            System.out.println(\"Invalid\");\n        }\n    }\n}\n",
      "Main.java": "import java.util.Arrays;\nimport java.util.List;\n\npublic class Main \n{\n   public static void main(String[] args) {\n       \n             Sarki s1=new MetalSarki(\"Years of Silence\", \"Thurisaz\", \"Aykırı ve atmosferik\");\n             Sarki s2= new MetalSarki(\"Voice of the Soul\", \"Death\", \"Enstrümantal\");\n             Sarki s3=new RockSarki(\"Small Mountain\", \"Midlake\");\n             Sarki s4=new RockSarki(\"Ankara\", \"Vega\");\n             Sarki s5=new KlasikSarki(\"Una Mattina\", \"Ludovico Einaudi\");\n             List<Sarki> sarkiListesi = Arrays.asList(s1, s2,s3,s4,s5);\n         \n\n        MuzikCalar muzikCalar = new MuzikCalar();\n        \n        System.out.println(\"Sıralı Çalma:\");\n        muzikCalar.setStrateji(new SiraliCalma());\n        muzikCalar.muzikCal(sarkiListesi);\n        \n        System.out.println(\"\\n Karışık Çalma:\");\n        muzikCalar.setStrateji(new KarisikCalma());\n        muzikCalar.muzikCal(sarkiListesi);\n        \n        System.out.println(\"\\n Rockçu Özel Çalma:\");\n        muzikCalar.setStrateji(new RockcuOzelCalma());\n        muzikCalar.muzikCal(sarkiListesi);\n        \n        System.out.println(\"\\n Metal Özellikleri:\");\n        for (Sarki sarki : sarkiListesi) \n        {\n            if (sarki instanceof MetalSarki) \n            {\n                ( (MetalSarki) sarki).gosterMetalOzellikleri();\n            }\n        }\n    } \n}\n",
      "KlasikSarki.java": "public class KlasikSarki extends Sarki\n{\n    public KlasikSarki(String isim, String sanatci)\n    {\n     super(isim,sanatci);\n    }\n\n    @Override\n    void oynat()\n    {\n        System.out.println(\"Klasik\"+ \" Sanatçı adı: \" + sanatci + \" Şarkı adı: \" + isim + \" Hafif ve Sakin\" );\n    }\n}\n",
      "MetalSarki.java": "public class MetalSarki extends Sarki\n{\n    private String metalOzellik;\n\n\n    public MetalSarki(String isim, String sanatci, String metalOzellik)\n    {\n       super(isim,sanatci);\n       this.metalOzellik=metalOzellik;\n    }\n\n    void gosterMetalOzellikleri()\n    {\n        System.out.println(metalOzellik);\n    }\n\n    @Override\n    void oynat()\n    {\n        System.out.println(\"METAL\" + \" Sanatçı adı: \" + sanatci + \" Şarkı adı: \" + isim + \" Özellik: \" + metalOzellik);\n    }\n\n\n}\n",
      "RockSarki.java": "public class RockSarki extends Sarki\n{\n    public RockSarki(String isim, String sanatci)\n    {\n     super(isim,sanatci);\n    }\n\n    @Override\n    void oynat()\n    {\n        System.out.println(\"Rock\"+ \" Sanatçı adı: \" + sanatci + \" Şarkı adı: \" + isim + \" Huzurlu ve Nostaljik\");\n    }\n}",
      "KarisikCalma.java": "import java.util.*;\n/* \nclass KarisikCalma implements CalmaStratejisi\n{\n    @Override\n    public void cal(List<Sarki> sarkiListesi) \n    {\n         boolean [] isSinged= new boolean[sarkiListesi.size()];\n\n         while(varMi( isSinged))\n         {\n            double a=Math.random();\n            int i= (int) a * 100;\n            if(isSinged[i]==false)\n            {\n\n            }\n         }\n    }\n\n\n    public  boolean varMi(boolean[] isSinged)\n    {\n        boolean flag=true;\n        for(int i=0; i<isSinged.length; i++)\n        {\n            if(!isSinged[i])\n            flag=false;\n            \n        }\n            return flag;\n    }\n}\n    */\n\n\n\n\n   public class KarisikCalma implements CalmaStratejisi {\n        @Override\n        public void cal(List<Sarki> sarkiListesi) \n        {\n            List<Sarki> karisikListe = new ArrayList<>(sarkiListesi);\n            \n            Collections.shuffle(karisikListe);\n            for (Sarki sarki : karisikListe) \n            {\n                sarki.oynat();\n            }\n        }\n    }\n    \n",
      "SiraliCalma.java": "import java.util.*;\npublic class SiraliCalma implements CalmaStratejisi \n{\n    @Override\n    public void cal(List<Sarki> sarkiListesi) \n    {\n        for (Sarki sarki : sarkiListesi) \n        {\n            sarki.oynat();\n        }\n    }\n}",
      "Sarki.java": "public abstract class Sarki \n{\n    String isim, sanatci;\n\n    public Sarki(String isim, String sanatci)\n    {\n        this.isim=isim;\n        this.sanatci=sanatci;\n    }\n\n    abstract void oynat();\n    \n}\n",
      "RockcuOzelCalma.java": "import java.util.*;\npublic class RockcuOzelCalma implements CalmaStratejisi\n{\n    @Override\n    public void cal(List<Sarki> sarkiListesi) \n    {\n        boolean sesYuksek = false;\n        for (int i = 0; i < sarkiListesi.size(); i++) \n        {\n            if (sarkiListesi.get(i) instanceof RockSarki && !sesYuksek) \n            {\n                System.out.println(\"ALERT!! Ses düzeyi: Yüksek\");\n                sesYuksek = true;\n            }\n            sarkiListesi.get(i).oynat();\n            if (sesYuksek && (i == sarkiListesi.size() - 1 || !(sarkiListesi.get(i + 1) instanceof RockSarki))) {\n                System.out.println(\"ALERT!! Ses düzeyi: Düşük\");\n                sesYuksek = false;\n            }\n        }\n    }\n}\n",
      "CalmaStratejisi.java": "import java.util.*;\ninterface CalmaStratejisi \n{\n    void cal(List<Sarki> sarkiListesi);\n}\n"
    },
    {
      "id": "8435496",
      "MuzikCalar.java": "package Lab.Lab2;\n\nimport java.util.List;\n\npublic class MuzikCalar\n{\n    CalmaStratejisi strateji;\n\n    void setStrateji(CalmaStratejisi s)\n    {\n        this.strateji = s;\n    }\n\n    void muzikCal(List<Sarki> sarkiListesi)\n    {\n        strateji.cal(sarkiListesi);\n    }\n}\n",
      "Main.java": "package Lab.Lab2;\n\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Farkli turde sarkilar olusturuluyor\n        Sarki s1 = new MetalSarki(\"Years of Silence\", \"Thurisaz\", \"Aykiri ve atmosferik\");\n        Sarki s2 = new MetalSarki(\"Voice of the Soul\", \"Death\", \"Enstrumantal\");\n        Sarki s3 = new RockSarki(\"Small Mountain\", \"Midlake\");\n        Sarki s4 = new RockSarki(\"Ankara\", \"Vega\");\n        Sarki s5 = new KlasikSarki(\"Una Mattina\", \"Ludovico Einaudi\");\n\n        // Sarkilari iceren calma listesi\n        List<Sarki> sarkiListesi = Arrays.asList(s1, s2, s3, s4, s5);\n        // Muzik calar objesi\n        MuzikCalar muzikCalar = new MuzikCalar();\n        // Sirali calma stratejisi\n        System.out.println(\"Sirali Calma:\");\n        muzikCalar.setStrateji(new SiraliCalma());\n        muzikCalar.muzikCal(sarkiListesi);\n        System.out.println();\n        // Karisik calma stratejisi\n        System.out.println(\"Karisik Calma:\");\n        muzikCalar.setStrateji(new KarisikCalma());\n        muzikCalar.muzikCal(sarkiListesi);\n        System.out.println();\n        // Rockcu ozel calma stratejisi\n        System.out.println(\"Rockcu Ozel Calma:\");\n        muzikCalar.setStrateji(new RockcuOzelCalma());\n        muzikCalar.muzikCal(sarkiListesi);\n        System.out.println();\n        // Metal sarkilarin ozelliklerini goster\n        System.out.println(\"Metal Ozellikleri:\");\n        for (Sarki sarki : sarkiListesi) {\n            if (sarki instanceof MetalSarki)\n            {\n                ((MetalSarki) sarki).gosterMetalOzellikleri();\n            }\n        }\n    }\n}\n",
      "KlasikSarki.java": "package Lab.Lab2;\n\npublic class KlasikSarki extends Sarki\n{\n\n    public KlasikSarki(String isim, String sanatci)\n    {\n        super();\n        super.isim = isim;\n        super.sanatci = sanatci;\n    }\n\n    @Override\n    void oynat()\n    {\n        System.out.println(\"[KLASIK] \" + super.sanatci + \" - \" + super.isim + \" (Hafif ve sakin)\");\n    }\n}\n",
      "MetalSarki.java": "package Lab.Lab2;\n\npublic class MetalSarki extends Sarki\n{\n    private String metalOzellik;\n\n    public MetalSarki(String isim, String sanatci, String metalOzellik)\n    {\n        super();\n        super.isim = isim;\n        super.sanatci = sanatci;\n        this.metalOzellik = metalOzellik;\n    }\n\n    void gosterMetalOzellikleri()\n    {\n        System.out.println(super.sanatci + \" - \" + super.isim +\" [Ozellik: \" + this.metalOzellik + \"]\");\n    }\n\n    @Override\n    void oynat()\n    {\n        System.out.println(\"[METAL] \" + super.sanatci + \" - \" + super.isim + \" (\" + this.metalOzellik + \")\");\n    }\n}\n",
      "RockSarki.java": "package Lab.Lab2;\n\npublic class RockSarki extends Sarki\n{\n    public RockSarki(String isim, String sanatci)\n    {\n        super();\n        super.isim = isim;\n        super.sanatci = sanatci;\n    }\n\n    @Override\n    void oynat()\n    {\n        System.out.println(\"[ROCK] \" + super.sanatci + \" - \" + super.isim + \" (Huzurlu ve nostaljik)\");\n    }\n}\n",
      "KarisikCalma.java": "package Lab.Lab2;\n\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.List;\n\npublic class KarisikCalma implements CalmaStratejisi\n{\n    @Override\n    public void cal(List<Sarki> sarkiListesi)\n    {\n        List<Sarki> sarkilar = new ArrayList<>();\n        for(Sarki sarki : sarkiListesi)\n        {\n            sarkilar.add(sarki);\n        }\n        Collections.shuffle(sarkilar);\n        for (Sarki sarki : sarkilar)\n        {\n            sarki.oynat();\n        }\n    }\n}\n",
      "SiraliCalma.java": "package Lab.Lab2;\n\nimport java.util.List;\n\npublic class SiraliCalma implements CalmaStratejisi\n{\n    @Override\n    public void cal(List<Sarki> sarkiListesi)\n    {\n        for (Sarki sarki : sarkiListesi)\n        {\n            sarki.oynat();\n        }\n    }\n}\n",
      "Sarki.java": "package Lab.Lab2;\n\npublic abstract class Sarki\n{\n    String isim;\n    String sanatci;\n\n    abstract void oynat();\n}\n",
      "RockcuOzelCalma.java": "package Lab.Lab2;\n\nimport java.util.List;\n\npublic class RockcuOzelCalma implements CalmaStratejisi\n{\n\n\n    @Override\n    public void cal(List<Sarki> sarkiListesi)\n    {\n        boolean rockMode = false;\n        for (Sarki sarki : sarkiListesi)\n        {\n            if (!rockMode && sarki instanceof RockSarki)\n            {\n                rockMode = true;\n                System.out.println(\"[BILGI] Ses duzeyi: Yuksek\");\n            }\n            if (rockMode && !(sarki instanceof RockSarki))\n            {\n                rockMode = false;\n                System.out.println(\"[BILGI] Ses duzeyi: Normal\");\n            }\n            sarki.oynat();\n        }\n        if (rockMode)\n        {\n            System.out.println(\"[BILGI] Ses duzeyi: Normal\");\n        }\n    }\n}\n",
      "CalmaStratejisi.java": "package Lab.Lab2;\n\nimport java.util.List;\n\npublic interface CalmaStratejisi\n{\n    void cal(List<Sarki> sarkiListesi);\n}\n"
    },
    {
      "id": "8783086",
      "MuzikCalar.java": "import java.util.List;\n\npublic class MuzikCalar {\n    CalmaStratejisi s;\n\n    void setStrateji(CalmaStratejisi s) {\n        this.s = s;\n    }\n\n    void muzikCal(List<Sarki> sarkiListesi) {\n        s.cal(sarkiListesi);\n    }\n}\n",
      "Main.java": "import java.util.Arrays;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        Sarki s1 = new MetalSarki(\"Years of Silence\", \"Thurisaz\", \"Aykiri ve atmosferik\");\n        Sarki s2 = new MetalSarki(\"Voice of the Soul\", \"Death\", \"Enstrumantal\");\n        Sarki s3 = new RockSarki(\"Small Mountain\", \"Midlake\");\n        Sarki s4 = new RockSarki(\"Ankara\", \"Vega\");\n        Sarki s5 = new KlasikSarki(\"Una Mattina\", \"Ludovico Einaudi\");\n        List<Sarki> sarkiListesi = Arrays.asList(s1, s2, s3, s4, s5);\n        MuzikCalar muzikCalar = new MuzikCalar();\n        muzikCalar.setStrateji(new SiraliCalma());\n        muzikCalar.muzikCal(sarkiListesi);\n\n        System.out.println(\"Karisik Calma:\");\n        muzikCalar.setStrateji(new KarisikCalma());\n        muzikCalar.muzikCal(sarkiListesi);\n\n        System.out.println(\"Rockcu Ozel Calma:\");\n        muzikCalar.setStrateji(new RockcuOzelCalma());\n        muzikCalar.muzikCal(sarkiListesi);\n        System.out.println(\"Metal Ozellikleri:\");\n        for (Sarki sarki : sarkiListesi) {\n            if (sarki instanceof MetalSarki) {\n                ((MetalSarki) sarki).gosterMetalOzellik();\n            }\n        }\n    }\n}\n",
      "KlasikSarki.java": "public class KlasikSarki extends Sarki {\n    KlasikSarki(String isim, String sanatci) {\n        this.isim = isim;\n        this.sanatci = sanatci;\n    }\n\n    void oynat() {\n        System.out.println(\"[KLASIK] \" + sanatci + \" - \" + isim + \"( Hafif ve sakin)\");\n    }\n}\n",
      "MetalSarki.java": "public class MetalSarki extends Sarki {\n    String metalOzellik;\n\n    MetalSarki(String isim, String sanatci, String metalOzellik) {\n        this.isim = isim;\n        this.sanatci = sanatci;\n        this.metalOzellik = metalOzellik;\n    }\n\n    void gosterMetalOzellik() {\n        System.out.println(sanatci + \" - \" + isim + \" [Ozellik: \" + metalOzellik + \"]\");\n    }\n\n    void oynat() {\n        System.out.println(\"[Metal] \" + sanatci + \" - \" + isim + \" (\" + metalOzellik + \")\");\n    }\n}\n",
      "RockSarki.java": "public class RockSarki extends Sarki {\n    RockSarki(String isim, String sanatci) {\n        this.isim = isim;\n        this.sanatci = sanatci;\n    }\n\n    void oynat() {\n        System.out.println(\"[ROCK] \" + sanatci + \" - \" + isim + \"( Huzurlu ve nostaljik)\");\n    }\n}\n",
      "KarisikCalma.java": "import java.util.List;\nimport java.util.ArrayList;\n\npublic class KarisikCalma implements CalmaStratejisi {\n\n    public void cal(List<Sarki> sarkiListesi) {\n        List<Sarki> sarkiListesi1 = new ArrayList<Sarki>();\n        for (int i = 0; i < sarkiListesi.size(); i++) {\n            sarkiListesi1.add(sarkiListesi.get(i));\n        }\n        for (Sarki sarki : sarkiListesi1) {\n            sarki.oynat();\n        }\n    }\n}\n",
      "SiraliCalma.java": "import java.util.List;\n\npublic class SiraliCalma implements CalmaStratejisi {\n    public void cal(List<Sarki> sarkiListesi) {\n        for (Sarki sarki : sarkiListesi) {\n            sarki.oynat();\n        }\n    }\n}\n",
      "Sarki.java": "abstract class Sarki {\n    String isim;\n    String sanatci;\n\n    abstract void oynat();\n\n}\n",
      "RockcuOzelCalma.java": "import java.util.List;\n\npublic class RockcuOzelCalma implements CalmaStratejisi {\n    public void cal(List<Sarki> sarkiListesi) {\n        boolean flag = false;\n        for (int i = 0; i < sarkiListesi.size(); i++) {\n            if (sarkiListesi.get(i) instanceof RockSarki && flag == false) {\n                System.out.println(\"[BILGI] Ses duzeyi: Yuksek\");\n                flag = true;\n            }\n            if (i != 0 && sarkiListesi.get(i - 1) instanceof RockSarki && !(sarkiListesi.get(i) instanceof RockSarki)) {\n                flag = false;\n                System.out.println(\"[BILGI] Ses duzeyi: Normal\");\n            }\n            sarkiListesi.get(i).oynat();\n        }\n    }\n}\n",
      "CalmaStratejisi.java": "import java.util.List;\n\npublic interface CalmaStratejisi {\n    void cal(List<Sarki> sarkiListesi);\n}\n"
    },
    {
      "id": "4731282",
      "Lab2Q1.java": "import java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class Lab2Q1 {\n    public static void main(String[] args) {\n\n        Sarki s1 = new MetalSarki(\"Years Of Silence\", \"Thurisaz\", \"Aykiri ve atmosferik\");\n        Sarki s2 = new MetalSarki(\"Voice of the Soul\", \"Death\", \"Enstrumental\");\n        Sarki s3 = new RockSarki(\"Small Mountain\", \"Midlake\");\n        Sarki s4 = new RockSarki(\"Ankara\", \"Vega\");\n        Sarki s5 = new KlasikSarki(\"Una mattina\", \"Ludovico Einaudi\");\n\n        List<Sarki> sarkiListesi = Arrays.asList(s1, s2, s3, s4, s5);\n\n        MuzikCalar muzikCalar = new MuzikCalar();\n\n        System.out.println(\"Sirali Calma:\");\n        muzikCalar.setStrateji(new SiraliCalma());\n        muzikCalar.muzikCal(sarkiListesi);\n        System.out.println();\n\n        System.out.println(\"Karisik Calma:\");\n        muzikCalar.setStrateji(new KarisikCalma());\n        muzikCalar.muzikCal(sarkiListesi);\n        System.out.println();\n\n        System.out.println(\"Rockcu Ozel Calma:\");\n        muzikCalar.setStrateji(new RockcuOzelCalma());\n        muzikCalar.muzikCal(sarkiListesi);\n        System.out.println();\n\n        System.out.println(\"Metal Ozellikleri:\");\n        for (Sarki sarki : sarkiListesi) {\n            if (sarki instanceof MetalSarki) {\n                ((MetalSarki) sarki).gosterMetalOzellikleri();\n            }\n        }\n\n        System.out.println();\n\n    }\n}\n\nabstract class Sarki {\n    String isim;\n    String sanatci;\n\n    abstract void oynat();\n}\n\nclass MetalSarki extends Sarki {\n\n    String metalOzellik;\n\n    MetalSarki(String isim, String sanatci, String metalOzellik) {\n        super.isim = isim;\n        super.sanatci = sanatci;\n        this.metalOzellik = metalOzellik;\n\n    }\n\n    void oynat() {\n        System.out.println(\"[METAL] \" + isim + \" - \" + sanatci + \" (\" + metalOzellik + \")\");\n\n    }\n\n    void gosterMetalOzellikleri() {\n        System.out.println(isim + \" - \" + sanatci + \" (\" + this.metalOzellik + \")\");\n\n    }\n}\n\nclass RockSarki extends Sarki {\n\n    String rockOzellik = \"Huzurlu ve nostaljik\";\n\n    RockSarki(String isim, String sanatci) {\n        super.isim = isim;\n        super.sanatci = sanatci;\n\n    }\n\n    void oynat() {\n        System.out.println(\"[ROCK] \" + isim + \" - \" + sanatci + \" (\" + rockOzellik + \")\");\n\n    }\n\n}\n\nclass KlasikSarki extends Sarki {\n\n    String klasikOzellik = \"Hafif ve sakin\";\n\n    KlasikSarki(String isim, String sanatci) {\n        super.isim = isim;\n        super.sanatci = sanatci;\n\n    }\n\n    void oynat() {\n        System.out.println(\"[KLASIK] \" + isim + \" - \" + sanatci + \" (\" + klasikOzellik + \")\");\n\n    }\n\n}\n\ninterface CalmaStratejisi {\n    void cal(List<Sarki> sarkiListesi);\n\n}\n\nclass SiraliCalma implements CalmaStratejisi {\n    public void cal(List<Sarki> sarkiListesi) {\n        for (int i = 0; i < sarkiListesi.size(); i++) {\n            sarkiListesi.get(i).oynat();\n        }\n\n    }\n\n}\n\nclass KarisikCalma implements CalmaStratejisi {\n    public void cal(List<Sarki> sarkiListesi) {\n        List<Sarki> localList = new ArrayList<Sarki>(sarkiListesi)\n\n        ;\n\n        for (int i = 0; i < sarkiListesi.size(); i++) {\n            int rand = (int) Math.random() * sarkiListesi.size();\n\n            Sarki temp = localList.get(rand);\n            localList.set(rand, localList.get(i));\n            localList.set(i, temp);\n        }\n\n        for (int i = 0; i < localList.size(); i++) {\n            localList.get(i).oynat();\n        }\n\n    }\n\n}\n\nclass RockcuOzelCalma implements CalmaStratejisi {\n    public void cal(List<Sarki> sarkiListesi) {\n        boolean yukseldi = false;\n\n        for (int i = 0; i < sarkiListesi.size(); i++) {\n            if (sarkiListesi.get(i) instanceof RockSarki) {\n\n                if (sarkiListesi.get(i + 1) instanceof RockSarki && yukseldi == false) {\n                    System.out.println(\"[BILGI] Ses Duzeyi : Yuksek\");\n                    yukseldi = true;\n\n                }\n\n            } else if (yukseldi == true) {\n                System.out.println(\"[BILGI] Ses Duzeyi : Normal\");\n                yukseldi = false;\n            }\n            sarkiListesi.get(i).oynat();\n        }\n\n    }\n\n}\n\nclass MuzikCalar {\n    CalmaStratejisi strateji;\n\n    void setStrateji(CalmaStratejisi c) {\n        this.strateji = c;\n\n    }\n\n    void muzikCal(List<Sarki> sarkiListesi) {\n        strateji.cal(sarkiListesi);\n\n    }\n}\n"
    },
    {
      "id": "6202193",
      "Lab2Q1.java": "import java.util.Arrays;\nimport java.util.List;\n\n\npublic class Lab2Q1 {\n    \n  public static void main(String[] args) {\n    // Farkli turde sarkilar olusturuluyor\n    Sarki s1 = new MetalSarki(\"Years of Silence\", \"Thurisaz\", \"Aykiri ve atmosferik\");\n    Sarki s2 = new MetalSarki(\"Voice of the Soul\", \"Death\", \"Enstrumantal\");\n    Sarki s3 = new RockSarki(\"Small Mountain\", \"Midlake\");\n    Sarki s4 = new RockSarki(\"Ankara\", \"Vega\");\n    Sarki s5 = new KlasikSarki(\"Una Mattina\", \"Ludovico Einaudi\");\n    // Sarkilari iceren calma listesi\n    List<Sarki> sarkiListesi = Arrays.asList(s1, s2, s3, s4, s5);\n    // Muzik calar objesi\n    MuzikCalar muzikCalar = new MuzikCalar();\n    // Sirali calma stratejisi\n    System.out.println(\"Sirali Calma:\");\n    muzikCalar.setStrateji(new SiraliCalma());\n    muzikCalar.muzikCal(sarkiListesi);\n    // Karisik calma stratejisi\n    System.out.println(\"Karisik Calma:\");\n    muzikCalar.setStrateji(new KarisikCalma());\n    muzikCalar.muzikCal(sarkiListesi);\n    // Rockcu ozel calma stratejisi\n    System.out.println(\"Rockcu Ozel Calma:\");\n    muzikCalar.setStrateji(new RockcuOzelCalma());\n    muzikCalar.muzikCal(sarkiListesi);\n    // Metal sarkilarin ozelliklerini goster\n    System.out.println(\"Metal Ozellikleri:\");\n    for (Sarki sarki : sarkiListesi) {\n    // Bu kismi cikti ornegini saglayacak sekilde doldurun\n    \n        if(sarki instanceof MetalSarki){\n        MetalSarki temp = (MetalSarki)sarki;\n        temp.gosterMetalOzellikleri();\n        }\n    \n\n    }\n  }\n    \n}\n\nabstract class Sarki{\n  String isim;\n  String sanatci;\n\n  abstract void oynat();\n}\n\nclass MetalSarki extends Sarki{\n  public String metalOzellik;\n\n  MetalSarki(String isim, String sanatci, String metalOzellik){\n    this.isim=isim;\n    this.sanatci=sanatci;\n    this.metalOzellik=metalOzellik;\n    }\n\n    public void gosterMetalOzellikleri(){\n      System.out.println(sanatci+\" - \"+isim+\"\");\n    }\n\n    public void oynat(){\n      \n      System.out.println(\"[METAL] \"+sanatci+\" - \"+isim+\" (\"+metalOzellik+\")\");\n    }\n  \n}\n\nclass RockSarki extends Sarki{\n\n    RockSarki(String isim, String sanatci){\n    this.isim=isim;\n    this.sanatci=sanatci;\n    \n    }\n\n     void oynat(){\n      \n      System.out.println(\"[ROCK] \"+sanatci+\" - \"+isim+\" (Huzurlu ve nostaljik)\");\n    }\n\n\n}\n\nclass KlasikSarki extends Sarki{\n  \n   KlasikSarki(String isim, String sanatci){\n    this.isim=isim;\n    this.sanatci=sanatci;\n    \n    \n    \n    }\n    public void oynat(){\n      \n      System.out.println(\"[KLASİK] \"+sanatci+\" - \"+isim+\" (Hafif ve sakin)\");\n    }\n}\n\ninterface CalmaStratejisi{\n  void cal(List<Sarki> sarkiListesi);\n}\n\nclass SiraliCalma implements CalmaStratejisi{\n  public void cal(List<Sarki> sarkiListesi){\n    for(int i =0;i<sarkiListesi.size();i++){\n    sarkiListesi.get(i).oynat();\n    }\n  }\n}\n\nclass KarisikCalma implements CalmaStratejisi{\n  public void cal(List<Sarki> sarkiListesi){\n    int[] a = new int[sarkiListesi.size()];\n\n    int count = 0;\n\n    while(count<sarkiListesi.size()){\n        int b = 1+(int)(Math.random()*sarkiListesi.size());\n        boolean flag = true;\n        for(int i = 0;i<a.length;i++){\n            if(a[i]==b)flag=false;\n        }\n        if(flag){\n            a[count]=b;\n            count++;\n        }\n    }\n\n    for(int i =0;i<sarkiListesi.size();i++){\n        sarkiListesi.get(a[i]-1).oynat();\n    }\n    \n  }\n}\n\nclass RockcuOzelCalma implements CalmaStratejisi{\n  public void cal(List<Sarki> sarkiListesi){\n    \n    boolean flag = false;\n    boolean temp = false;\n    for(int i =0;i<sarkiListesi.size();i++){\n    if(sarkiListesi.get(i).getClass()==new RockSarki(null, null).getClass()&&flag==false){\n      System.out.println(\"[BILGI] Ses duzeyi: Yuksek\");\n      flag=true;\n      sarkiListesi.get(i).oynat();\n    }\n    else if(sarkiListesi.get(i).getClass()!=new RockSarki(null, null).getClass()&&flag==true){\n      System.out.println(\"[BILGI] Ses duzeyi: Normal\");\n      sarkiListesi.get(i).oynat();\n      flag=false;\n\n\n\n    }\n    else sarkiListesi.get(i).oynat();;\n  }\n}\n}\n\n\nclass MuzikCalar{\n   CalmaStratejisi strateji;\n  \n   void setStrateji(CalmaStratejisi s){\n    this.strateji=s;\n  }\n\n   void muzikCal(List<Sarki> sarkiListesi){\n   \n    strateji.cal(sarkiListesi);\n  }\n}\n"
    },
    {
      "id": "8190737",
      "MusicPlayer.java": "import java.util.*;\n\npublic class MusicPlayer{\n    PlayingStrategy strategy;\n\n    void setStrategy(PlayingStrategy strategy){\n        this.strategy = strategy;\n    }\n\n    void play(List<Song> playlist){\n        strategy.play(playlist);\n    }\n}",
      "Main.java": "import java.util.*;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n\n        Song s1 = new Metal(\"Years of Silence\", \"Thurisaz\", \"Aykiri ve atmosferik\"); \n        Song s2 = new Metal(\"Voice of the Soul\", \"Death\", \"Enstrumantal\");\n        Song s3 = new Rock(\"Small Mountain\", \"Midlake\");\n        Song s4 = new Rock(\"Ankara\", \"Vega\");\n        Song s5 = new Classic(\"Una Mattina\", \"Ludovico Einaudi\");\n\n        // Songlari iceren calma listesi\n\n        List<Song> playlist = Arrays.asList(s1, s2, s3, s4, s5);\n\n        // Muzik calar objesi \n        MusicPlayer musicPlayer = new MusicPlayer();\n\n        // Sirali calma stratejisi \n        System.out.println(\"Sirali Calma:\"); \n        musicPlayer.setStrategy(new Ordered()); \n        musicPlayer.play(playlist);\n\n        // Karisik calma stratejisi \n        System.out.println(\"Karisik Calma:\"); \n        musicPlayer.setStrategy(new Shuffled()); \n        musicPlayer.play(playlist);\n\n        // Rockcu ozel calma stratejisi \n        System.out.println(\"Rockcu Ozel Calma:\"); \n        musicPlayer.setStrategy(new RockSpecial()); \n        musicPlayer.play(playlist);\n        \n        System.out.println(\"Metal Ozellikleri:\"); \n        for (Song song:playlist){\n            if(song instanceof Metal){\n                Metal metal = (Metal)song;\n                System.out.println(metal.singer + \" - \" + metal.name + \" [Ozellik: \" + metal.metalProperties + \"]\");\n            }\n        }\n\n        sc.close();\n   }\n}\n",
      "Song.java": "abstract class Song{\n    String name;\n    String singer;\n    abstract void play();\n}\n\nclass Metal extends Song{\n    String name;\n    String singer;\n    String metalProperties;\n\n    Metal(String name, String singer, String metalProperties){\n        this.name = name;\n        this.singer = singer;\n        this.metalProperties = metalProperties;\n    }\n\n    void play(){\n        System.out.println(\"[METAL] \" + singer + \" - \" + name + \" (\" + metalProperties + \")\");\n    }\n\n    void showMetalProperties(){\n        System.out.println(metalProperties);\n    }\n}\n\nclass Rock extends Song{\n    String name;\n    String singer;\n\n    Rock(String name, String singer){\n        this.name = name;\n        this.singer = singer;\n    }\n\n    void play(){\n        System.out.println(\"[ROCK] \" + singer + \" - \" + name + \" (Huzurlu ve Nostaljik)\");\n    }\n}\n\nclass Classic extends Song{\n    String name;\n    String singer;\n\n    Classic(String name, String singer){\n        this.name = name;\n        this.singer = singer;\n    }\n\n    void play(){\n        System.out.println(\"[KLASIK] \" + singer + \" - \" + name + \" (Hafif ve Sakin)\");\n    }\n}",
      "PlayingStrategy.java": "import java.util.*;\n\ninterface PlayingStrategy{\n    public void play(List<Song> playlist);\n}\n\nclass Ordered implements PlayingStrategy{\n    public void play(List<Song> playlist){\n        for(Song song:playlist){\n            song.play();\n        }\n        System.out.println(\"\\n\");\n    }\n}\n\nclass Shuffled implements PlayingStrategy{\n    public void play(List<Song> playlist){\n        int length = playlist.size();\n        for(int i = length-1;i >= 0;i--){\n            int idx = (int)Math.round(Math.random() * i);\n\n            Song tempSong1 = playlist.get(idx);\n            Song tempSong2 = playlist.get(i);\n\n            playlist.set(idx, tempSong2);\n            playlist.set(i  , tempSong1);\n        }\n\n        for(Song song:playlist){\n            song.play();\n        }\n\n        System.out.println(\"\\n\");\n    }\n}\n\nclass RockSpecial implements PlayingStrategy{\n    public void play(List<Song> playlist){\n        boolean playingRock = false;\n        for(Song song:playlist){\n            if(song instanceof Rock && !playingRock){\n                System.out.println(\"[BILGI] Ses duzeyi: Yuksek\");\n                playingRock = true;\n            }\n            else if(!(song instanceof Rock) && playingRock){\n                System.out.println(\"[BILGI] Ses duzeyi: Normal\");\n                playingRock = false;\n            }\n            song.play();\n        }\n        System.out.println(\"\\n\");\n    }\n}"
    },
    {
      "id": "6275288",
      "MuzikCalar.java": "import java.util.List;\n\npublic class MuzikCalar {\n        CalmaStratejisi strateji;\n\n        public void setStrateji(CalmaStratejisi s) {\n            strateji = s;\n        }\n\n        public void MuzikCal(List<Sarki> sarkilistesi) {\n            strateji.cal(sarkilistesi);\n        }\n    }\n\n",
      "KlasikSarki.java": "public class KlasikSarki extends Sarki {\n    KlasikSarki(String isim, String sanatci) {\n        super(isim, sanatci);\n    }\n\n    public void oynat() {\n        System.out.println(\"[KLASİK]  \" + sanatci + \"  \" + isim + \" (Hafif ve sakin)\");\n    }\n}\n",
      "MetalSarki.java": "public class MetalSarki extends Sarki {\n        public String metalOzellik;\n\n        @Override\n        public void oynat() {\n            System.out.println(\"[METAL]\" + sanatci + \" - \" + isim + \"  (\" + metalOzellik + \")\");\n        }\n\n        MetalSarki(String isim, String sanatci, String metalOzellik) {\n            super(isim, sanatci);\n            this.metalOzellik = metalOzellik;\n        }\n\n        public void gosterMetalOzellik() {\n            System.out.println(metalOzellik);\n        }\n    }\n\n\n",
      "RockSarki.java": "\npublic class RockSarki extends Sarki {\n    RockSarki(String isim, String sanatci) {\n        super(isim, sanatci);\n    }\n\n    public void oynat() {\n        System.out.println(\"[ROCK]  \" + sanatci + \"  \" + isim + \" (Huzurlu ve nostaljik)\");\n    }\n}\n",
      "KarisikCalma.java": "import java.util.Collections;\nimport java.util.List;\n\npublic class KarisikCalma implements CalmaStratejisi {\n    @Override\n    public void cal(List<Sarki> sarkilistesi) {\n        Collections.shuffle(sarkilistesi);\n        for (int i = 0; i < sarkilistesi.size(); i++) {\n            sarkilistesi.get(i).oynat();\n        }\n    }\n}\n",
      "SiraliCalma.java": "import java.util.List;\n\npublic class SiraliCalma implements CalmaStratejisi {\n    @Override\n    public void cal(List<Sarki> sarkilistesi) {\n        for (int i = 0; i < sarkilistesi.size(); i++) {\n            (sarkilistesi.get(i)).oynat();\n        }\n    }\n}\n",
      "Sarki.java": "public abstract class Sarki {\n    public String isim, sanatci;\n\n    Sarki(String isim, String sanatci) {\n        this.isim = isim;\n        this.sanatci = sanatci;\n    }\n\n    public abstract void oynat();\n}\n",
      "q3s1.java": "import java.util.Arrays;\nimport java.util.Collections;\nimport java.util.List;\n\npublic class q3s1 {\n    public static void main(String[] args) {\n        // Farkli turde sarkilar olusturuluyor\n        Sarki s1 = new MetalSarki(\"Years of Silence\", \"Thurisaz\", \"Aykiri ve atmosferik\");\n        Sarki s2 = new MetalSarki(\"Voice of the Soul\", \"Death\", \"Enstrumantal\");\n        Sarki s3 = new RockSarki(\"Small Mountain\", \"Midlake\");\n        Sarki s4 = new RockSarki(\"Ankara\", \"Vega\");\n        Sarki s5 = new KlasikSarki(\"Una Mattina\", \"Ludovico Einaudi\");\n        // Sarkilari iceren calma listesi\n        List<Sarki> sarkiListesi = Arrays.asList(s1, s2, s3, s4, s5);\n        // Muzik calar objesi\n        MuzikCalar muzikCalar = new MuzikCalar();\n        // Sirali calma stratejisi\n        System.out.println(\"Sirali Calma:\");\n        muzikCalar.setStrateji(new SiraliCalma());\n        muzikCalar.MuzikCal(sarkiListesi);\n        // Karisik calma stratejisi\n        System.out.println();\n        System.out.println(\"Karisik Calma:\");\n        muzikCalar.setStrateji(new KarisikCalma());\n        muzikCalar.MuzikCal(sarkiListesi);\n        // Rockcu ozel calma stratejisi\n        System.out.println();\n        System.out.println(\"Rockcu Ozel Calma:\");\n        muzikCalar.setStrateji(new RockcuOzelCalma());\n        muzikCalar.MuzikCal(sarkiListesi);\n        // Metal sarkilarin ozelliklerini goster\n        System.out.println();\n        System.out.println(\"Metal Ozellikleri:\");\n        for (int i = 0; i < sarkiListesi.size(); i++) {\n            if (sarkiListesi.get(i) instanceof RockSarki) {\n                System.out.println(\"The type of this song is huzurlu ve nostaljik\");\n            }\n            if (sarkiListesi.get(i) instanceof MetalSarki) {\n                MetalSarki a = (MetalSarki) sarkiListesi.get(i);\n\n                System.out.print(\"The type of this song is \");\n                a.gosterMetalOzellik();\n            }\n            if (sarkiListesi.get(i) instanceof KlasikSarki) {\n                System.out.println(\"The type of this song is Hafif ve sakin\");\n            }\n        }\n    }\n}\n",
      "RockcuOzelCalma.java": "import java.util.List;\n\npublic class RockcuOzelCalma implements CalmaStratejisi {\n    @Override\n    public void cal(List<Sarki> sarkilistesi) {\n        int a = 0;\n        for (int i = 0; i < sarkilistesi.size(); i++) {\n            if (sarkilistesi.get(i) instanceof RockSarki) {\n                a = i;\n            }\n        }\n        if (a == 0) {\n            for (int i = 0; i < sarkilistesi.size(); i++) {\n                sarkilistesi.get(i).oynat();\n            }\n        } else {\n            for (int i = 0; i < sarkilistesi.size(); i++) {\n                if (i == a) {\n                    sarkilistesi.get(i).oynat();\n                    System.out.println(\"[BILGI] Ses duzeyi: Normal\");\n                } else {\n                    sarkilistesi.get(i).oynat();\n                }\n            }\n        }\n    }\n}\n",
      "CalmaStratejisi.java": "import java.util.List;\n\npublic interface CalmaStratejisi {\n    void cal(List<Sarki> sarkilistesi);\n}\n"
    },
    {
      "id": "6194008",
      "Main.java": "import java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.List;\n\nabstract class Sarki {\n    String isim;\n    String sanatci;\n    abstract void oynat();\n}\nclass MetalSarki extends Sarki {\n    String metalOzellik;\n\n    public MetalSarki(String isim, String sanatci, String metalOzellik) {\n        this.isim = isim;\n        this.sanatci = sanatci;\n        this.metalOzellik = metalOzellik;\n    }\n    void gosterMetalOzellikleri() {\n        System.out.println(sanatci + \" - \" + isim + \" [Ozellik: \" + metalOzellik + \"]\" );\n    }\n    void oynat() {\n        System.out.println(\"[METAL] \" + sanatci + \" - \" + isim + \" (\" + metalOzellik + \")\");\n    }\n    \n}\nclass RockSarki extends Sarki {\n    public RockSarki(String isim, String sanatci) {\n        this.isim = isim;\n        this.sanatci = sanatci;\n    }\n    void oynat() {\n        System.out.println(\"[ROCK] \" + sanatci + \" - \" + isim + \" (Huzurlu ve nostaljik)\");\n    }\n}\nclass KlasikSarki extends Sarki {\n    public KlasikSarki(String isim, String sanatci) {\n        this.isim = isim;\n        this.sanatci = sanatci;\n    }\n    void oynat() {\n        System.out.println(\"[Klasik] \" + sanatci + \" - \" + isim + \" (Hafif ve sakin)\");\n    }\n}\ninterface CalmaStratejisi {\n    void cal(List<Sarki> sarkiListesi);\n}\nclass SiraliCalma implements CalmaStratejisi{\n    public void cal(List<Sarki> sarkiListesi) {\n        for (int i = 0; i < sarkiListesi.size(); i++) {\n            sarkiListesi.get(i).oynat();\n        }\n        \n    }\n    \n}\nclass KarisikCalma implements CalmaStratejisi{\n    public void cal(List<Sarki> sarkiListesi) {\n        List<Sarki> sarkiListesiTemp = new ArrayList<>();\n        for (int i = 0; i < sarkiListesi.size(); i++) {\n            sarkiListesiTemp.add(i, sarkiListesi.get(i));\n        }\n        Collections.shuffle(sarkiListesiTemp);\n        for (int i = 0; i < sarkiListesiTemp.size(); i++) {\n            sarkiListesiTemp.get(i).oynat();\n        }\n        \n    }\n}\nclass RockcuOzelCalma implements CalmaStratejisi{\n    public void cal(List<Sarki> sarkiListesi) {\n        for (int i = 0; i < sarkiListesi.size(); i++) {\n            if (i-1 >= 0) {\n                if (i == sarkiListesi.size()-1 && sarkiListesi.get(i) instanceof RockSarki && sarkiListesi.get(i-1) instanceof RockSarki) {\n                    sarkiListesi.get(i).oynat();\n                    System.out.println(\"Ses Duzeyi: Normal\");\n                }\n                else if (i == sarkiListesi.size()-1 && sarkiListesi.get(i) instanceof RockSarki) {\n                    System.out.println(\"Ses Duzeyi: Yuksek\");\n                    sarkiListesi.get(i).oynat();\n                    System.out.println(\"Ses Duzeyi: Normal\");\n                }\n                else if (sarkiListesi.get(i) instanceof RockSarki && sarkiListesi.get(i-1) instanceof RockSarki ) {\n                    sarkiListesi.get(i).oynat();\n                    continue;\n                }\n                else if (sarkiListesi.get(i) instanceof RockSarki) {\n                    System.out.println(\"Ses Duzeyi: Yuksek\");\n                    sarkiListesi.get(i).oynat();\n                }\n                else if (sarkiListesi.get(i-1) instanceof RockSarki) {\n                    System.out.println(\"Ses Duzeyi: Normal\");\n                    sarkiListesi.get(i).oynat();\n                }\n                else {\n                    sarkiListesi.get(i).oynat();\n                }\n            }\n            else {\n                if (sarkiListesi.get(i) instanceof RockSarki) {\n                    System.out.println(\"Ses Duzeyi: Yuksek\");\n                    sarkiListesi.get(i).oynat();\n                }\n                else {\n                    sarkiListesi.get(i).oynat();\n                }\n            }    \n        }\n    }\n}\nclass MuzikCalar {\n    CalmaStratejisi strateji;\n    void setStrateji(CalmaStratejisi s) {\n        strateji = s;\n    }\n    void muzikCal(List<Sarki> sarkiListesi) {\n        strateji.cal(sarkiListesi);\n    }\n}\n\n\npublic class Main {\n    public static void main(String[] args) {\n        \n    \n        Sarki s1 = new MetalSarki(\"Years of Silence\", \"Thurisaz\", \"Aykiri ve atmosferik\");\n        Sarki s2 = new MetalSarki(\"Voice of the Soul\", \"Death\", \"Enstrumantal\");\n        Sarki s3 = new RockSarki(\"Small Mountain\", \"Midlake\");\n        Sarki s4 = new RockSarki(\"Ankara\", \"Vega\");\n        Sarki s5 = new KlasikSarki(\"Una Mattina\", \"Ludovico Einaudi\");\n\n        List<Sarki> sarkiListesi = Arrays.asList(s1, s2, s3, s4, s5);\n\n        MuzikCalar muzikCalar = new MuzikCalar();\n        System.out.println(\"Sirali Calma:\");\n        muzikCalar.setStrateji(new SiraliCalma());\n        muzikCalar.muzikCal(sarkiListesi);\n\n        System.out.println(\"Karisik Calma:\");\n        muzikCalar.setStrateji(new KarisikCalma());\n        muzikCalar.muzikCal(sarkiListesi);\n\n        System.out.println(\"Rockcu Ozel Calma:\");\n        muzikCalar.setStrateji(new RockcuOzelCalma());\n        muzikCalar.muzikCal(sarkiListesi);\n\n        System.out.println(\"Metal Ozellikleri:\");\n        for (Sarki sarki : sarkiListesi) {\n            if (sarki instanceof MetalSarki) {\n                ((MetalSarki) sarki).gosterMetalOzellikleri();\n            }\n            \n        }\n\n    }\n\n\n}\n"
    },
    {
      "id": "7817361",
      "MuzikCalar.java": "package Lab3;\n\npublic class MuzikCalar {\n\n}\n",
      "Main.java": "package Lab3;\n\npublic class Main {\n\n}\n",
      "KlasikSarki.java": "package Lab3;\n\npublic class KlasikSarki {\n\n}\n",
      "MetalSarki.java": "package Lab3;\n\npublic class MetalSarki {\n\n}\n",
      "RockSarki.java": "package Lab3;\n\npublic class RockSarki {\n\n}\n",
      "KarisikCalma.java": "package Lab3;\n\npublic class KarisikCalma {\n\n}\n",
      "SiraliCalma.java": "package Lab3;\n\npublic class SiraliCalma {\n\n}\n",
      "Sarki.java": "package Lab3;\n\npublic class Sarki {\n\n}\n",
      "RockcuOzelCalma.java": "package Lab3;\n\npublic class RockcuOzelCalma {\n\n}\n",
      "CalmaStratejisi.java": "package Lab3;\n\npublic class CalmaStratejisi {\n\n}\n"
    },
    {
      "id": "2051651",
      "MuzikCalar.java": "import java.util.List;\n\npublic class MuzikCalar{\n\n    CalmaStratejisi CalmaStratejisi;\n\n    void setStrateji(CalmaStratejisi s){\n        this.CalmaStratejisi = s;\n    }\n    \n    void muzikCal(List<Sarki> sarkiListesi){\n        CalmaStratejisi.cal(sarkiListesi);\n    }\n}",
      "Main.java": "import java.util.Arrays;\nimport java.util.List;\n\npublic class Main {  \n    public static void main(String[] args){\n\n    // Farkli turde sarkilar olusturuluyor\n    Sarki s1 = new MetalSarki(\"Years of Silence\", \"Thurisaz\", \"Aykiri ve atmosferik\");\n    Sarki s2 = new MetalSarki(\"Voice of the Soul\", \"Death\", \"Enstrumantal\");\n    Sarki s3 = new RockSarki(\"Small Mountain\", \"Midlake\");\n    Sarki s4 = new RockSarki(\"Ankara\", \"Vega\");\n    Sarki s5 = new KlasikSarki(\"Una Mattina\", \"Ludovico Einaudi\");\n\n    // Sarkilari iceren calma listesi\n    List<Sarki> sarkiListesi = Arrays.asList(s1, s2, s3, s4, s5);\n\n    // Muzik calar objesi\n    MuzikCalar muzikCalar = new MuzikCalar();\n\n    // Sirali calma stratejisi\n    System.out.println(\"Sirali Calma:\");\n    muzikCalar.setStrateji(new SiraliCalma());\n    muzikCalar.muzikCal(sarkiListesi);\n    System.out.println();\n\n    // Karisik calma stratejisi\n    System.out.println(\"Karisik Calma:\");\n    muzikCalar.setStrateji(new KarisikCalma());\n    muzikCalar.muzikCal(sarkiListesi);\n    System.out.println();\n\n    // Rockcu ozel calma stratejisi\n    System.out.println(\"Rockcu Ozel Calma:\");\n    muzikCalar.setStrateji(new RockcuOzelCalma());\n    muzikCalar.muzikCal(sarkiListesi);\n    System.out.println();\n\n    // Metal sarkilarin ozelliklerini goster\n    System.out.println(\"Metal Ozellikleri:\");\n    for (Sarki sarki : sarkiListesi) {\n        if(sarki.getType().equals(\"metal\")){\n            MetalSarki m = (MetalSarki) sarki;\n            m.gosterMetalOzellikleri();\n        }\n    }\n    }\n}\n    \n    \n",
      "KlasikSarki.java": "public class KlasikSarki extends Sarki {\n\n    KlasikSarki(String sanatçi, String isim){\n        this.isim = isim;\n        this.sanatçi = sanatçi;\n    }\n\n    @Override\n    void oynat() {\n        System.out.println(\"[KLASİK] \" + sanatçi + \" - \" + isim + \"(Hafif ve sakin)\");\n    }\n    \n    @Override\n    String getType(){\n        return \"klasik\";\n    }\n}\n",
      "MetalSarki.java": "public class MetalSarki extends Sarki {\n    String metalOzellik;\n\n    MetalSarki(String isim, String sanatci, String metalOzellik){\n        this.isim = isim;\n        this.sanatçi = sanatci;\n        this.metalOzellik = metalOzellik;\n    }\n\n    @Override\n    void oynat() {\n        System.out.println(\"[METAL] \" + sanatçi + \" - \" + isim + \" \" + metalOzellik);\n    }\n    \n    void gosterMetalOzellikleri(){\n        System.out.println(sanatçi + \" - \" + isim + \" - Metal Özelik: \" + metalOzellik);\n    }\n\n    @Override\n    String getType(){\n        return \"metal\";\n    }\n}\n",
      "RockSarki.java": "public class RockSarki extends Sarki{\n\n    RockSarki(String sanatçi, String isim){\n        this.isim = isim;\n        this.sanatçi = sanatçi;\n    }\n\n    @Override\n    void oynat() {\n        System.out.println(\"[ROCK] \" + sanatçi + \" - \" + isim + \"(Huzurlu ve nostaljik)\");\n    }\n    \n    @Override\n    String getType(){\n        return \"rock\";\n    }\n}\n",
      "KarisikCalma.java": "import java.util.List;\n\npublic class KarisikCalma implements CalmaStratejisi{\n\n    @Override\n    public void cal(List<Sarki> sarkiListesi) {\n        for (int i = 0; i < sarkiListesi.size(); i++) {\n            sarkiListesi.get(sarkiListesi.size()-i-1).oynat();\n        }\n    }\n    \n}\n",
      "SiraliCalma.java": "import java.util.List;\n\npublic class SiraliCalma implements CalmaStratejisi {\n\n    @Override\n    public void cal(List<Sarki> sarkiListesi) {\n        for (Sarki sarki : sarkiListesi) {\n            sarki.oynat();\n        }\n    }\n    \n}\n",
      "Sarki.java": "public abstract class Sarki {\n    String isim;\n    String sanatçi;\n\n    abstract void oynat();\n\n    abstract String getType();\n}\n",
      "RockcuOzelCalma.java": "import java.util.List;\n\npublic class RockcuOzelCalma implements CalmaStratejisi{\n    int volume = 50;\n    public void cal(List<Sarki> sarkiListesi) {\n        for (Sarki sarki : sarkiListesi) {\n            if(sarki.getType().equals(\"rock\")){\n                if(volume < 100)\n                System.out.println(\" (Volume is increased.)\");\n                volume = 100;\n            }\n            else{\n                if(volume == 100){\n                    volume = 50;\n                    System.out.println(\" (Volume is decreased.)\");\n                }\n            }\n            sarki.oynat();\n        }\n    }\n}\n",
      "CalmaStratejisi.java": "import java.util.List;\n\npublic interface CalmaStratejisi{\n    \n    void cal(List<Sarki> sarkiListesi);\n}\n"
    },
    {
      "id": "6897869",
      "MuzikCalar.java": "import java.util.List;\n\npublic class MuzikCalar {\n    CalmaStratejisi strateji;\n\n    void setStrateji(CalmaStratejisi s) {\n        strateji = s;\n    }\n\n    void muzikCal(List<Sarki> sarkiListesi) {\n        strateji.cal(sarkiListesi);\n    }\n}\n",
      "Main.java": "import java.util.Arrays;\nimport java.util.List;\n\npublic class Main {\n    public static void main(String[] args) {\n        Sarki s1 = new MetalSarki(\"Years of Silence\", \"Thurisaz\", \"Aykırı ve atmosferik\");\n        Sarki s2 = new MetalSarki(\"Voice of the Soul\", \"Death\", \"Enstrumental\");\n        Sarki s3 = new RockSarki(\"Small Mountain\", \"Midlake\");\n        Sarki s4 = new RockSarki(\"Ankara\", \"Vega\");\n        Sarki s5 = new KlasikSarki(\"Una Mattina\", \"Ludovico Einaudi\");\n\n        List<Sarki> sarkiListesi = Arrays.asList(s1, s2, s3, s4, s5);\n\n        MuzikCalar muzikCalar = new MuzikCalar();\n\n        System.out.println(\"Sıralı çalma\");\n        muzikCalar.setStrateji(new SiraliCalma());\n        muzikCalar.muzikCal(sarkiListesi);\n\n        System.out.println(\"Karışık çalma\");\n        muzikCalar.setStrateji(new KarisikCalma());\n        muzikCalar.muzikCal(sarkiListesi);\n\n        System.out.println(\"Rockcu özel çalma\");\n        muzikCalar.setStrateji(new RockcuOzelCalma());\n        muzikCalar.muzikCal(sarkiListesi);\n\n        System.out.println(\"Metal özellikleri :\");\n        for (Sarki s : sarkiListesi) {\n            if (s instanceof MetalSarki) {\n                MetalSarki m = (MetalSarki) s;\n                System.out.println(m.sanatci + \" \" + m.isim + \" [Özellik: \" + m.metalOzellik + \"]\");\n            }\n\n        }\n    }\n}\n",
      "KlasikSarki.java": "public class KlasikSarki extends Sarki {\n    KlasikSarki(String isim, String sanatci) {\n        this.isim = isim;\n        this.sanatci = sanatci;\n    }\n\n    @Override\n    void oynat() {\n        System.out.println(\"[KLASIK] \" + sanatci + \" - \" + isim + \" (Hafif ve Sakin)\");\n    }\n}\n",
      "MetalSarki.java": "public class MetalSarki extends Sarki {\n    String metalOzellik;\n\n    MetalSarki(String isim, String sanatci, String metalOzellik) {\n        this.isim = isim;\n        this.sanatci = sanatci;\n        this.metalOzellik = metalOzellik;\n    }\n\n    @Override\n    void oynat() {\n        System.out.println(\"[METAL] \" + sanatci + \" - \" + isim + \" (\" + metalOzellik + \")\");\n    }\n}\n",
      "RockSarki.java": "public class RockSarki extends Sarki {\n    RockSarki(String isim, String sanatci) {\n        this.isim = isim;\n        this.sanatci = sanatci;\n    }\n\n    @Override\n    void oynat() {\n        System.out.println(\"[ROCK] \" + sanatci + \" - \" + isim + \" (Hafif ve Sakin)\");\n    }\n}\n",
      "KarisikCalma.java": "import java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.List;\n\npublic class KarisikCalma implements CalmaStratejisi {\n    @Override\n    public void cal(List<Sarki> sarkiListesi) {\n        ArrayList<Sarki> newList = new ArrayList<>();\n        for (Sarki s : sarkiListesi) {\n            newList.add(s);\n        }\n\n        Collections.shuffle(newList);\n\n        for (Sarki s : newList) {\n            s.oynat();\n        }\n        System.out.println();\n    }\n}\n",
      "SiraliCalma.java": "import java.util.List;\n\npublic class SiraliCalma implements CalmaStratejisi {\n    @Override\n    public void cal(List<Sarki> sarkiListesi) {\n        for (Sarki s : sarkiListesi) {\n            s.oynat();\n        }\n        System.out.println();\n    }\n}\n",
      "Sarki.java": "public abstract class Sarki {\n    String isim;\n    String sanatci;\n\n    void oynat() {\n        System.out.println(\"Şarkı çalıyor\");\n    }\n}\n",
      "RockcuOzelCalma.java": "import java.util.List;\n\npublic class RockcuOzelCalma implements CalmaStratejisi {\n    @Override\n    public void cal(List<Sarki> sarkiListesi) {\n        if (sarkiListesi.size() > 0) {\n            if (sarkiListesi.get(0) instanceof RockSarki) {\n                System.out.println(\"[BİLGİ] Ses düzeyi: Yüksek\");\n                sarkiListesi.get(0).oynat();\n            } else {\n                sarkiListesi.get(0).oynat();\n            }\n\n        }\n\n        for (int i = 1; i < sarkiListesi.size(); i++) {\n            Sarki bu = sarkiListesi.get(i);\n            Sarki evvelki = sarkiListesi.get(i - 1);\n\n            if (bu instanceof RockSarki) {\n                if (evvelki instanceof RockSarki) {\n                    bu.oynat();\n                } else {\n                    System.out.println(\"[BİLGİ] Ses düzeyi: Yüksek\");\n                    bu.oynat();\n                }\n            } else {\n                if (evvelki instanceof RockSarki) {\n                    System.out.println(\"[BİLGİ] Ses düzeyi: Normal\");\n                    bu.oynat();\n                } else {\n                    bu.oynat();\n                }\n            }\n        }\n        System.out.println();\n    }\n}\n",
      "CalmaStratejisi.java": "import java.util.List;\n\npublic interface CalmaStratejisi {\n    void cal(List<Sarki> sarkiListesi);\n}\n"
    },
    {
      "id": "1764665",
      "MuzikCalar.java": "import java.util.List;\n\npublic class MuzikCalar {\n    CalmaStratejisi strateji;\n\n    void setStrateji(CalmaStratejisi s) {\n        this.strateji = s;\n    }\n\n    void muzikCal(List<Sarki> sarkiListesi) {\n        strateji.cal(sarkiListesi);\n    }\n}\n",
      "KlasikSarki.java": "public class KlasikSarki extends Sarki {\n\n    public KlasikSarki(String isim, String sanatci) {\n        this.isim = isim;\n        this.sanatci = sanatci;\n    }\n\n    @Override\n    public void oynat() {\n        System.out.println(\"[KLASIK] \" + sanatci + \" - \" + isim + \" (Huzurlu ve Nostaljik)\");\n    }\n\n}\n",
      "MetalSarki.java": "public class MetalSarki extends Sarki {\n    String metalOzelilk;\n\n    public MetalSarki(String isim, String sanatci, String metalOzellik) {\n        this.isim = isim;\n        this.sanatci = sanatci;\n        this.metalOzelilk = metalOzellik;\n    }\n\n    public void gosterMetalOzellikleri() {\n        System.out.println(sanatci + \" - \" + isim + \" [Ozellik: \" + isim + \"]\");\n    }\n\n    @Override\n    public void oynat() {\n        System.out.println(\"[METAL] \" + sanatci + \" - \" + isim + \" (\" + metalOzelilk + \")\");\n    }\n\n}\n",
      "App.java": "import java.util.Arrays;\nimport java.util.List;\n\npublic class App {\n    public static void main(String[] args) throws Exception {\n        Sarki s1 = new MetalSarki(\"Years of Silence\", \"Thurisaz\", \"Aykiri ve atmosferik\");\n        Sarki s2 = new MetalSarki(\"Voice of the Soul\", \"Death\", \"Enstrumantal\");\n        Sarki s3 = new RockSarki(\"Small Mountain\", \"Midlake\");\n        Sarki s4 = new RockSarki(\"Ankara\", \"Vega\");\n        Sarki s5 = new KlasikSarki(\"Una Mattina\", \"Ludovico Einaudi\");\n\n        // Sarkilari iceren calma listesi\n        List<Sarki> sarkiListesi = Arrays.asList(s1, s2, s3, s4, s5);\n\n        MuzikCalar muzikCalar = new MuzikCalar();\n        // Sirali calma stratejisi\n        System.out.println(\"Sirali Calma:\");\n        muzikCalar.setStrateji(new SiraliCalma());\n        muzikCalar.muzikCal(sarkiListesi);\n        // Karisik calma stratejisi\n        System.out.println(\"Karisik Calma:\");\n        muzikCalar.setStrateji(new KarisikCalma());\n        muzikCalar.muzikCal(sarkiListesi);\n        // Rockcu ozel calma stratejisi\n        System.out.println(\"Rockcu Ozel Calma:\");\n        muzikCalar.setStrateji(new RockcuOzelCalma());\n        muzikCalar.muzikCal(sarkiListesi);\n        // Metal sarkilarin ozelliklerini goster\n        System.out.println(\"Metal Ozellikleri:\");\n        for (Sarki sarki : sarkiListesi) {\n            if (sarki.getClass().getName().equals(\"MetalSarki\")) {\n                MetalSarki song = (MetalSarki) sarki;\n                song.gosterMetalOzellikleri();\n            }\n        }\n\n    }\n}\n",
      "RockSarki.java": "public class RockSarki extends Sarki {\n\n    public RockSarki(String isim, String sanatci) {\n        this.isim = isim;\n        this.sanatci = sanatci;\n    }\n\n    @Override\n    public void oynat() {\n        System.out.println(\"[KLASIK] \" + sanatci + \" - \" + isim + \" (Huzurlu ve Nostaljik)\");\n    }\n\n}\n",
      "KarisikCalma.java": "import java.util.ArrayList;\nimport java.util.List;\nimport java.util.Random;\n\npublic class KarisikCalma implements CalmaStratejisi {\n\n    @Override\n    public void cal(List<Sarki> sarkiListesi) {\n        List<Sarki> sarkilist = new ArrayList<Sarki>();\n        sarkilist.addAll(sarkiListesi);\n        Random r = new Random();\n\n        while (!sarkilist.isEmpty()) {\n            int a = r.nextInt(0, sarkilist.size());\n            sarkilist.get(a).oynat();\n            sarkilist.remove(a);\n        }\n\n    }\n\n}\n",
      "SiraliCalma.java": "import java.util.List;\n\npublic class SiraliCalma implements CalmaStratejisi {\n\n    @Override\n    public void cal(List<Sarki> sarkiListesi) {\n        for (Sarki curr : sarkiListesi) {\n            curr.oynat();\n        }\n    }\n\n}\n",
      "Sarki.java": "public abstract class Sarki {\n    String isim, sanatci;\n\n    public abstract void oynat();\n\n}\n",
      "RockcuOzelCalma.java": "import java.util.List;\n\npublic class RockcuOzelCalma implements CalmaStratejisi {\n\n    @Override\n    public void cal(List<Sarki> sarkiListesi) {\n        boolean rock = false;\n\n        for (Sarki curr : sarkiListesi) {\n            if (curr.getClass().getName().equals(\"RockSarki\")) {\n                if (!rock) {\n                    rock = true;\n                    System.out.println(\"[BILGI] Ses duzeyi: Yuksek\");\n                }\n            } else {\n                if (rock) {\n                    rock = false;\n                    System.out.println(\"[BILGI] Ses duzeyi: Normal\");\n                }\n            }\n            curr.oynat();\n        }\n    }\n\n}\n",
      "CalmaStratejisi.java": "import java.util.List;\n\npublic interface CalmaStratejisi {\n    public void cal(List<Sarki> sarkiListesi);\n\n}\n"
    },
    {
      "id": "8964453",
      "MuzikCalar.java": "import java.util.*;\npublic class MuzikCalar {\n    CalmaStratejisi strateji;\n\n    void setStrateji(CalmaStratejisi s)\n    {\n        strateji =s;\n    }\n    void muzikCal(List<Sarki> sarkiListesi)\n    {\n        strateji.cal(sarkiListesi);\n    }\n\n\n\n}",
      "Main.java": "import java.util.*;\npublic class Main {\n    public static void main(String[] args) {\n// Farkli turde sarkilar olusturuluyor\n        Sarki s1 = new MetalSarki(\"Years of Silence\", \"Thurisaz\", \"Aykiri ve atmosferik\");\n        Sarki s2 = new MetalSarki(\"Voice of the Soul\", \"Death\", \"Enstrumantal\");\n        Sarki s3 = new RockSarki(\"Small Mountain\", \"Midlake\");\n        Sarki s4 = new RockSarki(\"Ankara\", \"Vega\");\n        Sarki s5 = new KlasikSarki(\"Una Mattina\", \"Ludovico Einaudi\");\n// Sarkilari iceren calma listesi\n        List<Sarki> sarkiListesi = Arrays.asList(s1, s2, s3, s4, s5);\n// Muzik calar objesi\n        MuzikCalar muzikCalar = new MuzikCalar();\n// Sirali calma stratejisi\n        System.out.println(\"Sirali Calma:\");\n        muzikCalar.setStrateji(new SiraliCalma());\n        muzikCalar.muzikCal(sarkiListesi);\n// Karisik calma stratejisi\n        System.out.println(\"Karisik Calma:\");\n        muzikCalar.setStrateji(new KarisikCalma());\n        muzikCalar.muzikCal(sarkiListesi);\n// Rockcu ozel calma stratejisi\n        System.out.println(\"Rockcu Ozel Calma:\");\n        muzikCalar.setStrateji(new RockcuOzelCalma());\n        muzikCalar.muzikCal(sarkiListesi);\n// Metal sarkilarin ozelliklerini goster\n        System.out.println(\"Metal Ozellikleri:\");\n        for (Sarki sarki : sarkiListesi) {\n            if(sarki instanceof MetalSarki){\n                MetalSarki metal = (MetalSarki) sarki;\n                metal.gosterMetalOzellikleri();\n            }\n        }\n    }\n}\n",
      "KlasikSarki.java": "public class KlasikSarki extends Sarki{\n    public KlasikSarki(String isim,String sanatci )\n    {\n        this.isim = isim;\n        this.sanatci = sanatci;\n    }\n\n    void oynat()\n    {\n        System.out.println(\"[KLASIK] \" + sanatci + \" - \" + isim + \" (Hafif ve sakin\");\n\n    }\n}",
      "MetalSarki.java": "public class MetalSarki extends Sarki{\n    private String metalOzellik;\n\n    public MetalSarki(String isim, String sanatci, String metalOzellik)\n    {\n        this.isim = isim;\n        this.sanatci = sanatci;\n        this.metalOzellik = metalOzellik;\n    }\n\n    void gosterMetalOzellikleri()\n    {\n\n        System.out.println(sanatci + \" - \" + isim + \" [Ozellik: \" + metalOzellik + \"]\");\n    }\n\n    void oynat()\n    {\n        System.out.println(\"[METAL] \" + sanatci + \" - \" + isim + \" (\" + metalOzellik + \")\");\n\n    }\n\n\n}",
      "RockSarki.java": "public class RockSarki extends Sarki{\n\n    public RockSarki(String isim,String sanatci )\n    {\n        this.isim = isim;\n        this.sanatci = sanatci;\n    }\n\n    void oynat()\n    {\n        System.out.println(\"[ROCK] \" +sanatci + \" - \" + isim + \" (Huzurlu ve nostaljik\");\n\n    }\n\n}",
      "KarisikCalma.java": "import java.util.*;\npublic class KarisikCalma implements CalmaStratejisi\n{\n    public void cal(List<Sarki> sarkiListesi)\n    {\n        List<Sarki> sarkiListCpy = new ArrayList<>(sarkiListesi);\n        \n        Collections.shuffle(sarkiListCpy);\n\n        for(Sarki x : sarkiListCpy)\n        {\n            x.oynat();\n        }\n    }\n\n}",
      "SiraliCalma.java": "import java.util.*;\npublic class SiraliCalma implements CalmaStratejisi {\n\n    public void cal(List<Sarki> sarkiListesi)\n    {\n        for(Sarki x : sarkiListesi)\n        {\n            x.oynat();\n        }\n    }\n\n}",
      "Sarki.java": "public abstract class Sarki{\n    String isim;\n    String sanatci;\n\n    void oynat(){}\n\n}",
      "RockcuOzelCalma.java": "import java.util.*;\n\npublic class RockcuOzelCalma implements CalmaStratejisi{\n    private boolean sesSeviyesi = false;\n    //false:normal true:yuksek\n    public void cal(List<Sarki> sarkiListesi)\n    {\n        for(Sarki x : sarkiListesi)\n        {\n            if(x instanceof RockSarki)\n            {\n                if(sesSeviyesi == false)\n                {\n                    sesSeviyesi = true;\n                    System.out.println(\"[BILGI] Ses duzeyi: Yuksek\");\n                }\n            }\n            else\n            {\n                if(sesSeviyesi == true)\n                {\n                    System.out.println(\"[BILGI] Ses duzeyi: Normal\");\n                    sesSeviyesi =false;\n                }\n            }\n\n            x.oynat();\n        }\n    }\n\n}",
      "CalmaStratejisi.java": "import java.util.*;\npublic interface CalmaStratejisi {\n\n    void cal(List<Sarki> sarkiListesi);\n}"
    },
    {
      "id": "3659398",
      "MuzikCalar.java": "import java.util.*;\n\nclass MuzikCalar {\n    CalmaStratejisi strateji;\n\n    public void setStrateji(CalmaStratejisi s) {\n        strateji = s;\n    }\n\n    void muzikCal(List<Sarki> sarkiListesi) {\n        strateji.cal(sarkiListesi);\n    }\n\n}",
      "KlasikSarki.java": "\nclass KlasikSarki extends Sarki {\n    KlasikSarki(String isim, String sanatci) {\n        this.isim = isim;\n        this.sanatci = sanatci;\n    }\n\n    public void oynat() {\n        System.out.println(\"[KLASİK]\" + sanatci + \"-\" + isim + \" (Hafif ve Sakin)\");\n    }\n}",
      "MuzikCalarSorusu.java": "import java.util.*;\n\npublic class MuzikCalarSorusu {\n    public static void main(String[] args) {\n        // Farkli turde sarkilar olusturuluyor\n        Sarki s1 = new MetalSarki(\"Years of Silence\", \"Thurisaz\", \"Aykiri ve atmosferik\");\n        Sarki s2 = new MetalSarki(\"Voice of the Soul\", \"Death\", \"Enstrumantal\");\n        Sarki s3 = new RockSarki(\"Small Mountain\", \"Midlake\");\n        Sarki s4 = new RockSarki(\"Ankara\", \"Vega\");\n        Sarki s5 = new KlasikSarki(\"Una Mattina\", \"Ludovico Einaudi\");\n        // Sarkilari iceren calma listesi\n        List<Sarki> sarkiListesi = Arrays.asList(s1, s2, s3, s4, s5);\n        // Muzik calar objesi\n        MuzikCalar muzikCalar = new MuzikCalar();\n        // Sirali calma stratejisi\n        System.out.println(\"Sirali Calma:\");\n        muzikCalar.setStrateji(new SiraliCalma());\n        muzikCalar.muzikCal(sarkiListesi);\n        // Karisik calma stratejisi\n        System.out.println(\"Karisik Calma:\");\n        muzikCalar.setStrateji(new KarisikCalma());\n        muzikCalar.muzikCal(sarkiListesi);\n        // Rockcu ozel calma stratejisi\n        System.out.println(\"Rockcu Ozel Calma:\");\n        muzikCalar.setStrateji(new RockcuOzelCalma());\n        muzikCalar.muzikCal(sarkiListesi);\n        // Metal sarkilarin ozelliklerini goster\n        System.out.println(\"Metal Ozellikleri:\");\n        for (Sarki sarki : sarkiListesi) {\n            if (sarki instanceof MetalSarki) {\n                ((MetalSarki) sarki).gosterMetalOzellikleri();\n            }\n        }\n    }\n}\n",
      "MetalSarki.java": "\nclass MetalSarki extends Sarki {\n    String metalOzellik;\n\n    MetalSarki(String isim, String sanatci, String metalOzellik) {\n        this.isim = isim;\n        this.sanatci = sanatci;\n        this.metalOzellik = metalOzellik;\n    }\n\n    public void gosterMetalOzellikleri() {\n        System.out.println(sanatci + \" - \" + isim + \" [Ozellik: \" + metalOzellik + \"]\");\n    }\n\n    public void oynat() {\n        System.out.println(\"[METAL]\" + sanatci + \"-\" + isim + \" (\" + metalOzellik + \")\");\n\n    }\n}",
      "RockSarki.java": "\nclass RockSarki extends Sarki {\n\n    RockSarki(String isim, String sanatci) {\n        this.isim = isim;\n        this.sanatci = sanatci;\n    }\n\n    public void oynat() {\n        System.out.println(\"[ROCK]\" + sanatci + \"-\" + isim + \" (Huzurlu ve atmosferik)\");\n    }\n}",
      "KarisikCalma.java": "import java.util.*;\n\nclass KarisikCalma implements CalmaStratejisi {\n    public void cal(List<Sarki> sarkiListesi) {\n        boolean[] arr = { false, false, false, false, false };\n        for (int i = 0; i < 5; i++) {\n            int a = (int) (Math.random() * 5);\n\n            if (arr[a] == false) {\n                sarkiListesi.get(a).oynat();\n                arr[a] = true;\n            } else\n                i--;\n\n        }\n    }\n\n}",
      "SiraliCalma.java": "import java.util.*;\n\nclass SiraliCalma implements CalmaStratejisi {\n    public void cal(List<Sarki> sarkiListesi) {\n        for (int i = 0; i < sarkiListesi.size(); i++) {\n            sarkiListesi.get(i).oynat();\n        }\n    }\n}",
      "Sarki.java": "abstract class Sarki {\n    String isim;\n    String sanatci;\n\n    abstract void oynat();\n}",
      "RockcuOzelCalma.java": "import java.util.*;\n\nclass RockcuOzelCalma implements CalmaStratejisi {\n    public void cal(List<Sarki> sarkiListesi) {\n        for (int i = 0; i < sarkiListesi.size(); i++) {\n            if (i == 0 && sarkiListesi.get(i) instanceof RockSarki) {\n                System.out.println(\"[BILGI] Ses duzeyi: Yuksek\");\n            }\n            if (i != 0) {\n                if (sarkiListesi.get(i - 1) instanceof RockSarki && !(sarkiListesi.get(i - 1) instanceof RockSarki))\n                    System.out.println(\"[BILGI] Ses duzeyi: Yuksek\");\n            }\n            if (i != 0) {\n                if (sarkiListesi.get(i) instanceof RockSarki && !(sarkiListesi.get(i) instanceof RockSarki))\n                    System.out.println(\"[BILGI] Ses duzeyi: Normal\\r\");\n            }\n\n            sarkiListesi.get(i).oynat();\n\n        }\n    }\n}",
      "CalmaStratejisi.java": "import java.util.*;\n\ninterface CalmaStratejisi {\n    void cal(List<Sarki> sarkiListesi);\n\n}\n"
    }
  ]
}