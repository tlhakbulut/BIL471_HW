{
  "questions": [
    "Kelime Sayıcı\nBIL 211 - Lab 3\n20 Şubat 2025\n1 Giriş\nBu laboratuvarda FileIOveExceptions kullanarak bir Kelime Sayıcı geliştireceğiz. Kelime Sayıcı , verilen\nbirmetindosyasındakibelirlikelimelerinkaçkezgeçtiğinisayarakbirçıktıdosyasınakaydedecekvebelirlenen\nhata durumlarında uygun çıktılar oluşturacaktır.\n2 Genel Program\nProgram, aşağıdaki sabit isimlere sahip iki giriş dosyası ile çalışacaktır:\n-kelimeler.txt – Aranacak kelimeleri içeren dosya.\n-metin.txt – Kelimelerin aranacağı metnin bulunduğu dosya.\nProgram, kelimeler.txt dosyasındaki her kelimenin metin.txt içinde kaç kez geçtiğini sayacak ve sonucu\nbir çıktı dosyasına kaydedecektir:\n-sonuc.txt – Her kelimenin kaç kez geçtiğini içeren çıktı dosyası.\nDosyalar,programınçalıştırıldığıdizindebulunmalıdır. Dosyaisimlerideğiştirilemez,programsadeceyukarıda\nbelirtilen isimlerle çalışacaktır.\nEğerkelimeler.txt içinde bulunan herhangi bir kelime, metin.txt içinde hiç geçmiyorsa, program bir hata\noluşturmalı ve stderr’e uygun bir mesaj yazmalıdır.\n3 FileIO\nProgram, dosya okuma ve yazma işlemleri için Java’nın java.io paketindeki sınıfları kullanacaktır (örn.,\nBufferredReader, Scanner, PrintWriter). Dosyaları okurken ve yazarken kullanacağınız FileIO sınıflarının\nseçimi size bırakılmıştır. İşlenmesi gereken dosyalar şunlardır:\n-kelimeler.txt dosyası okunmalıdır.\n-metin.txt dosyası okunmalıdır.\n-sonuc.txt dosyası oluşturulup yazılmalıdır.\nProgram,aşağıdakiolasıdosyahatalarınıoluşturmalıvehatalaroluştuğundastderr’ebelirlenenhatamesajlarını\nyazmalıdır:\n- Dosyabulunamıyorsa: \"HATA: kelimeler.txt bulunamadı.\" veya\"HATA: metin.txt bulunamadı.\"\n- Dosya boşsa: \"HATA: kelimeler.txt boş.\" veya\"HATA: metin.txt boş.\"\n4 Hata Yönetimi\nProgramda hata yönetimini düzenlemek için aşağıdaki özel hata türleri tanımlanacaktır. Bu hatalar tespit\nedildiğinde program hata kodu ile çıkış yapmalıdır (yani mainmetodunuz bu hataları atarak sonlanmalı)\nve hatalar stderr’e yazılmalıdır (programınızı hata atarak sonlandırırsanız Java bunu kendisi yapacaktır).\nBelirtilen hata mesajları ile birlikte Java’nın hata ile sonlanan programlar için oluşturduğu sınıf, metod, ve\nsatır gibi bilgiler bulunabilir.\n1\n\n4.1 Girdi hataları (InputException class)\nBu kategori, programın giriş dosyalarıyla ilgili karşılaşabileceği tüm hataları kapsar. Öğrenciler, dosya işlem-\nleriyle ilgili hata türlerini InputException sınıfından türetmelidir.\nAşağıdaki özel hata türleri tanımlanmalıdır:\n-DosyaBulunamadiException (extends InputException) : Dosya eksikse atılacak hata.\n- Hata mesajı: \"HATA: [dosya adı] bulunamadı.\"\n-BosDosyaException (extends InputException) : Dosya boşsa atılacak hata.\n- Hata mesajı: \"HATA: [dosya adı] boş.\"\n4.2 Kelime bulunamadı hatası (KelimeBulunamadiException class)\nEğerkelimeler.txt içinde bulunan en az bir kelime, metin.txt dosyasında hiç geçmiyorsa, program\nKelimeBulunamadiException hatasını atmalıdır. Hata yalnızca kelimeler.txt dosyasında bulunamayan\nilk kelime için atılır ve program sonlanır.\nBu hata oluştuğunda stderr’e şu mesaj yazılmalıdır:\n-\"HATA: [kelime] metinde bulunamadı.\"\nBu hata, doğrudan Exception sınıfından türetilecek ve InputException ile bağlantılı olmayacaktır.\n5 Dosya Formatları\nProgram üç farklı dosya ile çalışacaktır: kelimeler.txt (girdi),metin.txt (girdi) ve sonuc.txt (çıktı). Bu\ndosyaların formatı aşağıda belirtilmiştir.\n5.1 Girdi Dosyaları\nGirdi dosyaları düz metin ( .txt) formatında olacaktır ve her biri aşağıdaki gibi yapılandırılmış olmalıdır.\n5.1.1kelimeler.txt Formatı\nkelimeler.txt dosyası, her satırda bir kelime olacak şekilde düzenlenmelidir. Dosyada yalnızca harf karak-\nterleri bulunur. Kelimeler büyük/küçük harf duyarsız olarak aranacaktır.\nÖrnek İçerik:\nelma\narmut\nüzüm\nEğer dosya boşsa, program şu hatayı vermelidir:\nHATA: kelimeler.txt boş.\n5.1.2metin.txt Formatı\nmetin.txt dosyası, içinde aranacak kelimelerin geçebileceği serbest formatlı bir metin içermelidir. Dosya\niçinde noktalama işaretleri ve boşluklar bulunabilir.\nÖrnek İçerik:\nElma ve armut çok lezzetlidir. Elma suyu da çok faydalıdır.\nArmut yemek sağlığa iyi gelir. Üzüm de sağlıklı bir meyvedir.\nEğer dosya boşsa, program şu hatayı vermelidir:\nHATA: metin.txt boş.\n5.2 Çıktı Dosyası\nProgram, kelimelerin kaç kez geçtiğini gösteren bir çıktı dosyası ( sonuc.txt ) oluşturmalıdır.\n2\n\n5.2.1sonuc.txt Formatı\nsonuc.txt dosyası, her satırda kelimenin adı ve kaç kez geçtiği bilgisi olacak şekilde düzenlenmelidir. Format\nşu şekilde olmalıdır:\n[kelime] [geçme sayısı]\nKelime ve geçme sayısı arasında tek bir boşluk olmalıdır.\nÖrnek Çıktı ( sonuc.txt ):\nelma 2\narmut 2\nüzüm 1\n5.3 Özel Hata Durumları ve Çıktıları\nEğerkelimeler.txt içindekiherhangibirkelime metin.txt içindebulunamazsa, KelimeBulunamadiException\nhatası atılmalıdır ve stderr’e şu mesaj yazılmalıdır:\nHATA: üzüm metinde bulunamadı.\nBu hata oluştuğunda, yine de sonuc.txt dosyası oluşturulmalı ve bulunan kelimeler için normal çıktı yazıl-\nmalıdır. Ancak bulunamayan kelimeler çıktı dosyasına eklenmemelidir.\nÖrnek Durum: Eğerkelimeler.txt şu şekildeyse:\nelma\narmut\nmuz\nVemetin.txt şu şekildeyse:\nElma ve armut çok lezzetlidir. Elma suyu da çok faydalıdır.\nArmut yemek sağlığa iyi gelir. Üzüm de sağlıklı bir meyvedir.\nO zaman sonuc.txt şu şekilde olmalıdır:\nelma 2\narmut 2\nVe stderr’e şu mesaj yazılmalıdır:\nHATA: muz metinde bulunamadı.\n6 Gönderim Formatı\n- Labı bitirdiğinizde oluşturduğunuz tüm dosyaları sıkıştırın (zip, rar, 7z, tar, tar.gz formatlarından\nherhangi birisi uygun).\n- Sıkıştırılmış arşivin ismini Isim_Numara şeklinde isimlendirin (örn., JohnNash_181101014.zip).\n- İsimlendirdiğiniz arşivi canpolatog@gmail.com e-mail adresine \"Lab3 Gönderim\" başlıklı bir mail ile\ngönderin.\n3\n\nMetot Açıklama\nString(String s) sile aynı değere sahip bir string oluşturur.\nString(char[] a) a[]dizisindeki karakterlerle bir string oluşturur.\nint length() String içindeki karakter sayısını döndürür.\nchar charAt(int i) Belirtilen iindeksindeki karakteri döndürür.\nString substring(int i, int j) iilej-1arasındaki karakterleri içeren bir alt string döndürür.\nboolean contains(String substring) String’in substring ’i içerip içermediğini kontrol eder.\nboolean startsWith(String prefix) String’in prefixile başlayıp başlamadığını kontrol eder.\nboolean endsWith(String postfix) String’in postfix ile bitip bitmediğini kontrol eder.\nint indexOf(String pattern) pattern ifadesinin ilk geçtiği indeks değerini döndürür.\nint indexOf(String pattern, int i) iindeksinden sonraki ilk pattern konumunu döndürür.\nString concat(String t) String’in sonuna teklenmiş halini döndürür.\nint compareTo(String t) İki string’i karşılaştırır (sözlük sırasına göre).\nString toLowerCase() String’in tüm harflerini küçük harfe çevirir.\nString toUpperCase() String’in tüm harflerini büyük harfe çevirir.\nString replace(String a, String b) String içindeki a’larıbile değiştirir.\nString trim() String’in başındaki ve sonundaki boşlukları kaldırır.\nboolean matches(String regex) String’in belirtilen regexle eşleşip eşleşmediğini kontrol eder.\nString[] split(String delimiter) String’idelimiter kullanarak böler ve bir dizi döndürür.\nboolean equals(Object t) String’in değeri tile aynı mı diye kontrol eder.\nTable 1: Java String Sınıfı Metotları\n4"
  ],
  "answers": [
    {
      "id": "6094496",
      "KelimeBulunamadiException.java": "package lab111;\n\nclass KelimeBulunamadiException extends Exception {\n\t /**\n\t * \n\t */\n\tprivate static final long serialVersionUID = 1L;\n\n\tpublic KelimeBulunamadiException(String kelime) {\n\t     super(\"HATA: \" + kelime + \" metinde bulunamadı.\");\n\t }\n\t}",
      "BosDosyaException.java": "package lab111;\n\nclass BosDosyaException extends InputException {\n\t /**\n\t * \n\t */\n\tprivate static final long serialVersionUID = 1L;\n\n\tpublic BosDosyaException(String dosyaAdi) {\n\t     super(\"HATA: \" + dosyaAdi + \" boş.\");\n\t }\n\t}",
      "InputException.java": "package lab111;\n\nclass InputException extends Exception {\n\t /**\n\t * \n\t */\n\tprivate static final long serialVersionUID = 1L;\n\n\tpublic InputException(String message) {\n\t     super(message);\n\t }\n\t}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
      "DosyaBulunamadiException.java": "package lab111;\n\nclass DosyaBulunamadiException extends InputException {\n\t /**\n\t * \n\t */\n\tprivate static final long serialVersionUID = 1L;\n\n\tpublic DosyaBulunamadiException(String dosyaAdi) {\n\t     super(\"HATA: \" + dosyaAdi + \" bulunamadı.\");\n\t }\n\t}\n"
    },
    {
      "id": "4779274",
      "lab3.java": "// vaktim yetmediğinden classları ayrı dosyaya alamadım kusura bakmayın.\nimport java.io.BufferedReader;\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.FileNotFoundException;\nimport java.io.FileOutputStream;\nimport java.io.FileReader;\nimport java.io.IOException;\nimport java.io.PrintWriter;\nimport java.util.ArrayList;\nimport java.util.Scanner;\n\npublic class lab3 {\n    //stderrora YAZDIRAN tüm exceptionları mainden de throw ettim alt satırda.\n    public static void main(String[] args) throws IOException, DosyaBulunamadiException, BosDosyaException{\n        ArrayList<String> kelimelerDizisi = new ArrayList<String>();\n\n        try {\n            BufferedReader in = new BufferedReader(new FileReader(\"C:\\\\Users\\\\meren\\\\Desktop\\\\MuhammedErenÖner_221301009\\\\kelimeler.txt\"));\n            String word;\n            int i;\n            for(i=0;(word = in.readLine()) != null;i++) {\n                kelimelerDizisi.add(word);\n            }\n            in.close();\n            if (i==0) {\n                //direkt ilk iterasyonda null çıktıysa boş dosya hatası fırlat\n                throw new BosDosyaException(\"HATA: kelimeler.txt boş\");\n            }\n            //üst noktada kelimeler okundu ve arraylistine alındı.\n\n            BufferedReader metin = new BufferedReader(new FileReader(\"C:\\\\Users\\\\meren\\\\Desktop\\\\MuhammedErenÖner_221301009\\\\metin.txt\"));\n            ArrayList<String> linedizi = new ArrayList<>();\n            int j;\n            for(j=0;(word = metin.readLine()) != null;j++) {\n                kelimelerDizisi.add(word);\n            }\n            if (j==0) {\n                //direkt ilk iterasyonda null çıktıysa boş dosya hatası fırlat\n                throw new BosDosyaException(\"HATA: metin.txt boş\");\n            }\n            metin.close();\n            //burada da cümleler metinden alındı arraylistlere.\n\n            ArrayList<Integer> tekrarsayilari = new ArrayList<>();\n\n            //alttaki nested forları açıklıyorum:\n            //her bi kelime için alınan her satırı tarar, contains ise arttırıp kalan kısımda contains mi diye bakar, tekrar artar.\n            for (String kelime : kelimelerDizisi) {\n                int tekrar=0;\n                for (String dizin : linedizi) {\n                    if(dizin.contains(kelime)) {\n                        int index = 0;\n                        while(index < dizin.length()) {\n                            index = dizin.indexOf(kelime, index+kelime.length());\n                            tekrar++;\n                        }\n                    }\n                }\n                tekrarsayilari.add(tekrar);\n            }\n\n            //üst kısım sanırım eksik, DOĞRU HESAPLADIĞINI VARSAYARAK yazdırma aşamasına geçiyorum\n\n            FileOutputStream sonuc = new FileOutputStream(\"C:\\\\Users\\\\meren\\\\Desktop\\\\MuhammedErenÖner_221301009\\\\sonuc.txt\", true);\n            PrintWriter yaz = new PrintWriter(sonuc);\n\n            //i kelime sayısını tutuyordu, o yüzden üst sınır.\n            for(int kelimeNo=0; kelimeNo<i; kelimeNo++) {\n\n                //eğer total 0 ise hata fırlat\n                if(tekrarsayilari.get(kelimeNo) == 0) {\n                    throw new KelimeBulunamadiException(\"HATA: \"+ kelimelerDizisi.get(kelimeNo) + \" metinde bulunamadı.\")\n                }\n                yaz.println(kelimelerDizisi.get(kelimeNo) + \" \" + tekrarsayilari.get(kelimeNo));\n                // her bir kelime ve karşılık geldiği tekrar sayısını dosyaya yazdır.\n\n                \n            }\n            \n        }\n\n        catch(KelimeBulunamadiException k) {\n            System.out.println(k.getMessage());\n        }\n\n        catch(FileNotFoundException e) {\n            //dosya bulunmadıysa zaten zorunlu olarak FileNotFound fırlatıldı, ben de onu tutup bunu attım\n            throw new DosyaBulunamadiException(\"HATA: kelimeler.txt//metin.txt bulunamadı.\");\n            //zamanım kalmadığı için aynı try bloğunda ikisini de çektim ondan hata mesajı birlesik oldu :(\n        }\n\n    }\n}\n\n\n//exception classlarımda extra tanımlanacak bir şey yoktu sanırsam\nclass InputException extends Exception {\n    public InputException(String mesaj) {\n        super(mesaj);\n    }\n}\n\nclass DosyaBulunamadiException extends InputException {\n    public DosyaBulunamadiException(String mesaj) {\n        super(mesaj);\n    }\n}\n\nclass BosDosyaException extends InputException {\n    public BosDosyaException(String mesaj) {\n        super(mesaj);\n    }\n}\n\nclass KelimeBulunamadiException extends Exception {\n    public KelimeBulunamadiException(String mesaj) {\n        super(mesaj);\n    }\n}"
    },
    {
      "id": "5281670",
      "Main.java": "import java.io.*;\nimport java.util.*;\n\npublic class Main {\n\n    public static void main(String[] args) {\n\n        try {\n            \n            List<String> kelimeler = dosyaOku(\"kelimeler.txt\");\n            List<String> metin = dosyaOku(\"metin.txt\");\n\n           \n            int[] kelimeSayisi = kelimeleriSay(kelimeler, metin);\n\n            \n            dosyaYaz(\"sonuc.txt\", kelimeler, kelimeSayisi);\n        } \n        catch (InputException e) {\n            System.err.println(e.getMessage());\n        }\n\n    }\n\n\n    public static int[] kelimeleriSay(List<String> kelimeler, List<String> metin) throws KelimeBulunamadiException {\n        int[] kelimeSayisi = new int[kelimeler.size()];\n       \n        for (String satir : metin) {\n            String[] kelimelerDizisi = satir.toLowerCase().split(\"\\\\p{Punct}\");\n            for (int i = 0; i < kelimelerDizisi.length-1; i++) {\n                String removed = kelimelerDizisi[i].replaceAll(\"\\\\p{Punct}\" , \"\");\n                for (int j = 0; j < kelimeler.size(); j++) {\n                    if (removed.equals(kelimeler.get(j))) {\n                        kelimeSayisi[j]++;\n                    }\n                }\n            }\n        }\n    \n        for (int i = 0; i < kelimeler.size(); i++) {\n            if (kelimeSayisi[i] == 0) {\n                throw new KelimeBulunamadiException(kelimeler.get(i));\n            }\n        }\n    \n        return kelimeSayisi;\n    }\n    \n    public static List<String> dosyaOku(String dosyaAdi) throws InputException {\n        File dosya = new File(dosyaAdi);\n      \n        List<String> satirlar = new ArrayList<>();\n        \n        try (BufferedReader reader = new BufferedReader(new FileReader(dosya))) {\n            String satir;\n            while ((satir = reader.readLine()) != null) {\n                satir = satir.toLowerCase();\n                if (!satir.isEmpty()) {\n                    satirlar.add(satir);\n                }\n            }\n        } \n\n        catch (IOException e) {\n            System.err.println(\"dosya okunurken hata oldu\");\n        }\n    \n        if (satirlar.isEmpty()) {\n            throw new BosDosyaException(dosyaAdi);\n        }\n    \n        return satirlar;\n    }\n    \n    public static void dosyaYaz(String dosyaAdi, List<String> kelimeler, int[] kelimeSayilari) {\n        try (PrintWriter writer = new PrintWriter(new FileWriter(dosyaAdi))) {\n            for (int i = 0; i < kelimeler.size(); i++) {\n                if (kelimeSayilari[i] > 0) {\n                    writer.println(kelimeler.get(i) + \" \" + kelimeSayilari[i]);\n                }\n            }\n        } \n        \n        catch (IOException e) {\n            System.err.println(\"dosya yazilirken hata oldu\");\n        }\n    }\n    \n    \n}\n\n\n",
      "KelimeBulunamadiException.java": "\nclass KelimeBulunamadiException extends InputException{\n\n    public KelimeBulunamadiException(String kelime) {\n        super(\"HATA: \" + kelime + \" metinde bulunamadi\");\n        \n    } \n}\n",
      "BosDosyaException.java": "class BosDosyaException extends InputException{\n\n    public BosDosyaException(String dosyaAdi) {\n        super(\"HATA: \" + dosyaAdi + \" bos\");\n        \n    } \n}\n",
      "InputException.java": "\n\npublic class InputException extends Exception{\n    public InputException(String message){\n        super(message);\n    }\n}",
      "DosyaBulunamadiException.java": "\n\npublic class DosyaBulunamadiException extends InputException{\n   \n    public DosyaBulunamadiException(String dosyaAdi) {\n        super(\"HATA: \" + dosyaAdi + \" bulunamadi\");\n        \n    }\n\n}\n"
    },
    {
      "id": "2384475",
      "kelimesayaci.java": "package bil211lab3;\n\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.FileOutputStream;\nimport java.io.PrintWriter;\nimport java.util.ArrayList;\nimport java.util.Scanner;\n\npublic class kelimesayaci {\n    public static void main(String[] args) {\n        File file = new File(\"bil211lab3\\\\kelimeler.txt\");\n        File file2 = new File(\"bil211lab3\\\\metin.txt\");\n        ArrayList<String> klmlist = readkelime(file);\n        ArrayList<String> mtnlist = readmetin(file2);\n        writesonuc(\"bil211lab3\\\\sonuc.txt\", klmlist, method(klmlist, mtnlist));\n\n    }\n\n    static ArrayList<String> readkelime(File filename) {\n        ArrayList<String> strlist = new ArrayList<String>();\n        Scanner scan = null;\n        try {\n            scan = new Scanner(new FileInputStream(filename));\n            if (!filename.exists()) {\n                throw new DosyaBulunamadiException(filename.getName() + \"bulunamadı\");\n            }\n            while (scan.hasNext()) {\n                String x = scan.next().toLowerCase();\n                strlist.add(x);\n            }\n\n            return strlist;\n        } catch (DosyaBulunamadiException e) {\n            System.out.println(\"Hata: \" + e.getMessage());\n        } catch (Exception e) {\n            System.out.println(\"error \" + e.getMessage());\n\n        } finally {\n            scan.close();\n        }\n        return strlist;\n    }\n\n    static ArrayList<String> readmetin(File filename) {\n        ArrayList<String> strlist = new ArrayList<String>();\n        ArrayList<String> strlist2 = new ArrayList<String>();\n        Scanner scan = null;\n        try {\n            scan = new Scanner(new FileInputStream(filename));\n            if (!filename.exists()) {\n                throw new DosyaBulunamadiException(filename.getName() + \"bulunamadı\");\n            }\n\n            while (scan.hasNext()) {\n                String x = scan.next().toLowerCase();\n                strlist.add(x);\n            }\n            for (String s : strlist) {\n                s = s.replaceAll(\"\\\\p{Punct}\", \"\");\n                strlist2.add(s);\n\n            }\n\n            return strlist2;\n        } catch (DosyaBulunamadiException e) {\n            System.out.println(\"Hata: \" + e.getMessage());\n        } catch (Exception e) {\n            System.out.println(\"error \" + e.getMessage());\n        } finally {\n            scan.close();\n        }\n        return strlist2;\n    }\n\n    static void writesonuc(String filename, ArrayList<String> klmlist, int[] c) {\n        PrintWriter p = null;\n        try {\n            p = new PrintWriter(new FileOutputStream(filename));\n            for (int i = 0; i < klmlist.size(); i++) {\n                if (c[i] == 0) {\n                    throw new KelimeBulunamadiException(klmlist.get(i) + \" metinde bulunamadı.\");\n                } else {\n                    p.println(klmlist.get(i) + \" \" + c[i]);\n                }\n            }\n\n        } catch (KelimeBulunamadiException e) {\n            p.println(\"Hata: \" + e.getMessage());\n        } catch (Exception e) {\n            System.out.println(\"error\");\n        }\n\n        finally {\n            p.close();\n        }\n\n    }\n\n    static int[] method(ArrayList<String> klmlist, ArrayList<String> mtnlist) {\n        int[] count = new int[klmlist.size()];\n        for (int j = 0; j < klmlist.size(); j++) {\n            for (int i = 0; i < mtnlist.size(); i++) {\n                if (mtnlist.get(i).equals(klmlist.get(j))) {\n                    count[j]++;\n                }\n            }\n        }\n        return count;\n\n    }\n\n}\n\nclass InputException extends Exception {\n    public InputException(String message) {\n        super(message);\n    }\n\n}\n\nclass DosyaBulunamadiException extends InputException {\n    public DosyaBulunamadiException(String message) {\n        super(message);\n    }\n}\n\nclass BosDosyaException extends InputException {\n    public BosDosyaException(String message) {\n        super(message);\n    }\n\n}\n\nclass KelimeBulunamadiException extends Exception {\n    public KelimeBulunamadiException(String message) {\n        super(message);\n    }\n}\n"
    },
    {
      "id": "5628146",
      "KelimeSayici.java": "package lab3_1;\n\nimport java.io.*;\nimport java.util.*;\n\npublic class KelimeSayici {\n    public static void main(String[] args) {\n        try {\n            List<String> kelimeler = dosyaOku(\"kelimeler.txt\");\n            List<String> metin = dosyaOku(\"metin.txt\");\n\n            List<String> kelimeListesi = new ArrayList<>();\n            List<Integer> kelimeSayilari = new ArrayList<>();\n\n\n            for (String kelime : kelimeler) {\n                kelimeListesi.add(kelime.toLowerCase());\n                kelimeSayilari.add(0); \n            }\n\n            for (String satir : metin) {\n                String[] kelimelerSatir = satir.toLowerCase().split(\"\\\\W+\");\n                for (String kelime : kelimelerSatir) {\n                    for (int i = 0; i < kelimeListesi.size(); i++) {\n                        if (kelimeListesi.get(i).equals(kelime)) {\n                            kelimeSayilari.set(i, kelimeSayilari.get(i) + 1);\n                        }\n                    }\n                }\n            }\n\n            for (int i = 0; i < kelimeListesi.size(); i++) {\n                if (kelimeSayilari.get(i) == 0) {\n                    System.err.println(\"HATA: \" + kelimeListesi.get(i) + \" metinde bulunamadı.\");\n                }\n            }\n\n            dosyayaYaz(kelimeListesi, kelimeSayilari, \"sonuc.txt\");\n\n            System.out.println(\"İşlem tamamlandı. sonuc.txt dosyasını kontrol edin.\");\n        } catch (FileNotFoundException e) {\n            System.err.println(\"HATA: \" + e.getMessage());\n        } \n \n        catch (Exception e) {\n            System.err.println(\"HATA: \" + e.getMessage());\n        }\n    }\n    private static void checkFileEmpty(String filePath) throws BosDosyaException {\n        File file = new File(filePath);\n\n        if (file.length() == 0) {\n            throw new BosDosyaException(\"HATA: \" + filePath + \" boş.\");\n        }\n    }\n\n \n    private static List<String> dosyaOku(String dosyaAdi) throws IOException {\n        File file = new File(dosyaAdi);\n        if (!file.exists()) {\n            throw new FileNotFoundException(dosyaAdi + \" bulunamadı.\");\n        }\n\n        List<String> satirlar = new ArrayList<>();\n        try (BufferedReader br = new BufferedReader(new FileReader(file))) {\n            String satir;\n            while ((satir = br.readLine()) != null) {\n                if (!satir.trim().isEmpty()) {\n                    satirlar.add(satir.trim());\n                }\n            }\n        }\n\n        if (satirlar.isEmpty()) {\n            throw new IOException(\"HATA: \" + dosyaAdi + \" boş.\");\n        }\n\n        return satirlar;\n    }\n\n   \n    private static void dosyayaYaz(List<String> kelimeler, List<Integer> sayilar, String dosyaAdi) throws IOException {\n        try (PrintWriter pw = new PrintWriter(new FileWriter(dosyaAdi))) {\n            for (int i = 0; i < kelimeler.size(); i++) {\n                if (sayilar.get(i) > 0) {\n                    pw.println(kelimeler.get(i) + \" \" + sayilar.get(i));\n                }\n            }\n        }\n    }\n}\n\n\n",
      "KelimeBulunamadiException.java": "package lab3_1;\n\nclass KelimeBulunamadiException extends Exception {\n    public KelimeBulunamadiException(String kelime) {\n        super(\"HATA: \" + kelime + \" metinde bulunamadı.\");\n    }\n}\n\n\n",
      "DosyaBulunamadıException.java": "package lab3_1;\n\nclass DosyaBulunamadiException extends InputException {\n    public DosyaBulunamadiException(String dosyaAdi) {\n        super(\"HATA: \" + dosyaAdi + \" bulunamadı.\");\n    }\n}\n\n\n",
      "BosDosyaException.java": "package lab3_1;\n\nclass BosDosyaException extends InputException {\n    public BosDosyaException(String dosyaAdi) {\n        super(\"HATA: \" + dosyaAdi + \" boş.\");\n    }\n}\n\n\n",
      "InputException.java": "package lab3_1;\n\n\tclass InputException extends Exception {\n\t    public InputException(String message) {\n\t        super(message);\n\t    }\n\t}\n\n\n"
    },
    {
      "id": "2786122",
      "KelimeSayici.java": "import java.io.BufferedReader;\nimport java.io.BufferedWriter;\nimport java.io.FileReader;\nimport java.io.FileWriter;\nimport java.io.IOException;\nimport java.util.ArrayList;\n\npublic class KelimeSayici {\n    static ArrayList<String[]> kelimelerList = new ArrayList<String[]>();\n    static ArrayList<String[]> metinList = new ArrayList<String[]>();\n    public static void main(String[] args) throws DosyaBulunamadiException, BosDosyaException, KelimeBulunamadiException, IOException {\n        kelimelerReader();\n        metinReader();\n        metinKucultucu();\n        metinNoktalamaSilici();\n        kacTaneVar();\n    }\n    public static void kelimelerReader() throws DosyaBulunamadiException,BosDosyaException {\n        try(BufferedReader reader = new BufferedReader(new FileReader(\"kelimeler.txt\"))) {\n            String line;\n            int kelimeSayisi = 0;\n            while ((line = reader.readLine()) != null) {\n                kelimelerList.add(line.split(\" \"));\n                kelimeSayisi += kelimelerList.size();\n            }\n            if (kelimeSayisi == 0) {\n                throw new BosDosyaException(\"HATA: kelimeler.txt bos.\");\n            }\n        } \n        catch (IOException e) {\n            throw new DosyaBulunamadiException(\"HATA: kelimeler.txt bulunamadi.\");\n        }\n    }    \n    public static void metinReader() throws DosyaBulunamadiException,BosDosyaException {\n        try(BufferedReader reader = new BufferedReader(new FileReader(\"metin.txt\"))) {\n            String line;\n            int kelimeSayisi = 0;\n            while ((line = reader.readLine()) != null) {\n                metinList.add(line.split(\" \"));\n                kelimeSayisi += metinList.size();\n            } \n            if (kelimeSayisi == 0) {\n                throw new BosDosyaException(\"HATA: metin.txt bos.\");\n            } \n        }\n        catch (IOException e) {\n            throw new DosyaBulunamadiException(\"HATA: metin.txt bulunamadi.\");\n        }\n    }   \n\n    public static void metinKucultucu() {\n        for (int i = 0; i < metinList.size(); i++) {\n            for (int j = 0; j < metinList.get(i).length; j++) {\n                metinList.get(i)[j] = metinList.get(i)[j].toLowerCase();\n            }\n        }\n    }\n\n    public static void kelimeKucultucu() {\n        for (int i = 0; i < kelimelerList.size(); i++) {\n            for (int j = 0; j < kelimelerList.get(i).length; j++) {\n                kelimelerList.get(i)[j] = kelimelerList.get(i)[j].toLowerCase();\n            }\n        }\n    }\n\n    public static void metinNoktalamaSilici() {\n        for (int i = 0; i < metinList.size(); i++) {\n            for (int j = 0; j < metinList.get(i).length; j++) {\n                metinList.get(i)[j] = metinList.get(i)[j].replaceAll(\"[^a-zA-Z]\", \"\");\n            }\n        }\n    }\n\n    public static void kacTaneVar() throws KelimeBulunamadiException, IOException {\n        int kelimeSayisi = 0;\n        for (int x = 0; x < kelimelerList.size(); x++) {\n            for (int y = 0; y < kelimelerList.get(x).length; y++) {\n                for (int z = 0; z < metinList.size(); z++) {\n                    for (int w = 0; w < metinList.get(z).length; w++) {\n                        if (kelimelerList.get(x)[y].equals(metinList.get(z)[w])) {\n                            kelimeSayisi++;\n                        }\n                    }\n                }\n                if(kelimeSayisi != 0) {\n                    BufferedWriter writer = new BufferedWriter(new FileWriter(\"sonuc.txt\",true));\n                    writer.write(kelimelerList.get(x)[y] + \"  \" + kelimeSayisi);\n                    writer.newLine();\n                    writer.close();\n                    kelimeSayisi = 0;\n                }\n                else { \n                    throw new KelimeBulunamadiException(\"HATA: \" + kelimelerList.get(x)[y] + \" metinde bulunamadi.\");\n                }    \n            }\n        }\n    }\n}",
      "KelimeBulunamadiException.java": "public class KelimeBulunamadiException extends Exception {\n    public KelimeBulunamadiException(String message) {\n        super(message);\n    }\n}\n",
      "BosDosyaException.java": "public class BosDosyaException extends InputException{\n    public BosDosyaException(String message) {\n        super(message);\n    }\n}\n",
      "InputException.java": "public class InputException extends Exception {\n    public InputException(String message) {\n        super(message);\n    }\n}\n",
      "DosyaBulunamadiException.java": "public class DosyaBulunamadiException extends InputException{\n    public DosyaBulunamadiException(String message) {\n        super(message);\n    }\n    \n}\n"
    },
    {
      "id": "6914659",
      "KelimeSayaci.java": "import java.io.*;\nimport java.util.*;\npublic class KelimeSayaci{\n    public static void main(String[] args){\n        try{\n            List<String>kelimeler = dosyayiOku(\"kelimeler.txt\");\n            List<String>metin = dosyayiOku(\"metin.txt\");\n            List<String>kelimeListesi = new ArrayList<>();\n            List<Integer>kelimeSayilari = new ArrayList<>();\n            boolean kelimeBulunamadi = false; //yani kelime bulunmus kabul et.\n            String ilkBulunamayanKelime = null;\n            for(String k: kelimeler){\n                int sayac = kelimeSay(metin, k);\n                if((sayac == 0) && (!kelimeBulunamadi)){\n                    kelimeBulunamadi = true; //kelimenin bulunamadigini dogrular.\n                    ilkBulunamayanKelime = k;\n                }\n                if(sayac > 0){\n                    kelimeListesi.add(k);\n                    kelimeSayilari.add(sayac);\n                }\n            }\n            sonucDosyasiniYaz(\"sonuc.txt\", kelimeListesi, kelimeSayilari); //sonuc.txt'ye yazacak.\n            if(kelimeBulunamadi){ //kelimeBulunamadi == true oldugunda exception firlat.\n                throw new KelimeBulunamadiException(ilkBulunamayanKelime);\n            }\n        }catch(InputException e){\n            System.err.println(e.getMessage());\n        }catch(KelimeBulunamadiException e){\n            System.err.println(e.getMessage());\n        }catch(IOException e){\n            System.err.println(\"HATA: Dosya okuma/yazma hatası oluştu.\");\n        }\n    }\n    public static List<String>dosyayiOku(String dosyaAdi) throws InputException, IOException{ //checked exceptionlar\n        File f = new File(dosyaAdi);\n        if (!f.exists()){ //dosya bulunamazsa exception firlat.\n            throw new DosyaBulunamadiException(dosyaAdi);\n        }\n        List<String>satir = new ArrayList<>();\n        try(BufferedReader br = new BufferedReader(new FileReader(f))){\n            String str;\n            while((str = br.readLine()) != null){\n                if(!str.trim().isEmpty()) {\n                    satir.add(str.trim().toLowerCase());\n                }\n            }\n        }\n        if(satir.isEmpty()){\n            throw new BosDosyaException(dosyaAdi);\n        }\n        return satir;\n    }\n    public static int kelimeSay(List<String>metin, String kelime){\n        int sayac = 0;\n        for(String str: metin){\n            String[]kelimeler = str.toLowerCase().split(\"\\\\W+\");\n            for(String k: kelimeler){\n                if (k.equals(kelime)){\n                    sayac++;\n                }\n            }\n        }\n        return sayac;\n    }\n    public static void sonucDosyasiniYaz(String dosyaAdi, List<String>kelimeListesi, List<Integer>kelimeSayilari) throws IOException{\n        try(PrintWriter wrt = new PrintWriter(new FileWriter(dosyaAdi))){\n            for(int i=0; i<kelimeListesi.size(); i++){\n                if(kelimeSayilari.get(i) > 0){ //Eger kelime metinde gectiyse yazdirir\n                    wrt.println(kelimeListesi.get(i) + \" \" + kelimeSayilari.get(i));\n                }\n            }\n            wrt.flush();\n        }\n    }\n}\n\n",
      "KelimeBulunamadiException.java": "public class KelimeBulunamadiException extends Exception{\n    public KelimeBulunamadiException(String kelime){\n        super(\"HATA: \" + kelime + \" metinde bulunamadı.\");\n    }\n}\n",
      "BosDosyaException.java": "public class BosDosyaException extends InputException{\n    public BosDosyaException(String fileName){\n        super(\"HATA: \" + fileName + \" boş.\");\n    }\n}\n",
      "InputException.java": "public class InputException extends Exception{\n    public InputException(String message){\n        super(message);\n    }\n}",
      "DosyaBulunamadiException.java": "public class DosyaBulunamadiException extends InputException{\n    public DosyaBulunamadiException(String fileName){\n        super(\"HATA: \" + fileName + \" bulunamadı.\");\n    }\n}\n"
    },
    {
      "id": "2179244",
      "KelimeSayaci.java": "import java.io.*;\nimport java.util.*;\n\nclass InputException extends Exception {\n    public InputException(String message) {\n        super(message);\n    }\n}\n\n\nclass FileNotFoundException extends InputException {\n    public FileNotFoundException(String dosyaAdi) {\n        super(\"HATA: \" + dosyaAdi + \" bulunamadı.\");\n    }\n}\n\nclass EmptyFileException extends InputException {\n    public EmptyFileException(String dosyaAdi) {\n        super(\"HATA: \" + dosyaAdi + \" boş.\");\n    }\n}\n\nclass WordNotFoundException extends Exception {\n    public WordNotFoundException(String kelime) {\n        super(\"HATA: \" + kelime + \" metinde bulunamadı.\");\n    }\n}\n\npublic class KelimeSayaci {\n    public static void main(String[] args) {\n        try {\n            List <String> kelimeler = readWordsFromFile(\"kelimeler.txt\");\n            List<String> metin = readWordsFromFile(\"metin.txt\");\n\n            //word count?\n            Map <String, Integer> kelimeSayilari= countWords(\"metin.txt\", kelimeler);\n\n            //write the result to the file\n            writeResult(\"sonuc.txt\",kelimeSayilari);\n        }\n        catch(InputException | WordNotFoundException e){\n            System.err.println(e.getMessage());\n        }\n    }\n    // kelimeler.txt read\n    private static List <String> readWordsFromFile(String fileName) throws InputException{\n        File file= new File(fileName);\n        if(!file.exists()) throw new FileNotFoundException(fileName);\n\n        List <String> kelimeler=new ArrayList<>();\n        try {\n            BufferedReader reader= new BufferedReader(new FileReader(file));\n            String line;\n            while((line=reader.readLine())!=null){\n                kelimeler.add(line.trim().toLowerCase());\n            }\n        } catch (IOException e) {\n            throw new InputException(\"HATA: Dosya okunamadı: \"+fileName);\n        }\n\n        if(kelimeler.isEmpty()) throw new EmptyFileException(fileName);\n        return kelimeler;\n \n    }\n    // metin.txt read\n    private static Map <String, Integer> countWords(String fileName, List<String> kelimeler) throws InputException, WordNotFoundException {\n        File file= new File(fileName);\n        if(!file.exists()) throw new FileNotFoundException(fileName);\n\n        StringBuilder metin= new StringBuilder();\n        try(BufferedReader reader=new BufferedReader(new FileReader(file))){\n            String line;\n            while((line=reader.readLine())!=null){\n                metin.append(line).append(\"\\n\");\n            }\n        } catch (IOException e) {\n            throw new InputException(\"HATA: Dosya okunamadı: \" + fileName);\n        }\n        if (metin.toString().trim().isEmpty()) throw new EmptyFileException(fileName);\n        return kelimeleriSay(metin.toString(), kelimeler);\n    }\n    // kelime kaç kez\n    private static Map <String, Integer> kelimeleriSay(String metin, List<String> kelimeler) throws WordNotFoundException{\n        Map <String, Integer> kelimeSayilari= new HashMap<>();\n        for(String kelime: kelimeler){\n            int count=0;\n            int index=0;\n            while((index=metin.indexOf(kelime,index))!=-1){\n                index+=kelime.length();\n                count++;\n            }\n            if(count>0) kelimeSayilari.put(kelime,count);\n            else throw new WordNotFoundException(kelime);\n        }\n        return kelimeSayilari;\n\n    }\n\n    //write the result to the file\n    private static void writeResult(String fileName, Map<String, Integer> kelimeSayilari) throws FileNotFoundException {\n        try (PrintWriter writer = new PrintWriter(fileName)) {\n            for (Map.Entry<String, Integer> entry : kelimeSayilari.entrySet()) {\n                writer.println(entry.getKey() + \": \" + entry.getValue());\n            }\n        } catch (IOException e) {\n            System.err.println(\"HATA: Dosya yazılamadı: \" + fileName);\n        }\n    }\n    \n}\n"
    },
    {
      "id": "6429016",
      "KelimeSayici.java": "import java.io.*;\nimport java.util.*;\n\npublic class KelimeSayici {\n    public static void main(String[] args) {\n        try {\n            List<String> kelimeler = dosyaOku(\"Top\\\\kelimeler.txt\");\n            String metin = dosyaOkuString(\"Top\\\\metin.txt\");\n            \n            List<String> bulunanKelimeler = new ArrayList<>();\n            List<Integer> kelimeSayilari = new ArrayList<>();\n            List<String> eksikKelimeler = new ArrayList<>();\n            \n            \n            for (String kelime : kelimeler) {\n                int sayac = kelimeSay(metin, kelime);\n                if (sayac == 0) {\n                    eksikKelimeler.add(kelime);\n                }\n                bulunanKelimeler.add(kelime);\n                kelimeSayilari.add(sayac);\n            }\n            \n            dosyayaYaz(\"sonuc.txt\", bulunanKelimeler, kelimeSayilari);\n            \n            if (eksikKelimeler.isEmpty()) {\n                throw new KelimeBulunamadiException(eksikKelimeler.get(0));\n            }\n            \n        } catch (InputException | KelimeBulunamadiException e) {\n            System.err.println(e.getMessage());\n        }\n    }\n    \n    private static List<String> dosyaOku(String dosyaAdi) throws InputException {\n        File dosya = new File(dosyaAdi);\n        if (!dosya.exists()) {\n            throw new DosyaBulunamadiException(dosyaAdi);\n        }\n        \n        List<String> kelimeler = new ArrayList<>();\n        try (BufferedReader reader = new BufferedReader(new FileReader(dosya))) {\n            String satir;\n            while ((satir = reader.readLine()) != null) {\n                kelimeler.add(satir.trim().toLowerCase());\n            }\n        } catch (IOException e) {\n            throw new InputException(\"Dosya okunurken hata oluştu: \" + dosyaAdi);\n        }\n        \n        if (kelimeler.isEmpty()) {\n            throw new BosDosyaException(dosyaAdi);\n        }\n        \n        return kelimeler;\n    }\n    \n    private static String dosyaOkuString(String dosyaAdi) throws InputException {\n        File dosya = new File(dosyaAdi);\n        if (!dosya.exists()) {\n            throw new DosyaBulunamadiException(dosyaAdi);\n        }\n        \n        StringBuilder metin = new StringBuilder();\n        try (BufferedReader br = new BufferedReader(new FileReader(dosya))) {\n            String satir;\n            while ((satir = br.readLine()) != null) {\n                metin.append(satir.toLowerCase()).append(\" \");\n            }\n        } catch (IOException e) {\n            throw new InputException(\"Dosya okunurken hata oluştu:\" + dosyaAdi);\n        }\n        \n        if (metin.toString().trim().isEmpty()) {\n            throw new BosDosyaException(dosyaAdi);\n        }\n        \n        return metin.toString();\n    }\n    \n    private static int kelimeSay(String metin, String kelime) {\n        String removed = metin.replaceAll(\"\\\\p{Punct}\", \"\");\n        String[] kelimeler = removed.split(\" \");\n        int sayac = 0;\n        for (String kelimeMetin : kelimeler) {\n            if (kelimeMetin.equals(kelime)) {\n                sayac++;\n            }\n        }\n        return sayac;\n    }\n    \n    private static void dosyayaYaz(String dosyaAdi, List<String> bulunanKelimeler, List<Integer> kelimeSayilari) {\n        try (PrintWriter yazici = new PrintWriter(new FileWriter(dosyaAdi))) {\n            for (int i = 0; i < bulunanKelimeler.size(); i++) {\n                if (kelimeSayilari.get(i) > 0) {\n                    yazici.println(bulunanKelimeler.get(i) + \" \" + kelimeSayilari.get(i));\n                }\n            }\n        } catch (IOException e) {\n            System.err.println(\"HATA: [\" + dosyaAdi + \"] yazilirken hata oluştu.\");\n        }\n    }\n}\n",
      "KelimeBulunamadiException.java": "public class KelimeBulunamadiException extends Exception {\n    public KelimeBulunamadiException(String kelime) {\n        super(\"HATA: [\" + kelime + \"] metinde bulunamadi\");\n    }\n}",
      "BosDosyaException.java": "public class BosDosyaException extends InputException {\n    public BosDosyaException(String dosyaAdi) {\n        super(\"HATA: [\" + dosyaAdi + \"] boş.\");\n    }\n}\n\n",
      "InputException.java": "public class InputException extends Exception{\n\n    \n        public InputException(String message) {\n            super(message);\n        }\n    \n    \n}",
      "DosyaBulunamadiException.java": "class DosyaBulunamadiException extends InputException  {\n    public DosyaBulunamadiException(String dosyaAdi) {\n\n        super(\"HATA: [\" + dosyaAdi + \"] bulunamadi.\");\n    }\n}"
    },
    {
      "id": "6343320",
      "Lab3.java": "package pckg;\n\nimport java.io.File;\nimport java.util.Scanner;\n\npublic class Lab3 {\n\n\tpublic static void main(String[] args)  {\n\t\t\n\t\tFile file = new File (\"kelimeler.txt\");\n\t\tScanner scan = new Scanner(file);\n\t\t\n\t\tString kelimeler = \"\";\n\t\ttry{\n\t\t\twhile(scan.hasNext()) {\n\t\t\t\tkelimeler = kelimeler.concat(scan.nextLine() + \"\\n\");\n\t\t\t}\n\t\t}catch(Exception e) {\n\t\t\tSystem.out.println(e.getMessage());\n\t\t}\n\t\t\n\t\tFile file2 = new File(\"metin.txt\");\n\t\tScanner sc = new Scanner(file2);\n\t\t\n\t\tString metin = \"\";\n\t\ttry {\n\t\t\twhile(sc.hasNext()) {\n\t\t\t\tmetin = metin.concat(sc.hasNextLine() + \" \");\n\t\t\t}\n\t\t}catch(Exception e) {\n\t\t\tSystem.out.println(e.getMessage());\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\t\n\n\t}\n\n}\n\nclass DosyaBulunamadıException extends Exception{\n\t\n\tpublic DosyaBulunamadıException(String message) throws DosyaBulunamadıException {\n\t\tsuper(message);\n\t\tthrow new DosyaBulunamadıException(\"HATA: \" + \"dosya adı\" + \" bulunamadı.\");\n\t}\n}\n\nclass BosDosyaException extends Exception{\n\t\n\tpublic BosDosyaException(String message) throws BosDosyaException {\n\t\tsuper(message);\n\t\tthrow new BosDosyaException(\"HATA: \" + \"dosya adı\" + \" boş.\");\n\t}\n}\n\nclass KelimeBulunamadıException extends Exception {\n\t\n\tpublic KelimeBulunamadıException(String message) throws KelimeBulunamadıException {\n\t\tsuper(message);\n\t\tthrow new KelimeBulunamadıException(\"HATA: \" + \"kelime adı\" + \" metinde bulunamadı.\");\n\t}\n}\n\n\n"
    },
    {
      "id": "7374887",
      "WordCounter.java": "import java.io.File;\nimport java.io.FileInputStream;\nimport java.io.FileNotFoundException;\nimport java.io.FileOutputStream;\nimport java.io.PrintWriter;\nimport java.util.Scanner;\n\npublic class WordCounter {\n\n    public static void main(String[] args)\n            throws BosDosyaException, DosyaBulunamadiException, KelimeBulunamadiException {\n\n        File kelimeler = null;\n        Scanner kelimeInput = null;\n        File metin = null;\n        Scanner metinInput = null;\n        File sonuc = null;\n        PrintWriter sonucOutput = null;\n        try {\n            kelimeler = new File(\"C:\\\\Users\\\\osman\\\\OneDrive\\\\Desktop\\\\Lab3\\\\kelimeler.txt\");\n            kelimeInput = new Scanner(new FileInputStream(kelimeler));\n        } catch (FileNotFoundException e) {\n\n            throw new DosyaBulunamadiException(\"HATA: kelimeler.txt bulunamadi.\");\n        }\n        try {\n            metin = new File(\"C:\\\\Users\\\\osman\\\\OneDrive\\\\Desktop\\\\Lab3\\\\metin.txt\");\n            metinInput = new Scanner(new FileInputStream(metin));\n        } catch (FileNotFoundException e) {\n            kelimeInput.close();\n            throw new DosyaBulunamadiException(\"HATA: metin.txt bulunamadi.\");\n\n        }\n\n        try {\n            sonuc = new File(\"C:\\\\Users\\\\osman\\\\OneDrive\\\\Desktop\\\\Lab3\\\\sonuc.txt\");\n            sonucOutput = new PrintWriter(new FileOutputStream(sonuc));\n        } catch (FileNotFoundException e) {\n            kelimeInput.close();\n            metinInput.close();\n            throw new DosyaBulunamadiException(\"HATA: sonuc.txt bulunamadi.\");\n        }\n\n        String metinS = \"\";\n        String s = \"\";\n\n        while (metinInput.hasNext()) {\n            metinS += metinInput.nextLine() + \" \";\n        }\n        while (kelimeInput.hasNext()) {\n            s += kelimeInput.nextLine() + \" \";\n        }\n        metinS = metinS.toLowerCase();\n        s = s.toLowerCase();\n        if (s.length() == 0) {\n            kelimeInput.close();\n            metinInput.close();\n            sonucOutput.close();\n            throw new BosDosyaException(\"HATA: kelimeler.txt bos.\");\n\n        }\n        if (metinS.length() == 0) {\n            kelimeInput.close();\n            metinInput.close();\n            sonucOutput.close();\n            throw new BosDosyaException(\"HATA: metin.txt bos.\");\n\n        }\n\n        String removedMetin = metinS.replaceAll(\"\\\\p{Punct}\", \" \");\n        String[] words = s.split(\" \");\n        String[] metinA = removedMetin.split(\" \");\n        int[] counts = new int[words.length];\n\n        for (int i = 0; i < words.length; i++) {\n            for (int j = 0; j < metinA.length; j++) {\n                if (words[i].equals(metinA[j])) {\n                    counts[i]++;\n                }\n            }\n        }\n        for (int i = 0; i < counts.length; i++) {\n            if (counts[i] != 0) {\n                sonucOutput.println(words[i] + \" \" + counts[i]);\n            } else {\n                kelimeInput.close();\n                metinInput.close();\n                sonucOutput.close();\n                throw new KelimeBulunamadiException(\"HATA: \" + words[i] + \" metinde bulunamadi.\");\n            }\n        }\n        sonucOutput.close();\n        kelimeInput.close();\n        metinInput.close();\n\n    }\n\n}",
      "KelimeBulunamadiException.java": "public class KelimeBulunamadiException extends Exception {\n\n    KelimeBulunamadiException() {\n        super();\n    }\n\n    KelimeBulunamadiException(String message) {\n        super(message);\n    }\n}",
      "BosDosyaException.java": "import java.io.File;\n\npublic class BosDosyaException extends InputException {\n\n    BosDosyaException() {\n        super();\n    }\n\n    BosDosyaException(String message) {\n        super(message);\n    }\n\n}",
      "InputException.java": "public class InputException extends Exception {\n\n    InputException() {\n        super();\n    }\n\n    InputException(String message) {\n        super(message);\n    }\n}",
      "DosyaBulunamadiException.java": "import java.io.File;\n\npublic class DosyaBulunamadiException extends InputException {\n\n    DosyaBulunamadiException() {\n        super();\n    }\n\n    DosyaBulunamadiException(String message) {\n        super(message);\n    }\n}"
    },
    {
      "id": "5187413",
      "KelimeSayaci.java": "import java.io.FileInputStream;\nimport java.io.FileNotFoundException;\nimport java.io.FileOutputStream;\nimport java.io.PrintWriter;\nimport java.util.ArrayList;\nimport java.util.Scanner;\n\npublic class KelimeSayaci {\n    public static void main(String[] args) {\n        okuyucu(\"metin.txt\");\n        kelimeSayac(\"metin.txt\", \"kelimeler.txt\");\n    }\n\n    public static String okuyucu(String fileName) {\n        String str = \"\";\n        Scanner scan = null;\n        String removed = \"\";\n        try {\n            scan = new Scanner(new FileInputStream(fileName));\n\n            if (!scan.hasNextLine()) {\n                throw new BosDosyaException();\n            }\n            while (scan.hasNextLine()) {\n\n                str = scan.nextLine();\n\n            }\n            scan.close();\n\n            removed = str.replaceAll(\"\\\\p{Punct}\", \"\");\n            return removed;\n        } catch (FileNotFoundException e) {\n            try {\n                throw new DosyaBulunamadiException();\n            } catch (DosyaBulunamadiException ex) {\n                ex.getMessage();\n            }\n\n        } catch (BosDosyaException e) {\n            e.getMessage();\n\n        }\n        return null;\n\n    }\n\n    public static ArrayList<String> okuyucu2(String fileName) {\n        ArrayList<String> removed = new ArrayList<>();\n        Scanner scan = null;\n\n        try {\n            scan = new Scanner(new FileInputStream(fileName));\n            if (!scan.hasNextLine()) {\n                throw new BosDosyaException();\n\n            }\n            while (scan.hasNextLine()) {\n\n                removed.add(scan.nextLine());\n\n            }\n\n            scan.close();\n            return removed;\n\n        } catch (FileNotFoundException e) {\n            try {\n                throw new DosyaBulunamadiException();\n            } catch (DosyaBulunamadiException ex) {\n                ex.getMessage();\n            }\n\n        } catch (BosDosyaException e) {\n            e.getMessage();\n\n        }\n        return null;\n\n    }\n\n    public void kelimeler() {\n        PrintWriter kelime = null;\n        try {\n            kelime = new PrintWriter(new FileOutputStream(\"sonuc.txt\"));\n        } catch (FileNotFoundException e) {\n            try {\n                throw new DosyaBulunamadiException();\n            } catch (DosyaBulunamadiException ex) {\n                ex.getMessage();\n            }\n        }\n    }\n\n    public static void kelimeSayac(String file1, String file2) {\n        if (file1 == null || file2 == null) {\n            return;\n        }\n        String str1 = okuyucu(file1);\n        ArrayList<String> str2 = okuyucu2(file2);\n\n        int counts[] = new int[str2.size()];\n        int counter = 0;\n        for (int i = 0; i < str2.size(); i++) {\n            int l = str2.get(i).length();\n            counts[i] = counter;\n            counter = 0;\n            for (int j = 0; j < str1.length(); j++) {\n\n                if (str2.get(i).equals(str1.substring(j, l))) {\n                    counter++;\n                }\n\n            }\n\n        }\n        int total = 0;\n        for (int i = 0; i < counts.length; i++) {\n            total += counts[i];\n        }\n        try {\n            if (total == 0)\n                throw new KelimeBulunamadiException();\n        } catch (KelimeBulunamadiException e) {\n            e.getMessage();\n        }\n    }\n}\n",
      "KelimeBulunamadiException.java": "public class KelimeBulunamadiException extends Exception {\n    public KelimeBulunamadiException() {\n        super();\n    }\n\n    public KelimeBulunamadiException(String e) {\n        System.out.println(\"HATA: \" + e + \" metinde bulunamadi\");\n    }\n}\n",
      "BosDosyaException.java": "public class BosDosyaException extends InputException {\n    public BosDosyaException() {\n        super();\n    }\n\n    public BosDosyaException(String e) {\n        super(e + \" bos\");\n    }\n}\n",
      "InputException.java": "\npublic class InputException extends Exception {\n    public InputException() {\n        super();\n    }\n\n    public InputException(String e) {\n        System.out.println(\"HATA: \" + e);\n    }\n}\n",
      "DosyaBulunamadiException.java": "public class DosyaBulunamadiException extends InputException {\n    public DosyaBulunamadiException() {\n        super();\n    }\n\n    public DosyaBulunamadiException(String e) {\n        super(e + \" bulunamadi\");\n    }\n}\n"
    },
    {
      "id": "2103960",
      "Main.java": "import java.io.File;\nimport java.io.FileInputStream;\nimport java.io.FileNotFoundException;\nimport java.io.FileOutputStream;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args)\n            throws InputException, DosyaBulunamadiException, BosDosyaException, KelimeBulunamadiException {\n        String initial = \"aa bb cc\";\n        Scanner scan = new Scanner(initial);\n        ArrayList<String> AllWords = new ArrayList<String>();\n        try {\n            openFile(\"metin.txt\", scan);\n            while (scan.hasNextLine()) {\n                String removed = scan.nextLine().replaceAll(\"\\\\p{Punct}\", \"\");\n                Scanner scanWords = new Scanner(removed);\n                while (scanWords.hasNext()) {\n                    AllWords.add(scanWords.next());\n                }\n\n            }\n        } catch (DosyaBulunamadiException e) {\n            System.err.println(\"HATA: \" + \"metin.txt \" + \"bulunamadi\");\n            e.getMessage();\n            return;\n\n        } catch (BosDosyaException e2) {\n            System.err.println(\"HATA: \" + \"metin.txt \" + \"bos\");\n            e2.getMessage();\n            return;\n\n        } finally {\n            scan.close();\n        }\n\n        Scanner scan2 = new Scanner(initial);\n        ArrayList<String> Words = new ArrayList<String>();\n        try {\n            openFile(\"kelimeler.txt\", scan2);\n            while (scan2.hasNextLine()) {\n                Words.add(scan.nextLine());\n            }\n        } catch (DosyaBulunamadiException e) {\n            System.err.println(\"HATA: \" + \"metin.txt \" + \"bulunamadi\");\n            e.getMessage();\n            return;\n\n        } catch (BosDosyaException e2) {\n            System.err.println(\"HATA: \" + \"metin.txt \" + \"bos\");\n            e2.getMessage();\n            return;\n\n        } finally {\n            scan2.close();\n        }\n\n        int[] count = new int[Words.size()];\n        String word1 = \"\";\n        try {\n            for (int i = 0; i < Words.size(); i++) {\n                for (int j = 0; j < AllWords.size(); j++) {\n                    if (Words.get(i).equals(AllWords.get(j))) {\n                        count[i]++;\n                    }\n                }\n                if (count[i] == 0) {\n                    word1 = Words.get(i);\n                    throw new KelimeBulunamadiException(\"HATA:\" + Words.get(i) + \" metinde bulunamadi.\");\n                }\n            }\n        } catch (KelimeBulunamadiException e) {\n            System.err.println(\"HATA:\" + word1 + \" metinde bulunamadi.\");\n            e.getMessage();\n\n        }\n\n    }\n\n    public static void openFile(String file, Scanner scan) throws DosyaBulunamadiException, BosDosyaException {\n        try {\n            scan = new Scanner(new FileInputStream(file));\n        } catch (FileNotFoundException e) {\n            throw new DosyaBulunamadiException(\"HATA: \" + file + \" bulunamadi\");\n\n        }\n        if (scan.hasNext()) {\n\n        } else {\n            throw new BosDosyaException(\"HATA: \" + file + \" bos\");\n        }\n\n    }\n}\n",
      "KelimeBulunamadiException.java": "public class KelimeBulunamadiException extends Exception {\n    public KelimeBulunamadiException(String message) {\n        super(message);\n    }\n}\n",
      "BosDosyaException.java": "public class BosDosyaException extends InputException {\n    public BosDosyaException(String message) {\n        super(message);\n    }\n}\n",
      "InputException.java": "public class InputException extends Exception {\n    public InputException(String message) {\n        super(message);\n    }\n\n}\n",
      "DosyaBulunamadiException.java": "public class DosyaBulunamadiException extends InputException {\n    public DosyaBulunamadiException(String message) {\n        super(message);\n    }\n\n}\n"
    },
    {
      "id": "6539697",
      "Main.java": "import java.io.File;\nimport java.io.FileNotFoundException;\nimport java.io.PrintWriter;\nimport java.util.ArrayList;\nimport java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        File kelimeDosyasi = new File(\"kelimeler.txt\");\n        File metinDosyasi = new File(\"metin.txt\");\n        File sonucDosyasi = new File(\"sonuc.txt\")\n\n        ArrayList<String> kelimeler = new ArrayList<>();\n        ArrayList<String> metin = new ArrayList<>();\n        try {\n            kelimeler = okuKaydet(kelimeDosyasi,kelimeler);\n            metin = okuKaydet(metinDosyasi,metin);\n        }\n        catch(DosyaBulunamadiException e) {\n            System.out.println(e.getMessage(\"kelimeler.txt\"));\n        }\n        catch (BosDosyaException e) {\n            System.out.println(e.getMessage(\"kelimeler.txt\"));\n        }\n        catch (Exception e) {\n            System.out.println(\"Beklenmeyen bir hata gerçekleşti.\");\n        }\n        try {\n            metin = okuKaydet(metinDosyasi,metin);\n        }\n        catch(DosyaBulunamadiException e) {\n            System.out.println(e.getMessage(\"metin.txt\"));\n        }\n        catch (BosDosyaException e) {\n            System.out.println(e.getMessage(\"metin.txt\"));\n        }\n        catch (Exception e) {\n            System.out.println(\"Beklenmeyen bir hata gerçekleşti.\");\n        }\n\n        int[] sayilar = new int[kelimeler.size()];\n        for (int i=0; i<kelimeler.size(); i++) {\n            String hedefKelime = kelimeler.get(i);\n            for(String kelime : metin)\n                if(kelime.equals(hedefKelime))\n                    sayilar[i]++;\n        }\n\n    }\n    public static ArrayList<String> okuKaydet(File dosya, ArrayList<String> list) throws InputException {\n        boolean fileFound = true;\n        try (Scanner scan = new Scanner(dosya)) {\n            while (scan.hasNext()) {\n                String kelime = scan.next();\n                kelime = kelime.replace('.', ' ');\n                if (!kelime.isEmpty())\n                    list.add(kelime);\n            }\n        }\n        catch (FileNotFoundException e) {\n            fileFound = false;\n            throw new DosyaBulunamadiException();\n        }\n        finally {\n            if (fileFound && list.isEmpty())\n                throw new BosDosyaException();\n        }\n        return list;\n    }\n}",
      "KelimeBulunamadiException.java": "public class KelimeBulunamadiException extends Exception {\n}\n",
      "BosDosyaException.java": "public class BosDosyaException extends InputException {\n    public String getMessage(String fileName) {\n        return \"HATA: \"+fileName+\" boş.\";\n    }\n}\n",
      "InputException.java": "public class InputException extends Exception{\n}\n",
      "DosyaBulunamadiException.java": "public class DosyaBulunamadiException extends InputException {\n    public String getMessage(String fileName) {\n        return \"HATA: \"+fileName+\" bulunamadı.\";\n    }\n}\n"
    },
    {
      "id": "9905145",
      "inputException.java": "public class inputException extends Exception {\n    public inputException(String message) {super(message);}\n}\n",
      "KelimeBulunamadiException.java": "public class KelimeBulunamadiException extends Exception {\n    public KelimeBulunamadiException(String message) {\n        super(message);\n    }\n}\n",
      "BosDosyaException.java": "public class BosDosyaException extends inputException {\n    public BosDosyaException(String message) {\n        super(message);\n    }\n}\n",
      "mainn.java": "import java.io.*;\nimport java.util.ArrayList;\nimport java.util.Scanner;\n\npublic class mainn {\n\n    public static void main(String[] args) throws IOException, inputException {\n        BufferedReader buf1;\n        BufferedReader buf2;\n        String removed;\n        String removed2;\n        ArrayList<String> kelime = new ArrayList<>();\n        ArrayList<String> text = new ArrayList<>();\n\n        try {\n            buf1 = new BufferedReader(new FileReader(\"kelimeler.txt\"));\n\n            String s = buf1.readLine();\n\n            if(s == null) {\n                throw new BosDosyaException(\"\");\n            }\n            while (s != null) {\n                removed = s.replaceAll(\"\\\\p{Punct}\",\"\");\n                String tokens[] = removed.split(\" \");\n                for(int i = 0; i < tokens.length; i++) {\n                    kelime.add(tokens[i]);\n                }\n                s = buf1.readLine();\n            }\n\n        } catch (FileNotFoundException e) {\n            try {\n                throw new DosyaBulunamadiException(\"\");\n            } catch (DosyaBulunamadiException ee) {\n                System.out.println(\"HATA: \" + \"kelimeler.txt\" + \"bulunamadı\");\n            }\n        } catch (BosDosyaException e) {\n            System.out.println(\"HATA: \" + \"kelimeler.txt\" + \"boş\");\n        } catch (IOException e) {\n            System.out.println(\"tanımlanamayan hata\");\n        }\n\n        try {\n            buf2 = new BufferedReader(new FileReader(\"metin.txt\"));\n\n            String s2 = buf2.readLine();\n\n            if(s2 == null) {\n                throw new BosDosyaException(\"\");\n            }\n            while (s2 != null) {\n                removed2 = s2.replaceAll(\"\\\\p{Punct}\", \"\");\n                String tokens2[] = removed2.split(\" \");\n                for (int i = 0; i < tokens2.length; i++) {\n                    text.add(tokens2[i]);\n                }\n                s2 = buf2.readLine();\n            }\n\n        }  catch (FileNotFoundException e) {\n            try {\n                throw new DosyaBulunamadiException(\"\");\n            } catch (DosyaBulunamadiException ee) {\n                System.out.println(\"HATA: \" + \"kelimeler.txt\" + \"bulunamadı\");\n            }\n        } catch (BosDosyaException e ) {\n            System.out.println(\"HATA: \" + \"metin.txt\" + \"boş\");\n        } catch (IOException e) {\n            System.out.println(\"tanımlanamayan hata\");\n        }\n\n        int count = 0;\n        String x = \"\";\n\n        try {\n            for(int i = 0; i < kelime.size(); i++) {\n                for(int j = 0; j < text.size(); j++) {\n                    if(kelime.get(i).equals(text.get(j))) {\n                        count++;\n                    }\n                }\n                if(count != 0) {\n                    PrintWriter writer = new PrintWriter(new FileWriter(\"Sonuc.txt\"), true);\n                    writer.println(kelime.get(i) + \" \" + count);\n                }\n                else if(count == 0) {\n                    x = kelime.get(i);\n                    throw new KelimeBulunamadiException(\"\");\n                }\n                count = 0;\n            }\n        }  catch (KelimeBulunamadiException e) {\n            System.out.println(\"HATA: \" + x + \" metinde bulunamadı\");\n        }\n\n        System.out.println(kelime);\n        System.out.println(text);\n    }\n}\n",
      "DosyaBulunamadiException.java": "public class DosyaBulunamadiException extends inputException {\n    public DosyaBulunamadiException(String message) {super(message);}\n}\n"
    },
    {
      "id": "5902250",
      "Main.java": "package lab3;\nimport java.util.*;\nimport java.io.*;\n\n// Exceptionlar burada tanmlyorum.\nclass InputException extends Exception {\n\tInputException(String msj) {\n\t\tsuper(msj);\n\t}\n}\n\nclass DosyaBulunamadiException extends InputException {\n\tDosyaBulunamadiException(String dosyaadi) {\n\t\tsuper(\"HATA: \" + dosyaadi + \" bulunamad.\");\n\t}\n}\n\nclass BosDosyaException extends InputException {\n\tBosDosyaException(String dosyaadi) {\n\t\tsuper(\"HATA: \" + dosyaadi + \" bo.\");\n\t}\n}\n\nclass KelimeBulunamadiException extends Exception {\n\tKelimeBulunamadiException(String kelime) {\n\t\tsuper(\"HATA: \" + kelime + \" metinde bulunamad.\");\n\t}\n}\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\ttry {\n\t\tArrayList<String> kelimeler = dosyaOku(\"kelimeler.txt\");\n\t\tArrayList<String> metinSatir = dosyaOku(\"metin.txt\");\n\t\t\n\t\tif(kelimeler.isEmpty())\n\t\t\tthrow new BosDosyaException(\"kelimeler.txt\");\n\t\tif(metinSatir.isEmpty())\n\t\t\tthrow new BosDosyaException(\"metin.txt\");\n\t\t\n\t\tString strMetin = \"\";\n\t\tfor(int i = 0; i < metinSatir.size(); i++) {\n\t\t\tstrMetin += metinSatir.get(i).toLowerCase() + \" \";\n\t\t}\n\t\tList<String> metinKelime = Arrays.asList(strMetin.split(\"\\\\s+\"));\n\t\tint[] tekrarlar = new int[kelimeler.size()];\n\t\tint i = 0;\n\t\tfor(String kelime : kelimeler) {\n\t\t\tString ktoLower = kelime.toLowerCase();\n\t\t\tint sayi = 0;\n\t\t\t\n\t\t\tfor(String mk : metinKelime) {\n\t\t\t\tif(mk.equals(ktoLower))\n\t\t\t\t\tsayi++;\n\t\t\t}\n\t\t\t\n\t\t\tif(sayi == 0) {\n\t\t\t\tthrow new KelimeBulunamadiException(kelime);\n\t\t\t}\n\t\t\ttekrarlar[i] = sayi;\n\t\t\ti++;\n\t\t}\n\t\t\n\t\tdosyayaYaz(\"sonuc.txt\",kelimeler,tekrarlar);\n\t}\n\t\tcatch(Exception e) {\n\t\t\tSystem.err.println(e.getMessage());\n\t\t}\n\t}\n\t\n\tstatic ArrayList<String> dosyaOku(String dosyaadi) throws InputException, FileNotFoundException, IOException {\n\t\tFile dosya = new File(dosyaadi);\n\t\tif(!dosya.exists()) {\n\t\t\tthrow new DosyaBulunamadiException(dosyaadi);\n\t\t}\n\t\tArrayList<String> lines = new ArrayList<>();\n\t\ttry(BufferedReader buf = new BufferedReader(new FileReader(dosyaadi))) {\n\t\t\tString satir;\n\t\t\twhile((satir = buf.readLine()) != null) {\n\t\t\t\tif(!(satir.isEmpty())) {\n\t\t\t\t\tlines.add(satir.trim().replaceAll(\"\\\\p{Punct}\", \"\"));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn lines;\n\t}\n\t\n\tstatic void dosyayaYaz(String dosyaadi, ArrayList<String> kelimeler, int[] tekrarlar) throws IOException {\n\t\ttry(PrintWriter writer = new PrintWriter(new FileWriter(dosyaadi))) {\n\t\t\tfor(int i = 0; i < kelimeler.size(); i++) {\n\t\t\t\twriter.println(kelimeler.get(i) + \" \" + tekrarlar[i]);\n\t\t\t}\n\t\t}\n\t}\n}\n"
    },
    {
      "id": "4810237",
      "Main.java": "import java.io.BufferedReader;\nimport java.io.FileReader;\nimport java.io.IOException;\n\npublic class Main {\n\tstatic void kelimeleroku(String filename,String filename2) throws KelimeBulunamadiException, IOException {\n\t\tString line;\n\t\tString son;\n\t\tBufferedReader in=new BufferedReader(new FileReader(filename));\n\t\tBufferedReader a=new BufferedReader(new FileReader(filename2));\n\t\twhile((line=in.readLine())!=null) {\n\t\t\tString sonuc=line;\n\t\t\twhile((son=a.readLine())!=null) {\n\t\t\t\tif(son.indexOf(line)==0) {\n\t\t\t\t\tthrow new KelimeBulunamadiException(\"HATA:\"+line+\" metinde bulunamadı.\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\n\t}\n\n}\n",
      "KelimeBulunamadiException.java": "import java.io.BufferedReader;\nimport java.io.FileInputStream;\nimport java.io.FileNotFoundException;\nimport java.io.FileReader;\nimport java.io.IOException;\nimport java.util.Scanner;\n\nclass KelimeBulunamadiException extends Exception{\n\tpublic KelimeBulunamadiException(String message){\n\t\tsuper(message);\n\t}\n}",
      "BosDosyaException.java": "\npublic class BosDosyaException extends InputException{\n\tpublic BosDosyaException(String message) {\n\t\tsuper(message);\n\t}\n}\n",
      "A.java": "import java.util.Scanner;\nimport java.io.FileInputStream;\nimport java.io.FileNotFoundException;\nimport java.io.FileOutputStream;\nimport java.io.IOException;\nimport java.io.PrintWriter;\npublic class A {\n\tstatic void readFromTextFile(String filename) throws  BosDosyaException, FileNotFoundException  {\n\t\tScanner scanner=new Scanner(new FileInputStream(filename));\n\t\tSystem.out.println(scanner.nextLine());\n\t\tthrow new BosDosyaException(\"HATA:\"+filename+\" bulunamadı\");\n\t}\n\tstatic void writetoTextFile(String filename) throws BosDosyaException, FileNotFoundException {\n\t\tPrintWriter out=null;\n\t\tFileOutputStream file=null;\n\t\tfile=new FileOutputStream(filename,true);\n\t\tthrow new BosDosyaException(\"HATA:\"+filename+\" bulunamadı\");\n\t}\n}\n\n",
      "InputException.java": "\nclass InputException extends Exception{\n\n\tpublic InputException(String message) {\n\t\t\n\t}\n\t\n\t\n}\n",
      "DosyaBulunamadiException.java": "\nclass DosyaBulunamadiException extends InputException{\n\tpublic DosyaBulunamadiException(String message) {\n\t\tsuper(message);\n\t}\n}\n"
    },
    {
      "id": "9245287",
      "lab3.java": "import java.io.File;\nimport java.io.FileInputStream;\nimport java.io.FileOutputStream;\nimport java.io.PrintWriter;\nimport java.util.ArrayList;\nimport java.util.Scanner;\n\npublic class lab3 {\n    public static void main(String[] args) {\n        Scanner scan = null;\n        Scanner scan2 = null;\n        PrintWriter out = null;\n        try {\n            File kelimeFile = new File(\"kelimeler.txt\");\n            if (!kelimeFile.exists()) {\n                throw new DosyaBulunamadiException(kelimeFile.getName());\n            }\n            if (kelimeFile.length() == 0) {\n                throw new BosDosyaException(kelimeFile.getName());\n            }\n            File metinFile = new File(\"metin.txt\");\n            if (!metinFile.exists()) {\n                throw new DosyaBulunamadiException(metinFile.getName());\n            }\n            if (metinFile.length() == 0) {\n                throw new BosDosyaException(metinFile.getName());\n            }\n\n            scan = new Scanner(new FileInputStream(\"kelimeler.txt\"));\n            scan2 = new Scanner(new FileInputStream(\"metin.txt\"));\n            out = new PrintWriter(new FileOutputStream(\"sonuc.txt\"));\n            ArrayList<String> wordOfSentence = new ArrayList<String>();\n            while (scan2.hasNext()) {\n                String cumle = scan2.nextLine().replaceAll(\"\\\\p{Punct}\", \"\");\n                String[] myArr = cumle.split(\" \");\n                for (String s : myArr) {\n                    wordOfSentence.add(s);\n                }\n            }\n            while (scan.hasNext()) {\n                int cnt = 0;\n                String line = scan.nextLine();\n                String word = line.replaceAll(\"\\\\p{Punct}\", \"\");\n                for (int i = 0; i < wordOfSentence.size(); i++) {\n                    String s = wordOfSentence.get(i);\n                    if (s.equalsIgnoreCase(word))\n                        cnt++;\n                }\n                if (cnt == 0) {\n                    try {\n                        throw new KelimeBulunamadiException(word);\n                    } catch (KelimeBulunamadiException e) {\n                        System.err.println(\"HATA: \" + e.s + \" metinde bulunamadı.\");\n                    }\n                } else {\n                    out.println(\"\" + word + \" \" + cnt);\n                }\n            }\n            out.close();\n        } catch (DosyaBulunamadiException e) {\n            System.err.println(\"HATA: \" + e.s + \" bulunamadı.\");\n        } catch (BosDosyaException e) {\n            System.err.println(\"HATA: \" + e.s + \" bos.\");\n        } catch (Exception e) {\n            System.err.println(\"Beklenmedik bir hata geldi.\");\n        } finally {\n            // out.close();\n        }\n    }\n\n}\n\nclass DosyaBulunamadiException extends InputException {\n    String s;\n\n    public DosyaBulunamadiException(String fileName) {\n        this.s = fileName;\n    }\n}\n\nclass BosDosyaException extends InputException {\n    String s;\n\n    public BosDosyaException(String s) {\n        this.s = s;\n    }\n}\n\nclass InputException extends Exception {\n\n}\n\nclass KelimeBulunamadiException extends Exception {\n    String s;\n\n    public KelimeBulunamadiException(String s) {\n        this.s = s;\n    }\n\n}"
    },
    {
      "id": "4540765",
      "main.java": "package lab3bil211nebiyanar;\n\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.FileNotFoundException;\nimport java.io.FileWriter;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.ArrayList;\nimport java.util.Scanner;\n\n\npublic class main {\n\n\t\n\t\n\tpublic static void main(String[] args) {\n\t\t\n     try {\n\t\tDosyaMetodlari.KelimeOku();\n\t\tDosyaMetodlari.KelimeSay();\n\t\tDosyaMetodlari.SonucYaz();\n\t} catch (InputException | KelimeBulunamadiException e) {\n\t\t// TODO Auto-generated catch block\n\t\te.printStackTrace();\n\t}\n\t}\n\n}\n",
      "KelimeBulunamadiException.java": "package lab3bil211nebiyanar;\n\npublic class KelimeBulunamadiException extends Exception {\n\t\n\tpublic KelimeBulunamadiException(String kelime)\n\t{\n\t\t\n\t\tSystem.out.println(\"Hata \"+kelime+\" Bulunamadi\");\n\t\t\n\t}\n\n}\n",
      "BosDosyaException.java": "package lab3bil211nebiyanar;\n\nimport java.lang.classfile.Superclass;\n\npublic class BosDosyaException extends InputException {\n\n\tpublic BosDosyaException(String fileName)\n\t{\n\t\tsuper(\"HATA: \" + fileName + \" Bos.\");\n\t}\n\t\n}\n",
      "DosyaMetodlari.java": "package lab3bil211nebiyanar;\n\nimport java.io.File;\nimport java.io.FileNotFoundException;\nimport java.io.FileWriter;\nimport java.io.IOException;\nimport java.io.PrintWriter;\nimport java.util.ArrayList;\nimport java.util.Scanner;\n\npublic class DosyaMetodlari {\n\t\n\tstatic ArrayList<String> arananKelimeler = new ArrayList<>();\n    static ArrayList<Integer> kelimeSayilari = new ArrayList<>();\n\n   public static void KelimeOku() throws InputException \n   {\n        File dosya = new File(\"kelimeler.txt\");\n        if (!dosya.exists()) throw new DosyaBulunamadiException(\"kelimeler.txt\");\n        \n        try (Scanner scanner = new Scanner(dosya)) {\n            if (!scanner.hasNext()) throw new BosDosyaException(\"kelimeler.txt\");\n            \n            while (scanner.hasNextLine()) {\n                String kelime = scanner.nextLine().trim().toLowerCase();\n                if (!kelime.isEmpty()) {\n                    arananKelimeler.add(kelime);\n                    kelimeSayilari.add(0);\n                }\n            }\n        } catch (FileNotFoundException e) {\n            throw new DosyaBulunamadiException(\"kelimeler.txt\");\n        }\n    }\n\n    public static void KelimeSay() throws InputException, KelimeBulunamadiException \n    {\n        File dosya = new File(\"metin.txt\");\n        if (!dosya.exists()) throw new DosyaBulunamadiException(\"metin.txt\");\n        \n        try (Scanner scanner = new Scanner(dosya)) {\n            if (!scanner.hasNext()) throw new BosDosyaException(\"metin.txt\");\n            while (scanner.hasNextLine()) {\n                String satir = scanner.nextLine().toLowerCase();\n                String removed=satir.replace(\"\\\\p{Punct}\",\"\");\n                String[] kelimeler = satir.split(\" \"); \n                \n                for (String kelime : kelimeler) {\n                    for (int i = 0; i < arananKelimeler.size(); i++) {\n                        if (arananKelimeler.get(i).equals(kelime)) {\n                            kelimeSayilari.set(i, kelimeSayilari.get(i) + 1);\n                        }\n                    }\n                }\n            }\n        } \n        catch (FileNotFoundException e) \n        {\n            throw new DosyaBulunamadiException(\"metin.txt\");\n        }\n        \n        for (int i = 0; i < arananKelimeler.size(); i++) {\n            if (kelimeSayilari.get(i) == 0) {\n                throw new KelimeBulunamadiException(arananKelimeler.get(i));\n            }\n        }\n    }\n\n   public static void SonucYaz() {\n        try (PrintWriter writer = new PrintWriter(new FileWriter(\"sonuc.txt\"))) {\n            for (int i = 0; i < arananKelimeler.size(); i++) {\n                if (kelimeSayilari.get(i) > 0) {\n                    writer.println(arananKelimeler.get(i) + \" \" + kelimeSayilari.get(i));\n                }\n            }\n        } \n        catch (IOException e) \n        {\n            System.err.println(\"HATA: sonuc.txt dosyasına yazılamadı.\");\n        }\n    }\n\t\n\t\n\n}\n",
      "InputException.java": "package lab3bil211nebiyanar;\n\npublic class InputException extends Exception {\n\n\tpublic InputException(String message)\n\t{\n\t\tsuper(message);\n\t}\n\t\n}\n",
      "DosyaBulunamadiException.java": "package lab3bil211nebiyanar;\n\npublic class DosyaBulunamadiException extends InputException {\n\n\tpublic DosyaBulunamadiException(String fileName) {\n        super(\"HATA: \" + fileName + \" bulunamadı.\");\n    }\n\t\n}\n"
    },
    {
      "id": "6418019",
      "KelimeSayaci.java": "import java.io.*;\nimport java.util.*;\n\n\n\npublic class KelimeSayaci {\n    public static void main(String[] args) {\n    \n\n\n    }\n\n    public static void readFromFile(String fileName){\n    \n        try{\n            Scanner scan = new Scanner(new FileInputStream(fileName));\n            while(scan.hasNextLine()){\n\n            }\n        }\n        catch(DosyaBulunamadiException e){\n            System.out.println(e.getMessage());\n        }\n        catch(BosDosyaException e){\n            System.out.println(e.getMessage());\n        }\n    }\n\n    public void writeToFile() throws DosyaBulunamadiException{\n        try{\n            PrintWriter writer = new PrintWriter(new FileOutputStream(\"sonuc.txt\"));\n        }\n        catch(FileNotFoundException e){\n            throw new DosyaBulunamadiException(\"[HATA]: sonuc.txt bulunamadı\");\n            \n        }\n    }\n\n\n\n    }\nclass InputException extends Exception{\n    private String message;\n    \n        public InputException(String message){\n            super(message);\n        }\n    \n    }\n\nclass KelimeBulunamadiException extends Exception{\n    private String message;\n\n    public KelimeBulunamadiException(String message){\n        super(message);\n    }\n}\n\n\nclass DosyaBulunamadiException extends InputException{\n    private String message;\n\n    public DosyaBulunamadiException(String message){\n        super(message);\n    }\n}\n\nclass BosDosyaException extends InputException{\n    private String message;\n\n    public BosDosyaException(String message){\n        super(message);\n    }\n\n}\n"
    },
    {
      "id": "4114373",
      "Lab3Q1.java": "import java.io.File;\nimport java.io.PrintStream;\nimport java.util.ArrayList;\nimport java.util.Scanner;\n\nclass InputException extends Exception{\n    public InputException(String e){\n        super(e);\n    }\n}\n\nclass DosyaBulunamadiException extends InputException{\n    public DosyaBulunamadiException(String e){\n        super(e);\n    }\n}\n\nclass BosDosyaException extends InputException{\n    public BosDosyaException(String e){\n        super(e);\n    }\n}\n\nclass KelimeBulunamadiException extends Exception{\n    public KelimeBulunamadiException(String e){\n        super(e);\n    }\n}\n\npublic class Lab3Q1{\n    public static void main(String[] args){\n        \n        try{\n            File kelimeler = new File(\"kelimeler.txt\");\n            File metin = new File(\"metin.txt\");\n            File sonuc = new File(\"sonuc.txt\");\n\n            kelimeSay(kelimeler, metin, sonuc);\n        }\n\n        catch(KelimeBulunamadiException e){\n            System.err.println(e.getMessage());\n        }\n\n        catch(DosyaBulunamadiException e){\n            System.out.println(\"HATA: \" + e.getMessage());\n        }\n\n        catch(BosDosyaException e){\n            System.out.println(\"HATA: \" + e.getMessage());\n        }\n\n        catch(Exception e){\n            System.out.println(\"HATA.\");\n        }\n \n    }\n\n    \n\n    public static void kelimeSay(File kelimeler, File metin, File sonuc) throws Exception{\n\n        if(!kelimeler.exists()){\n            throw new DosyaBulunamadiException(\"kelimeler.txt bulunamadı.\");\n        }\n\n        if(!metin.exists()){\n            throw new DosyaBulunamadiException(\"metin.txt bulunamadı.\");\n        }\n\n        if(!sonuc.exists()){\n            throw new DosyaBulunamadiException(\"sonuc.txt bulunamadı.\");\n        }\n\n        Scanner sc = new Scanner(kelimeler);\n\n\n        ArrayList<String> kelimelerArrayList = new ArrayList<>();\n\n        while(sc.hasNext()){\n            kelimelerArrayList.add(sc.next().replaceAll(\"\\\\p{Punct}\", \"\"));\n        }\n\n        if(kelimelerArrayList.size()==0){\n            throw new BosDosyaException(\"kelimeler.txt boş.\");\n        }\n\n        int[] kelimeSayilari = new int[kelimelerArrayList.size()];\n\n        \n\n        Scanner sc2 = new Scanner(metin);\n\n        \n\n        String metinString = \"\";\n\n        while(sc2.hasNext()){\n            metinString += sc2.next().replaceAll(\"\\\\p{Punct}\", \"\").toLowerCase() + \" \";\n        }\n\n        if(metinString.length()==0){\n            throw new BosDosyaException(\"metin.txt boş.\");\n        }\n\n        boolean flag = false;\n        boolean flag2 = true;\n\n        while(!flag){\n\n            flag2 = true;\n\n            for(int i = 0; i < kelimelerArrayList.size(); i++){\n                if(metinString.contains(kelimelerArrayList.get(i))){\n                    kelimeSayilari[i] += 1;\n                    metinString = metinString.substring(0, metinString.indexOf(kelimelerArrayList.get(i))) + metinString.substring(metinString.indexOf(kelimelerArrayList.get(i)) + kelimelerArrayList.get(i).length(), metinString.length());\n                    flag2 = false;\n                }\n            }\n\n            if(flag2){\n                flag = true;\n            }\n\n        }\n\n        PrintStream printStream = new PrintStream(sonuc);\n\n        System.setOut(printStream); //System.out sonuc.txt'e yazacak şekilde ayarlandı.\n\n        for(int i = 0; i<kelimeSayilari.length; i++){\n            if(kelimeSayilari[i]>0){\n                System.out.println(kelimelerArrayList.get(i) + \" \" + kelimeSayilari[i]);\n            }\n        }\n\n        for(int i = 0; i < kelimeSayilari.length; i++){\n            if(checkZeros(kelimeSayilari)[i] == 1){\n                throw new KelimeBulunamadiException(\"HATA: \" + kelimelerArrayList.get(i) + \" metinde bulunamadı.\");\n            }\n        }\n        \n    }\n\n    public static int[] checkZeros(int[] kelimeSayilari){\n        \n        int[] a = new int[kelimeSayilari.length];\n\n        for(int i = 0; i < kelimeSayilari.length; i++){\n            if(kelimeSayilari[i]==0){\n                a[i] = 1;\n            }\n        }\n\n        return a;\n    }\n}"
    },
    {
      "id": "6494434",
      "KelimeBulunamadiException.java": "class KelimeBulunamadiException extends  Exception {\n    public KelimeBulunamadiException(String kelime) {\n        super(\"HATA: \" + kelime + \" metinde bulunamadı.\");\n    }\n}",
      "BosDosyaException.java": "class BosDosyaException extends InputException {\n    public BosDosyaException(String dosyaAdi) {\n        super(\"HATA: [\" + dosyaAdi + \"] boş.\" );\n    }\n}",
      "InputException.java": "class InputException extends Exception {\n    public InputException(String message) {\n        super(message);\n    }\n}",
      "DosyaBulunamadiException.java": "class DosyaBulunamadiException extends InputException {\n    public DosyaBulunamadiException(String dosyaAdi) {\n        super(\"HATA: [\" + dosyaAdi + \"] bulunamadı.\");\n    }\n}\n"
    },
    {
      "id": "8857652",
      "KelimeSayaci.java": "import java.io.BufferedWriter;\nimport java.io.FileInputStream;\nimport java.io.FileNotFoundException;\nimport java.io.FileOutputStream;\nimport java.io.FileWriter;\nimport java.io.IOException;\nimport java.io.PrintWriter;\nimport java.io.BufferedReader;\nimport java.io.FileReader;\nimport java.util.Scanner;\nimport java.util.ArrayList;\nimport java.util.List;\n\n\npublic class KelimeSayaci {\n\n    public static void main(String[] args) throws IOException {\n        try {\n\n            String[] kelimeler = readKelimeler(\"kelimeler.txt\");\n            String metin = readMetin(\"metin.txt\");\n            PrintWriter writer = new PrintWriter(new FileWriter(\"sonuc.txt\"));\n\n            for(String kelime : kelimeler){\n                int sayi= countKelime(metin, kelime);\n                writer.write(\"\" + kelime+ \" \" + sayi);\n                if (sayi == 0) { //yani kelime yokmus\n                    throw new KelimeBulunamadiException(kelime);\n                } else {\n                    System.out.println(\"aaa\");\n                    writer.write(\"\" + kelime+ \" \" + sayi);\n                }\n            }\n\n            writer.close();\n\n        } catch (InputException | KelimeBulunamadiException e) { //sistemden cikmasin\n            System.out.println(e.getMessage());\n        }\n    }\n\n\n    public static String[] readKelimeler(String fileName) throws InputException {\n        String[] kelimeler = new String[100000]; \n            int i=0;\n        try (BufferedReader reader = new BufferedReader(new FileReader(fileName))) {\n            String line;\n            if ((line= reader.readLine()) ==null) { //bos dosya\n                throw new BosDosyaException(fileName); \n\n            }\n\n\n            do { //bunu yanlis kullanmis olabilirim ilk defa kullandim\n                kelimeler[i++]=line.toLowerCase(); //karismasin\n            } while ((line = reader.readLine())!= null);\n\n        } catch (FileNotFoundException e) {\n            throw new DosyaBulunamadiException(fileName); \n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n\n        // Gereksiz null değerleri temizle ve dizi boyutunu ayarla\n        String[] finalKel = new String[i];\n        for (int j = 0; i < i; j++) {\n            finalKel[j] = kelimeler[j];\n        }\n\n        return finalKel;\n    }\n//////////\n    public static String readMetin(String fileName) throws InputException {\n        String metin = \"\";\n        try (BufferedReader reader = new BufferedReader(new FileReader(fileName))) {\n            String satir;\n            if ((satir = reader.readLine()) == null) {\n                throw new BosDosyaException(fileName); \n            }\n            do {\n\n\n                metin += satir.toLowerCase() + \" \"; \n            } \n            while ((satir = reader.readLine()) != null);\n\n        } catch (FileNotFoundException e) {\n            throw new DosyaBulunamadiException(fileName); \n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n                return metin;\n    }\n/////////////////////////////////\n    public static int countKelime(String metin, String kelime) {\n        String[] kelimeler = metin.split(\" \"); \n        int count =0;\n        for (String kel : kelimeler){\n            if (kel.equals(kelime)){\n                count++;\n            }\n        }\n        return count;\n    }\n}\n\n/* \n        //Scanner scan = new Scanner(new FileInputStream(\"kelimeler.txt\"));\n        //String kelime=\"\";\n        ArrayList<String> kelimeler = new ArrayList<>();\n        ArrayList<String> lines = new ArrayList<>();\n\n        \n        \n\n        try {\n            \n            BufferedReader reader = new BufferedReader(new FileReader(\"kelimeler.txt\"));\n            BufferedReader reader2 = new BufferedReader(new FileReader(\"metin.txt\"));\n            PrintWriter writer = new PrintWriter(new FileOutputStream(\"sonuc.txt\"));\n            String kelime=\"\";\n            \n            String line=\"\";\n            // Satır satır okuma\n            if((kelime = reader.readLine()) == null){\n                throw new BosDosyaException(\"kelimeler.txt\");\n            }\n            if((line = reader2.readLine()) == null){\n                throw new BosDosyaException(\"metin.txt\");\n            }\n            while ((kelime = reader.readLine()) != null) {\n                kelimeler.add(kelime);\n            }\n            while((line = reader2.readLine()) != null){\n                String lineRem=line.replaceAll(\"\\\\p{Punct}\",\"\");\n                //lineRem=lineRem.replaceAll(\" \", \"\");\n                lines.add(lineRem);\n\n            }\n            \n\n\n        for (String kelimeToCount : kelimeler) {\n            int count=0;\n            boolean found = false;\n\n            for (String lineText : lines) {\n                String[] words = lineText.split(\" \"); \n\n                for (String word : words) {\n                    if (word.equals(kelimeToCount)) {\n                        count++;\n                        found = true;\n                    }\n                }\n            }\n\n           \n            /*for(int i=0; i<kelimeler.size(); i++){\n                for(int j=0; j<lines.size(); j++){\n                    \n                    if(lines.get(j).contains(kelimeler.get(i))){\n                        count++;\n                    }\n                    else{\n                        throw new KelimeBulunamadiException(kelime);\n                    }   \n                    \n\n                }\n                writer.write(\"\" + kelimeler.get(i) + \" \" + count);\n                writer.flush();  // Tampondaki veriler dosyaya yazılır\n            \n               \n            }\n            \n        }*/\n        /*finally{\n            //writer.close();\n        }\n            \n\n            \n\n            \n             \n\n\n    }\n\n} */\n\n",
      "KelimeBulunamadiException.java": "public class KelimeBulunamadiException extends Exception{\n    public KelimeBulunamadiException(String kelime){\n        super(\"HATA: \" + kelime + \" metinde bulunamadi.\");\n    }\n\n}\n",
      "BosDosyaException.java": "public class BosDosyaException extends InputException{\n    public BosDosyaException(String fileName){\n        super(\"HATA: \" + fileName + \" boş.\");\n    }\n\n}\n",
      "InputException.java": "public class InputException extends Exception{\n    public InputException(String message){\n        super(message);\n    }\n\n}\n",
      "DosyaBulunamadiException.java": "public class DosyaBulunamadiException extends InputException{\n    public DosyaBulunamadiException(String fileName){\n            super(\"HATA: \" + fileName + \" bulunamadi.\");\n        }\n\n}\n"
    },
    {
      "id": "8059049",
      "KelimeSayaci.java": "import java.io.*;\nimport java.util.*;\n\npublic class KelimeSayaci {\n    public static void main(String[] args) {\n        wordnumbers(\"kelimeler.txt\", \"metin.txt\", \"sonuc.txt\");\n    }\n\n    public static ArrayList<String> reader(String dosya) throws InputException {\n        File file = new File(dosya);\n\n\n        if (!file.exists()) {\n            throw new DosyaBulunamadiException(dosya);\n        }\n\n        ArrayList<String> words = new ArrayList<>();\n        try (BufferedReader br = new BufferedReader(new FileReader(file))) {\n            String line;\n            while ((line = br.readLine()) != null) {\n                line = line.trim();\n                if (!line.isEmpty()) {\n                    words.add(line.toLowerCase()); // Küçük harfe çevir\n                }\n            }\n        } catch (IOException e) {\n            throw new InputException(\"Dosya okuma hatası: \" + dosya);\n        }\n\n        if (words.isEmpty()) {\n            throw new BosDosyaException(dosya);\n        }\n\n        return words;\n    }\n\n\n    public static ArrayList<String> readtext(String dosya) throws InputException {\n        File file = new File(dosya);\n\n        if (!file.exists()) {\n            throw new DosyaBulunamadiException(dosya);\n        }\n\n        ArrayList<String> kelimeler = new ArrayList<>();\n        try (BufferedReader br = new BufferedReader(new FileReader(file))) {\n            String satir;\n            while ((satir = br.readLine()) != null) {\n                satir = satir.replaceAll(\"\\\\p{Punct}\",\"\");\n                String[] parcalar = satir.toLowerCase().split(\" \");\n                for (String kelime : parcalar) {\n                    if (!kelime.isEmpty()) {\n                        kelimeler.add(kelime);\n                    }\n                }\n            }\n        } catch (IOException e) {\n            throw new InputException(\"Dosya okuma hatası: \" + dosya);\n        }\n\n        if (kelimeler.isEmpty()) {\n            throw new BosDosyaException(dosya);\n        }\n\n        return kelimeler;\n    }\n\n\n    public static void wordnumbers(String kelimeDosya, String metinDosya, String result) {\n        try {\n            ArrayList<String> searchword = reader(kelimeDosya);\n            ArrayList<String> textwords = readtext(metinDosya);\n\n            ArrayList<String> sonuclar = new ArrayList<>();\n\n\n            for (String kelime : searchword) {\n                int sayac = 0;\n                for (String metin : textwords) {\n                    if (kelime.equals(metin)) {\n                        sayac++;\n                    }\n                }\n                if (sayac > 0) {\n                    sonuclar.add(kelime + \" \" + sayac);\n                } else {\n\n                    System.err.println(\"HATA: \" + kelime + \" metinde bulunamadı.\");\n\n                    throw new KelimeBulunamadiException(kelime);\n                }\n            }\n\n\n            try (PrintWriter pw = new PrintWriter(new FileWriter(result))) {\n                for (String sonuc : sonuclar) {\n                    System.out.println(sonuc);\n                    pw.println(sonuc);\n                }\n\n            }\n\n\n\n        } catch (InputException e) {\n            System.err.println(e.getMessage());\n\n        }\n        catch( KelimeBulunamadiException e){\n            System.err.println(e.getMessage());\n        }\n        catch (IOException e) {\n            System.err.println(\"Dosya yazma hatası: \" + result);\n        }\n    }\n\n\n}\n",
      "InputException.java": "public class InputException extends Exception {\n    public InputException(String message){\n        super(message);\n    }\n}\nclass DosyaBulunamadiException extends InputException {\n    public DosyaBulunamadiException(String dosyaAdi) {\n        super(\"HATA: \" + dosyaAdi + \" bulunamadı.\");\n    }\n}\nclass BosDosyaException extends InputException {\n    public BosDosyaException(String dosyaAdi) {\n        super(\"HATA: [\" + dosyaAdi + \"] boş.\");\n    }\n}\nclass KelimeBulunamadiException extends Exception {\n    public KelimeBulunamadiException(String kelime) {\n        super(\"HATA: [\" + kelime + \"] metinde bulunamadı.\");\n    }\n}\n"
    },
    {
      "id": "5361565",
      "Lab3.java": "\nimport java.awt.BufferCapabilities;\nimport java.io.BufferedReader;\nimport java.io.BufferedWriter;\nimport java.io.FileNotFoundException;\nimport java.io.FileReader;\nimport java.io.FileWriter;\nimport java.util.ArrayList;\nimport java.io.File;\nimport java.io.IOException;\nimport java.io.Reader;\nimport java.lang.reflect.Array;\n\npublic class Lab3 {\n\n    public static void main(String[] args) {\n        try {\n        ArrayList<String> kelimeler=read(\"kelimeler.txt\");\n        ArrayList<String> metin=read(\"metin.txt\");\n        for(int a=0; a<metin.size(); a++ ){\n            String removed=metin.get(a).replaceAll(\"\\\\p{Punct}\",\" \");\n            metin.set(a, removed);\n        }\n        if(kelimeler.isEmpty()){\n            throw new BosDosyaException(\"kelimeler.txt\");\n        }\n        if(metin.isEmpty()){\n            throw new BosDosyaException(\"metin.txt\");\n        }\n        ArrayList<String> sonuc=new ArrayList<String>();\n        for(int a=0; a<kelimeler.size(); a++){\n            int counter=count(metin, kelimeler.get(a));\n            if(counter==0){\n                throw new KelimebulunamadiException(kelimeler.get(a));\n            }\n            sonuc.add(kelimeler.get(a) +\" \" + counter);\n        }\n\n            \n        } catch (InputException | KelimebulunamadiException | IOException e) {\n            System.err.println(e.getMessage());\n        }\n        \n       \n        }\n\n        public static ArrayList<String> read(String dosya) throws InputException, IOException{\n          File file=new File(dosya);\n          if(!file.exists()){\n            throw new DosyaBulunamadiException(dosya);\n          }\n          ArrayList<String> lines=new ArrayList<String>();\n          try(BufferedReader reader=new BufferedReader(new FileReader(dosya))){\n            String line;\n          while((line=reader.readLine())!=null){\n            if(!line.trim().isEmpty()){\n                lines.add(line.trim().toLowerCase());\n            }\n          }\n          }\n          return lines;\n          \n        }  \n        public static void write(String dosya,ArrayList<String> sonuc) throws IOException{\n            try(BufferedWriter writer=new BufferedWriter(new FileWriter(dosya))){\n                for(int a=0; a<sonuc.size(); a++){\n                    writer.write(sonuc.get(a));\n                }\n            }\n\n        }\n        public static int count(ArrayList<String> metin,String kelime){\n          int counter=0;\n          for(int b=0; b<metin.size(); b++){\n            if(metin.get(b).equals(kelime)){\n                counter++;\n            }\n          }\n          return counter;\n        }\n\n\n    }\n",
      "BosDosyaException.java": "public class BosDosyaException extends InputException {\n    public BosDosyaException(String dosyaAdı){\n        super(\"Hata: \" + dosyaAdı + \"boş.\");\n    }\n\n}\n",
      "KelimebulunamadiException.java": "public class KelimebulunamadiException extends Exception {\n    public KelimebulunamadiException(String kelime){\n        super(\"HATA: \" + kelime + \" metinde bulunamadı.\");\n    }\n\n}\n",
      "InputException.java": "public class InputException extends Exception {\n    public InputException(String message){\n        super(message);\n    }\n\n}\n",
      "DosyaBulunamadiException.java": "public class DosyaBulunamadiException extends InputException {\n    public DosyaBulunamadiException(String Dosyaadi){\n        super(\"HATA: \" + Dosyaadi + \" bulunamadı.\");\n    }\n\n}\n"
    },
    {
      "id": "6157698",
      "Main.java": "import java.io.FileNotFoundException;\nimport java.io.FileOutputStream;\nimport java.io.FileReader;\nimport java.io.PrintWriter;\nimport java.util.Scanner;\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.util.ArrayList;\npublic class Main {\n\n\tpublic static void main(String[] args) throws FileNotFoundException, DosyaBulunamadiException, BosDosyaException, KelimeBulunamadiException {\n\n\t\t//BufferedReader in = new BufferedReader(new FileReader(\"kelimeler.txt\"));\n\t\t\n\t\ttry {\n\t\t\tFile kelimelerFile = new File(\"C:/Users/furuz/eclipse-workspace/BIL211Lab/src/kelimeler.txt\");\n\t\t\tif(!kelimelerFile.exists())\n\t\t\t\tthrow new DosyaBulunamadiException(\"HATA: kelimeler.txt bulunamadı.\");\n\t\t\t\n\t\t\tScanner kIn = new Scanner(new FileInputStream(kelimelerFile));\n\t\t\tif(\t!kIn.hasNext())\n\t\t\t\tthrow new BosDosyaException(\"HATA: kelimeler.txt boş.\");\n\t\t\t\n\t\t\t\n\t\t\tArrayList<String> kelimeler = new ArrayList<String>();\n\t\t\twhile (kIn.hasNext()) \n            {\n\t\t\t\tkelimeler.add(kIn.next());\n            }\n\t\t\tkIn.close();\n\n\t\t\t\n\t\t\t\n\t\t\tFile metinFile = new File(\"C:/Users/furuz/eclipse-workspace/BIL211Lab/src/metin.txt\");\n\t\t\tif(!metinFile.exists())\n\t\t\t\tthrow new DosyaBulunamadiException(\"HATA: metin.txt bulunamadı.\");\n\t\t\tScanner mIn = new Scanner(new FileInputStream(metinFile));\n\t\t\t\n\t\t\tif(\t!mIn.hasNext())\n\t\t\t\tthrow new BosDosyaException (\"HATA: metin.txt boş.\");\n\t\t\t\t\n\t\t\t\n\t\t\tArrayList<String> metin = new ArrayList<String>();\t\t\t\t\n\t\t\twhile (mIn.hasNext()) \n\t        {\n\t\t\t\tString original = mIn.next();\n\t\t\t\tmetin.add(original.replaceAll(\"\\\\p{Punct}\",\"\"));\n\t\t\t}\n\t\t\tmIn.close();\n\t\t\t\n\t\t\t\n\t\t\tint[] sayac = new int[kelimeler.size()];\n\t\t\tint i=0;\n\t\t\tfor(String kelime : kelimeler) {\n\t\t\t\tfor(String metinX : metin) {\n\t\t\t\t\tif(kelime.equalsIgnoreCase(metinX))\n\t\t\t\t\t\tsayac[i]++;\n\t\t\t\t}\n\t\t\t\ti++;\n\t\t\t}\n\t\t\t\n\t\t\tPrintWriter out = null;\n\t\t\tFileOutputStream file = null;\n\t\t\tfile = new FileOutputStream(\"sonuc.txt\");\n\t\t\tout = new PrintWriter(file);\n\t\t\tString sonuc =\"\";\n\t\t\tfor(int j=0; j<kelimeler.size();j++) {\n\t\t\t\tif(sayac[j] != 0)\n\t\t\t\t\tout.println( kelimeler.get(j) + \" \" + sayac[j]);\n\t\t\t}\n\t\t\tout.flush();\n\t\t\tout.close();\n\t\t\t\n\t\t\tfor(int asd = 0; asd < sayac.length ; asd++) {\n\t\t\t\tif(sayac[asd] == 0) {\n\t\t\t\t\tthrow new KelimeBulunamadiException(\"HATA: \"+kelimeler.get(asd)+\" metinde bulunamadı.\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcatch(DosyaBulunamadiException e){\n\t\t\tSystem.err.println(e.getMessage());\n\t\t}\n\t\tcatch(BosDosyaException e) {\n\t\t\tSystem.err.println(e.getMessage());\n\t\t}\n\t\tcatch(KelimeBulunamadiException e) {\n\t\t\tSystem.err.println(e.getMessage());\n\t\t}\n\n\t\t\n\t\t\n\t}\n\t\n}\n",
      "KelimeBulunamadiException.java": "public class KelimeBulunamadiException extends Exception {\n\t\tpublic KelimeBulunamadiException(String errorMessage) {\n\t\t\tsuper(errorMessage);\n\t\t}\n}",
      "BosDosyaException.java": "public class BosDosyaException extends InputExceptionClass {\n\t\tpublic BosDosyaException (String errorMessage) {\n\t\t\tsuper(errorMessage);\n\t\t}\n}",
      "InputExceptionClass.java": "public class InputExceptionClass extends Exception {\n\tpublic InputExceptionClass(String errorMessage) {\n\t\tsuper(errorMessage);\n\t}\n}\n",
      "DosyaBulunamadiException.java": "public class DosyaBulunamadiException extends InputExceptionClass {\n\t\tpublic DosyaBulunamadiException(String errorMessage) {\n\t\t\tsuper(errorMessage);\n\t\t}\n}"
    },
    {
      "id": "8862077",
      "Dosya.java": "import java.io.BufferedReader;\nimport java.io.BufferedWriter;\nimport java.io.File;\nimport java.io.FileReader;\nimport java.io.FileWriter;\nimport java.io.IOException;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Dosya {\n\t\n\t public static List<String> dosyadanOku(String dosyaAdi) throws InputException {\n\t        File dosya = new File(dosyaAdi);\n\t        if (!dosya.exists()) {\n\t            throw new DosyaBulunamadiException(dosyaAdi);\n\t        }\n\t     List<String> satirlar = new ArrayList<>();\n\t        try (BufferedReader reader = new BufferedReader(new FileReader(dosya))) {\n\t            String satir;\n\t            while ((satir = reader.readLine()) != null) {\n\t            \tif (!satir.trim().isEmpty()) {\n\t                    satirlar.add(satir.toLowerCase());\n\t            \t}\n\t            }\n\t        } catch (IOException e) {\n\t            throw new InputException(\"hata\");\n\t        }\n\t        \n\t        if (satirlar.isEmpty()) {\n\t            throw new BosDosyaException(dosyaAdi);\n\t        }\n\t        return satirlar;\n\t    }\n\n\t \n\t \n\t \n\t \n\t public static void dosyayaYaz(String dosyaAdi, List<String> sonucListesi) throws InputException {\n\t        try (BufferedWriter writer = new BufferedWriter(new FileWriter(dosyaAdi))) {\n\t            for (String satir : sonucListesi) {\n\t                writer.write(satir);\n\t                writer.newLine();\n\t            }\n\t        } catch (IOException e) {\n\t        \tthrow new InputException(\"hata\");\n\t        }\n\t    }\n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\t\tpublic static List<String> kelimeleriSay(List<String> kelimeler, List<String> metin) throws KelimeBulunamadiException {\n\t\t\t\n\t        List<String> sonucListesi = new ArrayList<>();\n\t        List<String> bulunamayanKelimeler = new ArrayList<>();\n\t        \n\t        for (String kelime : kelimeler) {\n\t        \t\n\t            int sayac = 0;\n\t            \n\t            \tfor (String satir : metin) {\n\t            \t\tString newMetin = satir.toLowerCase().replaceAll(\"\\\\p{Punct}\",\"\");\n\t            \t\t  String[] kelimeDizisi = newMetin.split(\" \");\n\t            \t\t  \n\t                for (String kelimeMetin : kelimeDizisi) {\n\t                    \t   if (kelimeMetin.equals(kelime)) {\n\t                    \t\t   sayac++;\n\t                    }\n\t                }\n\t            }\n\t            \tif (sayac == 0) {\n\t\t                bulunamayanKelimeler.add(kelime);\n\t\t            } else {\n\t\t                sonucListesi.add(kelime + \" \" + sayac);\n\t\t            }\n\t\t        }\n\t\t        \n\t\t        if (!bulunamayanKelimeler.isEmpty()) {\n\t\t            throw new KelimeBulunamadiException(bulunamayanKelimeler.get(0));\n\t\t        }\n\t\t        \n\t\t        return sonucListesi;\n\t\t \n\t \n\t    }}\n\n",
      "main.java": "import java.util.List;\n\npublic class main {\n\n\tpublic static void main(String[] args) {\n\t    \n\t        try {\n\t            List<String> kelimeler = Dosya.dosyadanOku(\"kelimeler.txt\");\n\t            List<String> metin = Dosya.dosyadanOku(\"metin.txt\");\n\t            List<String> sonucListesi = Dosya.kelimeleriSay(kelimeler, metin);\n\t            Dosya.dosyayaYaz(\"sonuc.txt\", sonucListesi);\n\t        } \n\t        \n\t        catch (InputException | KelimeBulunamadiException e) {\n\t            System.err.println(e.getMessage());\n\t        }\n\n\t\t\n\t}\n\n}\n",
      "BosDosyaException.java": "\npublic class BosDosyaException extends InputException{\n\t\n\tpublic BosDosyaException(String DosyaAdi) {\n\t\tsuper(\"HATA: [\" + DosyaAdi + \"] boş.\");\t\n\t\n\t}\n\t\n}\n",
      "KelimeBulunamadiExeption.java": "\nclass KelimeBulunamadiException extends Exception {\n\t\n\t    public KelimeBulunamadiException(String kelime) {\n\t        super(\"HATA: [\" + kelime + \"] metinde bulunamadı.\");\n\t    }\n\t}\n\n",
      "InputException.java": "\npublic class InputException extends Exception{\n\n\tpublic InputException(String msg) {\n\t\tsuper(msg);\n\t}\n\n}\n",
      "DosyaBulunamadiException.java": "\npublic class DosyaBulunamadiException extends InputException{\n\t\n\tpublic DosyaBulunamadiException(String DosyaAdi) {\n\t\tsuper(\"HATA: [\" + DosyaAdi + \"] bulunamadı.\");\t\n\t\n\t}\n}\n"
    },
    {
      "id": "1280995",
      "Main.java": "package KelimeSayici;\nimport java.io.File;\nimport java.io.FileNotFoundException;\nimport java.io.PrintWriter;\nimport java.util.ArrayList;\nimport java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) throws DosyaBulunamadiException, BosDosyaException, InputException, KelimeBulunamadiException{\n        String metin = \"\";\n        ArrayList<String> kelimeler = new ArrayList<>();\n        File metinFile = new File(\"metin.txt\");\n        File keliFile = new File(\"kelimeler.txt\");\n        Scanner scan;\n\n        try {\n        scan = new Scanner(metinFile);\n        if (!scan.hasNext()) {\n            scan.close();\n            throw new BosDosyaException(\"HATA: metin.txt bos.\");\n        } \n        while (scan.hasNext()) {\n            metin += scan.nextLine();\n        }\n        scan.close();\n        } catch (FileNotFoundException e) {\n            throw new DosyaBulunamadiException(\"HATA: metin.txt bulunamadi.\");\n        }\n\n        try {\n        scan = new Scanner(keliFile);\n        if (!scan.hasNext()) {\n            scan.close();\n            throw new BosDosyaException(\"HATA: kelimeler.txt bos.\");\n        } \n        while (scan.hasNext()){\n            kelimeler.add(scan.next());\n        }\n        scan.close();\n        } catch (FileNotFoundException e) {\n            throw new DosyaBulunamadiException(\"HATA: kelimeler.txt bulunamadi.\");\n        }\n\n        int[] amount = new int[kelimeler.size()];\n\n        String removed = metin.replaceAll(\"\\\\p{Punct}\", \" \").trim().toLowerCase();\n\n        boolean none = false;\n        int nonewhere = 0;\n        for (int i = 0; i < kelimeler.size(); i++){\n            if (removed.indexOf(kelimeler.get(i)) == -1)\n            {\n                none = true;\n                nonewhere = i;\n                break;\n            }\n        }\n\n        for (int i = 0; i < kelimeler.size(); i++){\n            while (removed.indexOf(kelimeler.get(i)) != -1) {\n                amount[i]++;\n                removed = removed.substring(0, removed.indexOf(kelimeler.get(i))) + removed.substring(removed.indexOf(kelimeler.get(i)) + kelimeler.get(i).length(), removed.length());\n                removed = removed.trim();\n            }\n        }\n\n        File sonuc = new File(\"sonuc.txt\");\n        try {\n            sonuc.createNewFile();\n            PrintWriter print = new PrintWriter(\"sonuc.txt\");\n            for (int i = 0; i < amount.length; i++){\n                print.println(kelimeler.get(i) + \" \" + amount[i]);\n            }\n            print.close();\n        } catch (Exception e) {\n            System.err.println(\"Hata!\");\n        }\n\n        if (none) throw new KelimeBulunamadiException(\"HATA: \" + kelimeler.get(nonewhere) + \" metinde bulunamadi.\");\n    }\n}\n",
      "KelimeBulunamadiException.java": "package KelimeSayici;\n\npublic class KelimeBulunamadiException extends Exception {\n    KelimeBulunamadiException(String message) {\n        super(message);\n    }\n}\n",
      "BosDosyaException.java": "package KelimeSayici;\n\npublic class BosDosyaException extends InputException {\n    BosDosyaException(String message){\n        super(message);\n    }\n}\n",
      "InputException.java": "package KelimeSayici;\n\nimport java.io.IOException;\n\npublic class InputException extends IOException {\n    InputException(String message){\n        super(message);\n    }\n}\n",
      "DosyaBulunamadiException.java": "package KelimeSayici;\n\npublic class DosyaBulunamadiException extends InputException {\n    DosyaBulunamadiException(String message){\n        super(message);\n    }\n}\n"
    },
    {
      "id": "8700334",
      "KelimeSayici.java": " import java.io.*;\nimport java.util.*;\n\npublic class KelimeSayici {\n\npublic static void main(String[] args) {\n    try {\n        List<String> kelimeler = okuKelimeDosyasi(\"kelimeler.txt\");\n        String metin = okuMetinDosyasi(\"metin.txt\");\n            \n        Map<String, Integer> kelimeSayilari = sayKelimeler(kelimeler, metin);\n\n        yazSonucDosyasi(kelimeSayilari);\n            \n  } catch (InputException | KelimeBulunamadiException e) {\n        System.err.println(e.getMessage());\n        System.exit(1); \n        }\n    }\n\npublic static List<String> okuKelimeDosyasi(String dosyaAdi) throws InputException {\n       \n\t    List<String> kelimeler = new ArrayList<>();\n\t\t\n    try (BufferedReader br = new BufferedReader(new FileReader(dosyaAdi))) {\n        String satir;\n    if ((satir = br.readLine()) == null) {\n    throw new BosDosyaException(dosyaAdi);\n            }\n    do {\n                kelimeler.add(satir.toLowerCase());  \n  } while ((satir = br.readLine()) != null);\n  } catch (FileNotFoundException e) {\n    throw new DosyaBulunamadiException(dosyaAdi);\n  } catch (IOException e) {\n           e.printStackTrace();\n        }\n    return kelimeler;\n    }\n\npublic static String okuMetinDosyasi(String dosyaAdi) throws InputException {\n        StringBuilder metin = new StringBuilder();\n    try (BufferedReader br = new BufferedReader(new FileReader(dosyaAdi))) {\n            String satir;\n    if ((satir = br.readLine()) == null) {\n    throw new BosDosyaException(dosyaAdi);\n            }\n    do {\n                metin.append(satir).append(\" \");  \n   }while ((satir = br.readLine()) != null);\n   }catch (FileNotFoundException e) {\n    throw new DosyaBulunamadiException(dosyaAdi);\n   }catch (IOException e) {\n            e.printStackTrace();\n        }\n    return metin.toString().toLowerCase();  \n    }\n\npublic static Map<String, Integer> sayKelimeler(List<String> kelimeler, String metin) throws KelimeBulunamadiException {\n        Map<String, Integer> kelimeSayilari = new HashMap<>();\nboolean kelimeBulundu = false;\n        \n    for (String kelime : kelimeler) {\n            int sayac = 0;\n            \n            int index = 0;\n    while ((index = metin.indexOf(kelime, index)) != -1) {\n                sayac++;\n                index += kelime.length();  \n            }\n            \n    if (sayac > 0) {\n                kelimeSayilari.put(kelime, sayac);\n   }else {\n                \n    throw new KelimeBulunamadiException(kelime);\n            }\n        }\n        \n    return kelimeSayilari;\n    }\n\npublic static void yazSonucDosyasi(Map<String, Integer> kelimeSayilari) {\n    try (PrintWriter pw = new PrintWriter(new FileWriter(\"sonuc.txt\"))) {\n    for (Map.Entry<String, Integer> entry : kelimeSayilari.entrySet()) {\n                pw.println(entry.getKey() + \" \" + entry.getValue());\n            }\n   }catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n",
      "KelimeBulunamadiException.java": "public class KelimeBulunamadiException extends Exception {\n    public KelimeBulunamadiException(String kelime) {\n        super(\"HATA: \" + kelime + \" metinde bulunamadı.\");\n    }\n}\n",
      "BosDosyaException.java": "public class BosDosyaException extends InputException {\n    public BosDosyaException(String dosyaAdi) {\n        super(\"HATA: \" + dosyaAdi + \" boş.\");\n    }\n}\n",
      "InputException.java": "public class InputException extends Exception {\n    public InputException(String message) {\n        super(message);\n    }\n}\n",
      "DosyaBulunamadiException.java": "public class DosyaBulunamadiException extends InputException {\n    public DosyaBulunamadiException(String dosyaAdi) {\n        super(\"HATA: \" + dosyaAdi + \" bulunamadı.\");\n    }\n}\n"
    },
    {
      "id": "9167236",
      "Main.java": "import java.io.*;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n\n    public static void main(String[] args) throws IOException, InputException {\n        Map<String, Integer> kelimeSayisi = new HashMap<>();\n\n        try (BufferedReader kelimeOkuyucu = new BufferedReader(new FileReader(\"kelimeler.txt\"))) {\n            \n            String kelime;\n            boolean kelimeDosyasiBos = true;\n\n            while ((kelime = kelimeOkuyucu.readLine()) != null) {\n                kelime = kelime.toLowerCase().split(\" \")[0];\n                if (!kelime.isEmpty()) {\n                    kelimeSayisi.put(kelime, 0);\n                    kelimeDosyasiBos = false;\n                }\n            }\n\n            if (kelimeDosyasiBos) {\n                throw new BosDosyaException(\"kelimeler.txt\");\n            }\n\n        } catch (FileNotFoundException e) {\n            throw new DosyaBulunamadiException(\"kelimeler.txt\");\n        }\n\n        try (BufferedReader metinOkuyucu = new BufferedReader(new FileReader(\"metin.txt\"))) {\n\n            String line;\n            boolean metinDosyasiBos = true;\n\n            while ((line = metinOkuyucu.readLine()) != null) {\n                if (!line.isEmpty()) {\n                    metinDosyasiBos = false;\n                    line = line.replaceAll(\"\\\\p{Punct}\", \"\").toLowerCase();\n                    String[] kelimeler = line.split(\" \");\n\n                    for (String kelime : kelimeler) {\n                        if (kelimeSayisi.containsKey(kelime)) {\n                            kelimeSayisi.put(kelime, kelimeSayisi.get(kelime) + 1);\n                        }\n                    }\n                }\n            }\n\n            if (metinDosyasiBos) {\n                throw new BosDosyaException(\"metin.txt\");\n            }\n\n        } catch (FileNotFoundException e) {\n            throw new DosyaBulunamadiException(\"metin.txt\");\n        }\n\n        try (BufferedWriter writer = new BufferedWriter(new FileWriter(\"sonuc.txt\"))) {\n            for (Map.Entry<String, Integer> entry : kelimeSayisi.entrySet()) {\n                if (entry.getValue() == 0) {\n                    throw new KelimeBulunamadiException(entry.getKey());\n                }\n                writer.write(entry.getKey() + \" \" + entry.getValue());\n                writer.newLine();\n            }\n        } catch (KelimeBulunamadiException e) {\n            System.err.println(e.getMessage());\n            System.exit(1);\n        } catch (IOException e) {\n            System.err.println(\"HATA: sonuc.txt dosyası oluşturulamadı.\");\n            System.exit(1);\n        }\n    }\n}",
      "KelimeBulunamadiException.java": "public class KelimeBulunamadiException extends Exception {\n    \n    public KelimeBulunamadiException(String kelime) {\n        super(\"HATA: [\" + kelime + \"] metinde bulunamadı.\");\n    }\n    \n}\n",
      "BosDosyaException.java": "public class BosDosyaException extends InputException {\n\n    public BosDosyaException(String fileName) {\n        super(\"HATA: [\" + fileName + \"] boş.\");\n    }\n    \n}",
      "InputException.java": "public class InputException extends Exception {\n    \n    public InputException(String fileName) {\n        super(fileName);\n    }\n    \n}\n",
      "DosyaBulunamadiException.java": "public class DosyaBulunamadiException extends InputException {\n\n    public DosyaBulunamadiException(String fileName) {\n        super(\"HATA: [\" + fileName + \"] bulunamadı.\");\n    }\n\n}",
      "._BosDosyaException.java": "\u0000\u0005\u0016\u0007\u0000\u0002\u0000\u0000Mac OS X        \u0000\u0002\u0000\u0000\u0000\t\u0000\u0000\u00002\u0000\u0000\u0000~\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ATTR\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u001acom.apple.lastuseddate#PS\u0000\u0000\u0000\u0000\u001f\u0006g\u0000\u0000\u0000\u0000ĥ\u001d\u0000\u0000\u0000\u0000",
      "._DosyaBulunamadiException.java": "\u0000\u0005\u0016\u0007\u0000\u0002\u0000\u0000Mac OS X        \u0000\u0002\u0000\u0000\u0000\t\u0000\u0000\u00002\u0000\u0000\u0000~\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ATTR\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u001acom.apple.lastuseddate#PS\u0000\u0000\u0000\u0000\u001f\u0006g\u0000\u0000\u0000\u0000b\u001d\u0000\u0000\u0000\u0000",
      "._InputException.java": "\u0000\u0005\u0016\u0007\u0000\u0002\u0000\u0000Mac OS X        \u0000\u0002\u0000\u0000\u0000\t\u0000\u0000\u00002\u0000\u0000\u0000~\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ATTR\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u001acom.apple.lastuseddate#PS\u0000\u0000\u0000\u0000\u001f\u0006g\u0000\u0000\u0000\u00000v\u001d\u0000\u0000\u0000\u0000",
      "._KelimeBulunamadiException.java": "\u0000\u0005\u0016\u0007\u0000\u0002\u0000\u0000Mac OS X        \u0000\u0002\u0000\u0000\u0000\t\u0000\u0000\u00002\u0000\u0000\u0000~\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ATTR\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u001acom.apple.lastuseddate#PS\u0000\u0000\u0000\u0000\u001f\u0006g\u0000\u0000\u0000\u0000)\t\u001e\u0000\u0000\u0000\u0000",
      "._Main.java": "\u0000\u0005\u0016\u0007\u0000\u0002\u0000\u0000Mac OS X        \u0000\u0002\u0000\u0000\u0000\t\u0000\u0000\u00002\u0000\u0000\u0000~\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ATTR\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u001acom.apple.lastuseddate#PS\u0000\u0000\u0000\u0000\u0006g\u0000\u0000\u0000\u0000V\f\u0000\u0000\u0000\u0000"
    },
    {
      "id": "4856424",
      "KelimeSayaci.java": "import java.io.BufferedReader;\nimport java.io.FileReader;\nimport java.io.IOException;\nimport java.util.List;\n\nclass InputException extends Exception{\n\tpublic InputException(String message) {\n\t\tsuper(message);\n\t}\n}\n\nclass DosyaBulunamadiException extends InputException{\n\tpublic DosyaBulunamadiException (String dosyaAdi) {\n\t\tsuper(\"HATA: \" + dosyaAdi + \" bulunamadı.\");\n\t}\n}\n\nclass BosDosyaException extends InputException{\n\tpublic BosDosyaException (String dosyaAdi) {\n\t\tsuper(\"HATA: \" + dosyaAdi + \" bos.\");\n\t}\n}\n\nclass KelimeBulunamadiException extends Exception{\n\tpublic KelimeBulunamadiException (String word) {\n\t\tsuper(\"HATA: \" + word + \" metinde bulunamadi.\");\n\t}\n}\npublic class KelimeSayaci {\n\n\tpublic static void main(String[] args) {\n\t\t\n\t\ttry {\n\t\t\tList<String> kelimeler = readtheFile(\"kelimeler.txt\");\n\t\t\t\n\t\t}catch(InputException e) {\n\t\t\te.getMessage();\n\t\t}catch(IOException e){\n\t\t\tSystem.out.println(\"HATA: Dosya okuma/yazma hatasi\");\n\t\t}\n\t}\n\t\t\n\t\t\n\tpublic static List<String> readtheFile(String filename) throws InputException, IOException{\n\t\t\n\t\ttry(BufferedReader bfr = new BufferedReader (new FileReader());\n\t}\n\t\n\t\t}\n\t\t\n            \n\n\t\t\n\t\n\n",
      "._KelimeSayaci.java": "\u0000\u0005\u0016\u0007\u0000\u0002\u0000\u0000Mac OS X        \u0000\u0002\u0000\u0000\u0000\t\u0000\u0000\u00002\u0000\u0000\u0000q\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ATTR\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u000b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u000b\u0000\u0000\u0015com.apple.provenance\u0000\u0001\u0000\u0000El\u000fs\u000e"
    },
    {
      "id": "9164612",
      "KelimeSayaci.java": "import java.io.*;\nimport java.util.*;\n\npublic class KelimeSayaci {\n    public static void main(String[] args) {\n        try {\n\n            List<String> kelimeler = dosyaOku(\"kelimeler.txt\");\n            List<String> metin = dosyaOku(\"metin.txt\");\n\n\n            Map<String, Integer> kelimeSayilari = kelimeSay(kelimeler, metin);\n\n\n            dosyaYaz(\"sonuc.txt\", kelimeSayilari);\n\n        } catch (InputException | KelimeBulunamadiException e) {\n            System.err.println(e.getMessage());\n        } catch (IOException e) {\n            System.err.println(\"Dosya okuma/yazma hatası: \" + e.getMessage());\n        }\n    }\n\n\n    private static List<String> dosyaOku(String dosyaAdi) throws InputException, IOException {\n        File file = new File(dosyaAdi);\n        if (!file.exists()) {\n            throw new DosyaBulunamadiException(dosyaAdi);\n        }\n\n        List<String> lines = new ArrayList<>();\n        try (BufferedReader br = new BufferedReader(new FileReader(file))) {\n            String line;\n            while ((line = br.readLine()) != null) {\n                lines.add(line.trim().toLowerCase());\n            }\n        }\n\n        if (lines.isEmpty()) {\n            throw new BosDosyaException(dosyaAdi);\n        }\n        return lines;\n    }\n\n\n    private static Map<String, Integer> kelimeSay(List<String> kelimeler, List<String> metin) throws KelimeBulunamadiException {\n        Map<String, Integer> kelimeSayilari = new HashMap<>();\n\n        for (String kelime : kelimeler) {\n            int sayac = 0;\n            for (String satir : metin) {\n                String[] kelimeDizisi = satir.replaceAll(\"[^a-zA-Zçğıöşü]\", \" \").split(\"\\\\s+\");\n                for (String kelimeMetin : kelimeDizisi) {\n                    if (kelimeMetin.equals(kelime)) {\n                        sayac++;\n                    }\n                }\n            }\n            if (sayac == 0) {\n                throw new KelimeBulunamadiException(kelime);\n            }\n            kelimeSayilari.put(kelime, sayac);\n        }\n        return kelimeSayilari;\n    }\n\n\n    private static void dosyaYaz(String dosyaAdi, Map<String, Integer> kelimeSayilari) throws IOException {\n        try (BufferedWriter writer = new BufferedWriter(new FileWriter(dosyaAdi))) {\n            for (Map.Entry<String, Integer> entry : kelimeSayilari.entrySet()) {\n                writer.write(entry.getKey() + \" \" + entry.getValue());\n                writer.newLine();\n            }\n            System.out.println(\"✅ sonuc.txt başarıyla oluşturuldu!\");\n        }\n    }\n\n}\n",
      "KelimeBulunamadiException.java": "public class KelimeBulunamadiException extends Exception {\n    public KelimeBulunamadiException(String word) {\n        super(\"HATA: \" + word + \" metinde bulunamadı.\");\n    }\n}",
      "BosDosyaException.java": "public class BosDosyaException extends InputException {\n    public BosDosyaException(String fileName) {\n        super(\"HATA: \" + fileName + \" boş.\");\n    }\n}\n",
      "InputException.java": "public class InputException extends Exception {\n    public InputException(String message) {\n        super(message);\n    }\n}",
      "DosyaBulunamadiException.java": "public class DosyaBulunamadiException extends InputException\n{\n  public DosyaBulunamadiException(String fileName)\n  {\n    super(\"HATA: \" + fileName + \" bulunamadı.\");\n  }\n}\n"
    }
  ]
}