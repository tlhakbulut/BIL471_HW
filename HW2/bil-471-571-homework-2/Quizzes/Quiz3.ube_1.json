{
  "questions": [
    "Kek Üretim Boru Hattı\n\nBIL 211 - Quiz 3\n\n27 Şubat 2025\n\n1 Giriş\n\nBu quizde, FileIO ve Exceptions kullanarak basit bir Kek Üretim Boru Hattı uygulaması geliştireceğiz.\nUygulama, interaktif bir terminal menüsü üzerinden, bir kekin üretiminde yer alacak aşamaların (pastaban,\nkrema, süsleme) seçilmesini, belirlenen sıraya göre uygulanmasını ve bu üretim geçmişinin bir dosyaya kayıt\nedilip sonradan geri yüklenebilmesini sağlayacaktır. Ayrıca, üretime eklenen özelliklerin desteklenmemesi,\naşamaların beklenen sırada uygulanmaması veya dosya yükleme sırasında oluşabilecek sorunlu durumlarda\nözel hatalar atmalıdır.\n\n2 Genel Program\nProgram konsol tabanlı bir kullanıcı arayüzü ile kek üretim boru hattının denetlenmesini sağlamalıdır.\nArayüz özellikleri aşağıdaki gibidir.\n\n- Terminal Menüsü: Kullanıcıya aşağıdaki seçenekleri sunacaktır:\n\n– Üretim Başlat: Kek üretiminde kullanılacak aşamaların (pastaban, krema, süsleme) seçilmesi\n\nsürecini başlatır.\n\n– Üretim Geçmişi: Üretim geçmişinin ekranda listelenmesi.\n\n– Kaydet: Üretim geçmişinin dosyaya kaydedilmesi.\n\n– Yükle: Dosyadan üretim geçmişinin geri yüklenmesi.\n\n– Çıkış: Program sonlandırılır.\n\n- Üretim Süreci: Kek üretimi başlatıldığında (ilk seçenek) kullanıcıya döngü içerisinde yeni bir aşama\nekleme, üretimi tamamlama ya da üretimden vazgeçme seçenekleri sunulmalıdır (yani üretim tamam-\nlanana ya da üretimden vazgeçilene kadar ana menüye dönmeden sürekli yeni aşama eklenmelidir).\nYeni aşama eklenirken kullanıcıdan bu aşama ile ilgili ek bilgi alınmalı ve kaydedilmelidir (örn., sade\npastaban, kakaolu krema, çilek süsleme). Seçilen aşamalar iki adet pasta üretim kuralına uymalıdır:\n1) \"krema\" eklenmeden önce mutlaka en az bir katman \"pastaban\" eklenmiş olmalıdır; 2) \"süsleme\"\neklendikten sonra \"süsleme\" dışında herhangi bir aşama seçilemez. Eğer kullanıcı üretimi tamam-\nladığında bu kurallardan birisi ihlal ediliyorsa bununla ilgili bir hata atılmalı ve üretim iptal edilerek\nana menüye dönülmelidir (atılacak hata ile ilgili ilerleyen bölümleri inceleyin).\n\n- Dosya İşlemleri: Üretilen keklerin üretim geçmişi, programın çalıştığı dizinde sabit isimli kek_uretim\n\ndosyasında saklanabilmeli ve bu dosyadan geri yüklenebilmelidir.\n\n3 UretimAsamasi Sınıfı\nDeğişkenler:\n\n- tip (private String)\n\nUretim asamasinin tipi (yalnizca pastaban, krema ya da susleme olabilir).\n\n- ozellik (private String)\n\nUretim asamasinin ozelligi (örn., krema, çilek).\n\nMetotlar:\n\n- public UretimAsamasi(String tip, String ozellik)\n\nConstructor.\n\n- private değişkenler için getter ve setter tanımlayabilirsiniz.\n\n1\n\n\f4 UretimKaydi Sınıfı\nDeğişkenler:\n\n- asamalar (private ArrayList<UretimAsamaasi>)\n\nKeki üretmek için gerekli aşamalar (aşamalar dizi sırasında gerçekleşir).\n\nMetotlar:\n\n- public UretimKaydi()\n\nConstructor.\n\n- public void parcaEkle(UretimAsamaasi asama)\n\nasamalar dizisine kek üretimi için yeni bir aşama ekler.\n\n- private değişkenler için getter ve setter tanımlayabilirsiniz.\n\n5 FileIO\nProgram, dosya okuma ve yazma işlemleri için Java’nın java.io paketindeki sınıfları (örn., BufferedReader,\nScanner, PrintWriter) kullanacaktır.\nDosya işlemleri sırasında aşağıdaki hata durumları için uygun mesajlar verilmelidir:\n\n- Dosya bulunamazsa: \"HATA: kek_uretim dosyası bulunamadı.\"\n\n- Dosya boşsa: \"HATA: kek_uretim dosyası boş.\"\n\n6 Hata Yönetimi\nProgramda hata yönetimini düzenlemek için aşağıdaki özel hata türleri tanımlanacaktır. Bu hatalar tespit\nedildiğinde program, hata kodu ile sonlanmalı ve ilgili hata mesajları stderr’e yazdırılmalıdır.\n\n6.1 Girdi Hataları (InputException class)\n\nDosya işlemleriyle ilgili hatalar için kendi tanımlayacağınız InputException sınıfından türeyen özel hata\nsınıfları oluşturulacaktır:\n\n- DosyaBulunamadiException (extends InputException): Dosya eksikse atılacak hata.\n\n- Hata mesajı: \"HATA: kek_uretim dosyası bulunamadı.\"\n\n- BosDosyaException (extends InputException): Dosya boşsa atılacak hata.\n\n- Hata mesajı: \"HATA: kek_uretim dosyası boş.\"\n\n6.2 Üretim Süreci Hataları\n\nÜrüne eklenen aşamaların desteklenmemesi veya üretim aşamalarının hatalı sırayla uygulanması durum-\nlarında aşağıdaki hata türleri kullanılacaktır:\n\n- OzellikDesteksizException (extends Exception): Eklenmek istenen aşama, kek üretiminde destek-\n\nlenmiyorsa atılacak hata.\n- Hata mesajı: \"HATA: [aşama adı] kek üretiminde desteklenmiyor.\"\n\n- SiraUyumsuzluguException (extends Exception): Üretim aşamalarının beklenen sırada uygu-\n\nlanmaması durumunda atılacak hata.\n- Hata mesajı: \"HATA: Üretim sırası uyumsuz.\n\n[ihlal edilen pasta üretim kuralı].\"\n\n7 Gönderim Formatı\n\n- Quizinizi bitirdiğinizde asistanlarınızdan birisine kodunuzu ve çıktısını gösterip puanlatın.\n\n- Asistan labınızı puanladığında tüm kaynak dosyalarını ve bu dökümantasyonu bir arşiv dosyası (zip,\n\nrar, 7z, tar, tar.gz) halinde sıkıştırın.\n\n- Arşiv dosyasının Isim_Numara formatında isimlendirin (örn., SebnemFerah_181101014.zip).\n\n- İsimlendirdiğiniz arşiv dosyasını uzak sistemindeki quiz alanına yükleyin.\n\n2\n\n"
  ],
  "answers": [
    {
      "id": "7214465",
      "UretimAsamasi.java": "public class UretimAsamasi {\n    private String tip;\n    private String ozellik;\n\n    public UretimAsamasi(String tip, String ozellik) {\n        this.tip = tip;\n        this.ozellik = ozellik;\n    }\n\n    public String getTip() {\n        return tip;\n    }\n\n    public void setTip(String tip) {\n        this.tip = tip;\n    }\n\n    public String getOzellik() {\n        return ozellik;\n    }\n\n    public void setOzellik(String ozellik) {\n        this.ozellik = ozellik;\n    }\n}\n\n",
      "Main.java": "import java.io.*;\nimport java.util.ArrayList;\nimport java.util.Scanner;\n\npublic class Main {\n    private static UretimKaydi uretimKaydi = new UretimKaydi();\n    private static Scanner scan = new Scanner(System.in);\n    \n    public static void main(String[] args) {\n        while (true) {\n            System.out.println(\"1. Üretim Başlat\");\n            System.out.println(\"2. Üretim Geçmişi\");\n            System.out.println(\"3. Kaydet\");\n            System.out.println(\"4. Yükle\");\n            System.out.println(\"5. Çıkış\");\n            System.out.print(\"Seçiminiz: \");\n            int secim = scan.nextInt();\n            scan.nextLine();\n\n            switch (secim) {\n                case 1:\n                    uretimBaslat();\n                    break;\n                case 2:\n                    uretimGecmisi();\n                    break;\n                case 3:\n                    kaydet();\n                    break;\n                case 4:\n                    yukle();\n                    break;\n                case 5:\n                    System.exit(0);\n                    break;\n                default:\n                    System.out.println(\"Geçersiz seçim.\");\n            }\n        }\n    }\n\n    private static void uretimBaslat() {\n        boolean pastabanAdded = false;\n        boolean suslemeAdded = false;\n        int count = 0;\n    \n        try {\n            while (true) {\n                System.out.print(\"Aşama tipi (pastaban, krema, susleme): \");\n                String tip = scan.nextLine();\n    \n                if (tip.equalsIgnoreCase(\"pastaban\")) {\n                    pastabanAdded = true;\n                    if (count == 1) {\n                        throw new SiraUyumsuzluguException(\"süsleme eklendikten sonra süsleme dışında herhangi bir aşama seçilemez.\");\n                    }\n                } \n                else if (tip.equalsIgnoreCase(\"krema\")) {\n                    if (!pastabanAdded) {\n                        throw new SiraUyumsuzluguException(\"Krema eklenmeden önce en az bir katman pastaban eklenmiş olmalıdır.\");\n                    }\n                    if (count == 1) {\n                        throw new SiraUyumsuzluguException(\"süsleme eklendikten sonra süsleme dışında herhangi bir aşama seçilemez.\");\n                    }\n                }\n                else if (tip.equalsIgnoreCase(\"susleme\")) {\n                    suslemeAdded = true;\n                    count = 1;\n                }\n                else {\n                    throw new OzellikDesteksizException(tip);\n                }\n    \n                System.out.print(\"Aşama özelliği: \");\n                String ozellik = scan.nextLine();\n    \n                UretimAsamasi asama = new UretimAsamasi(tip, ozellik);\n                uretimKaydi.parcaEkle(asama);\n                System.out.print(\"Başka aşama eklemek istiyor musunuz? (yes/no): \");\n                String cevap = scan.nextLine();\n                if (cevap.equalsIgnoreCase(\"no\")) {\n                    System.out.println(\"Ana menüye dönülüyor..\");\n                    break;\n                }\n            }\n        } \n        catch (SiraUyumsuzluguException | OzellikDesteksizException e) {\n            System.err.println(e.getMessage());\n            System.out.println(\"Üretim iptal edildi. Ana menüye dönülüyor..\");\n        } \n        catch (Exception e) {\n            System.err.println(e.getMessage());\n        }\n    }\n\n    private static void uretimGecmisi() {\n        ArrayList<UretimAsamasi> asamalar = uretimKaydi.getAsamalar();\n        for (UretimAsamasi asama : asamalar) {\n            System.out.println(\"Tip: \" + asama.getTip() + \", Özellik: \" + asama.getOzellik());\n        }\n    }\n\n    private static void kaydet() {\n        try (PrintWriter writer = new PrintWriter(new FileWriter(\"kek_uretim.txt\"))) {\n            ArrayList<UretimAsamasi> asamalar = uretimKaydi.getAsamalar();\n            for (UretimAsamasi asama : asamalar) {\n                writer.println(asama.getOzellik() + \",\" + asama.getTip());\n            }\n            System.out.println(\"Üretim geçmişi kaydedildi.\");\n        } \n        catch (IOException e) {\n            System.err.println(\"HATA: Dosya yazma hatası.\");\n        }\n    }\n\n    private static void yukle() {\n        try (BufferedReader reader = new BufferedReader(new FileReader(\"kek_uretim.txt\"))) {\n            String line;\n            UretimKaydi uretimKaydi = new UretimKaydi();\n            while ((line = reader.readLine()) != null) {\n                String[] parts = line.split(\",\");\n                if (parts.length == 2) {\n                    UretimAsamasi asama = new UretimAsamasi(parts[0], parts[1]);\n                    uretimKaydi.parcaEkle(asama);\n                }\n            }\n            System.out.println(\"Üretim geçmişi dosyası yüklendi.\");\n        } \n        catch (FileNotFoundException e) {\n            System.err.println(\"HATA: kek_uretim dosyası bulunamadı.\");\n        } \n        catch (IOException e) {\n            System.err.println(\"HATA: Dosya okuma hatası.\");\n        }\n    }\n    class InputException extends Exception {\n        public InputException(String message) {\n            super(message);\n        }\n    }\n\n    static class OzellikDesteksizException extends Exception {\n        public OzellikDesteksizException(String asama) {\n            super(\"HATA: \" + asama + \" kek üretiminde desteklenmiyor.\");\n        }\n    }\n\n    static class SiraUyumsuzluguException extends Exception {\n        public SiraUyumsuzluguException(String kural) {\n            super(\"HATA: Üretim sırası uyumsuz. \" + kural);\n        }\n    }\n}",
      "UretimKaydi.java": "import java.util.ArrayList;\n\npublic class UretimKaydi {\n    private ArrayList<UretimAsamasi> asamalar;\n\n    public UretimKaydi() {\n        this.asamalar = new ArrayList<>();\n    }\n\n    public void parcaEkle(UretimAsamasi asama) {\n        this.asamalar.add(asama);\n    }\n\n    public ArrayList<UretimAsamasi> getAsamalar() {\n        return asamalar;\n    }\n\n    public void setAsamalar(ArrayList<UretimAsamasi> asamalar) {\n        this.asamalar = asamalar;\n    }\n}"
    },
    {
      "id": "8783086",
      "UretimAsamasi.java": "public class UretimAsamasi {\n    private String tip;\n    private String ozellik;\n\n    public UretimAsamasi(String tip, String ozellik) {\n        this.tip = tip;\n        this.ozellik = ozellik;\n    }\n\n    public String getTip() {\n        return tip;\n    }\n\n    public String getOzellik() {\n        return ozellik;\n    }\n}\n",
      "Main.java": "import java.io.FileInputStream;\nimport java.io.FileOutputStream;\nimport java.io.IOException;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\nimport java.util.Scanner;\n\nimport javax.swing.plaf.TreeUI;\n\npublic class Main {\n    public static void main(String[] args) {\n        int n = 1;\n        int a = 1;\n        int[] type;\n        int x = 0;\n        UretimKaydi uk = new UretimKaydi();\n        UretimKaydi yuklenen;\n        ObjectOutputStream oos = null;\n        try {\n            oos = new ObjectOutputStream(new FileOutputStream(\"C:\\\\Users\\\\Mert\\\\Desktop\\\\Quiz3\\\\kek_uretim.bin\"));\n        } catch (Exception e) {\n            System.out.println(\"Hata\");\n        }\n        ObjectInputStream ois = null;\n        try {\n            ois = new ObjectInputStream(new FileInputStream(\"C:\\\\Users\\\\Mert\\\\Desktop\\\\Quiz3\\\\kek_uretim.bin\"));\n        } catch (Exception e) {\n            System.out.println(\"Hata\");\n        }\n        Scanner scan = new Scanner(System.in);\n        while (n != 0) {\n\n            System.out.println(\"Üretim Başlat: 1 \\nÜretim Geçmişi: 2\\nKaydet: 3\\nYükle: 4 \\nÇıkış: 0\");\n            n = scan.nextInt();\n            a = 1;\n            if (n == 2) {\n                uk.tipget();\n            }\n            if (n == 3) {\n                try {\n                    oos.writeObject(uk);\n                } catch (IOException e) {\n                    System.out.println(\"Hata\");\n                }\n\n            }\n            if (n == 4) {\n                try {\n                    yuklenen = (UretimKaydi) ois.readObject();\n                } catch (Exception e) {\n                    System.out.println(\"Hata\");\n                }\n\n            }\n\n            if (n == 1) {\n                while (a != 0) {\n                    type = new int[20];\n                    System.out.println(\"Aşama ekleme: 1\\nÜretimi tamamla: 2\\nÜretimden vazgeç: 0\");\n                    a = scan.nextInt();\n                    if (a == 1) {\n                        System.out.println(\n                                \"Eklemek istediğiniz malzemeyi seçiniz:\\nPastaban: 1\\nSade: 2\\nKakaolu krema: 3\\nÇilek süsleme: 4\");\n                        type[x] = scan.nextInt();\n                        x++;\n\n                    }\n                    if (a == 2) {\n                        boolean ptbn = false;\n                        for (int i = 0; i < type.length; i++) {\n                            if (type[i] == 1) {\n                                ptbn = true;\n                            }\n                            if (type[i] == 0) {\n                                break;\n                            }\n                            for (int j = 0; j < i; j++) {\n                                try {\n                                    if (type[j] == 4) {\n                                        throw new SiraUyumsuzluguException();\n                                    }\n                                } catch (SiraUyumsuzluguException e) {\n                                    System.out.println(\"HATA: Üretim sırası uyumsuz.\");\n                                    a = 0;\n                                }\n                                try {\n                                    if (type[i] == 2 && ptbn == false) {\n                                        throw new SiraUyumsuzluguException();\n                                    }\n                                } catch (SiraUyumsuzluguException e) {\n                                    System.out.println(\"HATA: Üretim sırası uyumsuz.\");\n                                    a = 0;\n                                }\n                                try {\n                                    if (type[i] > 4) {\n                                        throw new OzellikDesteksizException();\n                                    }\n                                } catch (OzellikDesteksizException e) {\n                                    System.out.println(\"HATA: [\" + type[i] + \"]kek üretiminde desteklenmiyor.\");\n                                    a = 0;\n                                }\n                            }\n                        }\n                        for (int i = 0; i < type.length; i++) {\n                            if (type[i] == 0) {\n                                break;\n                            }\n                            if (type[i] == 1) {\n                                UretimAsamasi ua = new UretimAsamasi(\"Pastaban\", \"Çilek\");\n                                uk.parcaEkle(ua);\n                            }\n                            if (type[i] == 2) {\n                                UretimAsamasi ua = new UretimAsamasi(\"Sade\", \"Çilek\");\n                                uk.parcaEkle(ua);\n                            }\n                            if (type[i] == 3) {\n                                UretimAsamasi ua = new UretimAsamasi(\"Kakaolu Krema\", \"Çilek\");\n                                uk.parcaEkle(ua);\n                            }\n                            if (type[i] == 4) {\n                                UretimAsamasi ua = new UretimAsamasi(\"Çilekli Krema\", \"çilek\");\n                                uk.parcaEkle(ua);\n                            }\n                        }\n\n                    }\n                }\n            }\n        }\n\n    }\n}\n",
      "BosDosyaException.java": "public class BosDosyaException extends InputException {\n    BosDosyaException() {\n        super();\n    }\n}\n",
      "UretimKaydi.java": "import java.util.ArrayList;\n\npublic class UretimKaydi {\n    private ArrayList<UretimAsamasi> asamalar;\n\n    public UretimKaydi() {\n        asamalar = new ArrayList<>();\n    }\n\n    public void parcaEkle(UretimAsamasi asama) {\n        asamalar.add(asama);\n    }\n\n    public void tipget() {\n        for (int j = 0; j < asamalar.size(); j++) {\n            System.out.println(asamalar.get(j).getTip());\n        }\n\n    }\n}\n",
      "OzellikDesteksizException.java": "public class OzellikDesteksizException extends Exception {\n    OzellikDesteksizException() {\n        super();\n    }\n\n}\n",
      "SiraUyumsuzluguException.java": "public class SiraUyumsuzluguException extends Exception {\n    SiraUyumsuzluguException() {\n        super();\n    }\n}\n",
      "InputException.java": "public class InputException extends Exception {\n\n    InputException() {\n        super();\n    }\n}\n",
      "DosyaBulunamadiException.java": "public class DosyaBulunamadiException extends InputException {\n    DosyaBulunamadiException() {\n        super();\n    }\n}\n"
    },
    {
      "id": "3659398",
      "UretimAsamasi.java": " class UretimAsamasi {\n    private String tip;\n    private String ozellik;\n    public UretimAsamasi(String tip, String ozellik)\n    {\n        this.tip = tip;\n        this.ozellik = ozellik;\n    }\n    public String getTip()\n    {\n        return tip;\n    }\n    public String getOzellik()\n    {\n        return ozellik;\n    }\n    public void setTip(String str)\n    {\n        tip = str;\n    }\n    public void setOzellik(String str)\n    {\n        ozellik = str;\n    }\n    public String toString()\n    {\n        return tip + \" / \" + ozellik;\n    }\n\n}\n",
      "Main.java": "import java.io.*;\nimport java.util.*;\n\n\n\npublic class Main {\n    public final static String dosyasismi = \"kek_uretim.txt\";\n    public static UretimKaydi uretimkaydi;\n\n    public static void main(String[] args) {\n        Scanner klavye = new Scanner(System.in);\n        Scanner reader = null;\n        PrintWriter writer = null;\n        File file = null;\n        try{System.out.println(\"Üretim başlatmak için: 1\");\n        System.out.println(\"Üretim geçmişi görmek için: 2\");\n        System.out.println(\"Kaydetmek için: 3\");\n        System.out.println(\"Yüklemek için: 4\");\n        System.out.println(\"Çıkış için: 5\");\n        int indis = 0;\n        int secim = klavye.nextInt();\n        while(true){\n      \n            file = new File(dosyasismi);\n            if(!file.exists())\n            {throw new DosyaBulunamadiException();}\n           try {if (secim == 1) {\n            \n                int geciciindis = indis;\n                System.out.println(\"Yeni bir aşama eklemek için: 1\");\n                System.out.println(\"Üretim tamamlama için: 2\");\n                System.out.println(\"Üretimden vazgeçmek için: 3\");\n            int secim2 = klavye.nextInt();\n            while (true) {\n                \n                if (secim2 == 1) {\n                    System.out.print(\"tip giriniz:\");\n                    String tip = klavye.next();\n                    if(!(tip.equals(\"pastaban\") || tip.equals(\"krema\") || tip.equals(\"susleme\")))\n                    {\n                        String err = \"HATA: \" + tip + \" kek üretiminde desteklenmiyor.\";\n                        throw new OzellikDesteksizException(err);\n                        \n                    } \n                    System.out.print(\"ozellik giriniz:\");\n                    String ozellik = klavye.next();\n                    if(geciciindis == 0 && tip.equals(\"krema\"))\n                    {\n                        throw new SiraUyumsuzluguException(\"HATA: Üretim sırası uyumsuz. \" + \"Pastaban eklenmeden krema eklenmez\");\n                    }\n                    if(geciciindis != 0)\n                    {\n                        if(uretimkaydi.getList().get(geciciindis).getTip().equals(\"süsleme\") && !ozellik.equals(\"süsleme\"))\n                        {\n                            throw new SiraUyumsuzluguException(\"HATA: Üretim sırası uyumsuz. \" + \"Süsleme eklendikten sonra sadece süsleme eklenebilir\");\n                        }\n                    }\n                    boolean flag = false;\n                    if(geciciindis != 0){for(int i = indis + 1; i < geciciindis + 1; i++)\n                    {\n                        if(uretimkaydi.getList().get(i).getTip().equals(\"pastaban\"))\n                        flag = true;\n                    }}\n                    if(!flag && tip.equals(\"krema\"))\n                    throw new SiraUyumsuzluguException(\"HATA: Üretim sırası uyumsuz. \" + \"Pastaban eklenmeden krema eklenmez\");\n                    uretimkaydi.parcaEkle(new UretimAsamasi(tip, ozellik));\n                    geciciindis++;\n                } else if (secim2 == 2) {\n                 writer = new PrintWriter(new FileOutputStream(\"gecici.txt\", false));\n                 \n                 for(int i = indis; i < geciciindis + 1; i++)\n                 {\n                    writer.print(uretimkaydi.getList().get(i).toString());\n                 }\n                 indis = geciciindis;\n                 break;\n                } else if (secim2 == 3) {\n                    for (int i = geciciindis; i > indis; i--) {\n                        uretimkaydi.getList().remove(i);\n                    }\n                    break;\n                }\n                else\n                {\n                    System.out.println(\"geçersiz işlem\");\n                }\n                System.out.println(\"Yeni bir aşama eklemek için: 1\");\n                System.out.println(\"Üretim tamamlama için: 2\");\n                System.out.println(\"Üretimden vazgeçmek için: 3\");\n                secim2 = klavye.nextInt();\n\n            \n        } } else if (secim == 2) {\n            \n            reader = new Scanner(file);\n            if(!reader.hasNext())\n            {\n                reader.close();\n                throw new BosDosyaException();\n                \n            }\n            while (reader.hasNext()) {\n                System.out.println(reader.nextLine());\n            }\n        } else if (secim == 3) {\n            System.out.println(\"Kaydediliyor...\");\n            writer = new PrintWriter(new FileOutputStream(file));\n            reader = new Scanner(new FileInputStream(\"gecici.txt\"));\n            while(reader.hasNext())\n            {\n                writer.println(reader.nextLine());\n            }\n\n        } else if (secim == 4) {\nSystem.out.println(\"Yükleniyor...\");\nwriter = new PrintWriter(new FileOutputStream(file));\nreader = new Scanner(new FileInputStream(\"gecici.txt\"));\nwhile(reader.hasNext())\n{\n    writer.println(reader.nextLine());\n}\n        } else if (secim == 5) {\n            System.out.println(\"Sistem sonlandırılıyor\");\n            System.exit(0);\n        }\n        else \n        {\n            System.out.println(\"Geçersiz işlem..\");\n        }}\n        catch(SiraUyumsuzluguException e)\n        {\n            System.out.println(e.getMessage());\n        }\n        catch(OzellikDesteksizException e)\n        {\n            System.out.println(e.getMessage());\n        }\n        System.out.println(\"Üretim başlatmak için: 1\");\n        System.out.println(\"Üretim geçmişi görmek için: 2\");\n        System.out.println(\"Kaydetmek için: 3\");\n        System.out.println(\"Yüklemek için: 4\");\n        System.out.println(\"Çıkış için: 5\");\n        secim = klavye.nextInt();}\n    }catch(DosyaBulunamadiException e)\n    {\n        System.out.println(e.getMessage());\n        System.out.println(\"merhaba\");\n    }catch(\n    BosDosyaException e)\n    {\n        System.out.println(e.getMessage());\n    }catch(\n    Exception e)\n    {\n        System.out.println(e.getMessage());\n    }\n    finally\n    {\n    klavye.close();\n    reader.close();\n    writer.close();\n    \n    }\n}\n}\n",
      "BosDosyaException.java": "public class BosDosyaException extends InputException {\n    public BosDosyaException() {\n     super(\"HATA: kek_uretim dosyası boş.\");\n \n     }\n \n }\n ",
      "UretimKaydi.java": "import java.util.ArrayList;\n\nclass UretimKaydi {\n    private ArrayList<UretimAsamasi> asamalar;\n    public UretimKaydi()\n    {\n        asamalar = new ArrayList<>();\n    }\n    public void parcaEkle(UretimAsamasi asama)\n    {\n        asamalar.add(asama);\n    }\n    public ArrayList<UretimAsamasi> getList()\n    {\n        return asamalar;\n    }\n\n}\n",
      "OzellikDesteksizException.java": " class OzellikDesteksizException extends Exception{\n    public OzellikDesteksizException(String str)\n    {\n        super(str);\n    }\n\n}\n",
      "SiraUyumsuzluguException.java": "public class SiraUyumsuzluguException extends Exception{\n    public SiraUyumsuzluguException(String str){\n        super(str);\n\n    }\n\n}\n",
      "InputException.java": " class InputException extends Exception{\n   public InputException(String str) {\n    super(str);\n\n    }\n\n}\n",
      "DosyaBulunamadiException.java": "public class DosyaBulunamadiException extends InputException {\n   public DosyaBulunamadiException() {\n    super(\"HATA: kek_uretim dosyası bulunamadı.\");\n\n    }\n\n}\n"
    },
    {
      "id": "1762204",
      "UretimAsamasi.java": "public class UretimAsamasi {\n    private String tip = \"\";\n    private String ozellik = \"\";\n\n    public UretimAsamasi(String tip, String ozellik) {\n        this.tip = tip;\n        this.ozellik = ozellik;\n    }\n\n    public String getTip() {\n        return tip;\n    }\n    public String getOzellik() {\n        return ozellik;\n    }\n    public void setTip(String newTip) {\n        tip = newTip;\n    }\n    public void setozellik(String newozellik) {\n        ozellik = newozellik;\n    }\n}\n",
      "Main.java": "import java.io.File;\nimport java.io.FileNotFoundException;\nimport java.io.PrintWriter;\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Scanner;\n\npublic class Main {\n    public static Scanner keyboard = null;\n    public static void main(String[] args) throws SiraUyumsuzluguException, DosyaBulunamadiException, OzellikDesteksizException {\n        keyboard = new Scanner(System.in);\n        ArrayList<UretimKaydi> uretimKayitlari = new ArrayList<>();\n\n        while (true) {\n            UretimKaydi newUretimKaydi = new UretimKaydi();\n            System.out.println(\"Seçenekler:\");\n            System.out.println(\"1) Üretim Başlat\");\n            System.out.println(\"2) Üretim Geçmişi\");\n            System.out.println(\"3) Kaydet\");\n            System.out.println(\"4) Yükle\");\n            System.out.println(\"5) Çıkış\");\n            System.out.print(\"Seçeneğiniz: \");\n            int selectedOption = keyboard.nextInt();\n    \n            if (selectedOption == 1) {\n                startUretim(newUretimKaydi, uretimKayitlari);\n            } else if (selectedOption == 2) {\n                for (int i = 0; i < uretimKayitlari.size(); i++) {\n                    System.out.println(\"----------- Üretim \" + (i+1) + \" -----------\");\n                    uretimKayitlari.get(i).printSteps();\n                }\n            } else if (selectedOption == 3) {\n                System.out.print(\"Kayıt işlemini yapacağınız dosya: \");\n                String fileName = keyboard.next();\n                File file = new File(fileName);\n                PrintWriter fileWriter = null;\n                try {\n                    fileWriter = new PrintWriter(file);\n                } catch (FileNotFoundException e) {\n                    throw new DosyaBulunamadiException(fileName);\n                }\n                \n                for (int i = 0; i < uretimKayitlari.size(); i++) {\n                    fileWriter.println(\"----------- Üretim \" + (i+1) + \" -----------\");\n                    for (int j = 0; j < uretimKayitlari.get(i).getAsamalar().size(); j++) {\n                        fileWriter.println((j+1) + \". aşama: \" + uretimKayitlari.get(i).getAsamalar().get(j).getOzellik() + \" \" + uretimKayitlari.get(i).getAsamalar().get(j).getTip());\n                    }\n                }\n                fileWriter.close();\n            } else if (selectedOption == 4) {\n                System.out.print(\"Yükleyeceğiniz dosya: \");\n                String fileName = keyboard.next();\n                File file = new File(fileName);\n                Scanner fileScanner = null;\n                \n                try {\n                    fileScanner = new Scanner(file);\n                } catch (FileNotFoundException e) {\n                    throw new DosyaBulunamadiException(fileName);\n                }\n                \n                UretimKaydi uretimKaydi = null;\n                while (fileScanner.hasNextLine()) {\n                    String line = fileScanner.nextLine();\n                    if (line.startsWith(\"-\")) {\n                        if (uretimKaydi != null) {\n                            uretimKayitlari.add(uretimKaydi);\n                        }\n                        uretimKaydi = new UretimKaydi();\n                    } else {\n                        String stepOzellik = line.split(\" \")[2];\n                        String stepTip = line.split(\" \")[3];\n                        uretimKaydi.parcaEkle(new UretimAsamasi(stepTip, stepOzellik));\n                    }\n                }\n                if (uretimKaydi != null) {\n                    uretimKayitlari.add(uretimKaydi);\n                }\n                \n                fileScanner.close();\n            } else if (selectedOption == 5) {\n                keyboard.close();\n                System.exit(0);\n            }\n        }\n    }\n\n    public static void startUretim(UretimKaydi uretimKaydi, List<UretimKaydi> uretimKayitlari) throws SiraUyumsuzluguException, OzellikDesteksizException {\n        while (true) {\n            System.out.println(\"1) Aşama ekle\");\n            System.out.println(\"2) Üretimi tamamla\");\n            System.out.println(\"3) Üretimden vazgeç\");\n            System.out.print(\"Seçeneğiniz: \");\n            int selectedOption = keyboard.nextInt();\n            if (selectedOption == 1) {\n                System.out.print(\"Aşamayı yazın: \");\n                String stepOzellik = keyboard.next();\n                String stepTip = keyboard.next();\n                UretimAsamasi uretimAsamasi = new UretimAsamasi(stepTip, stepOzellik);\n                uretimKaydi.parcaEkle(uretimAsamasi);\n            }\n            else if (selectedOption == 2) {\n                uretimKaydi.checkSteps();\n                uretimKayitlari.add(uretimKaydi);\n                return;\n            }\n            else if (selectedOption == 3) {\n                return;\n            }\n        }\n    }\n}\n",
      "BosDosyaException.java": "public class BosDosyaException extends InputException {\n    public BosDosyaException() {\n        super(\"HATA: kek_uretim dosyası boş.\");\n    }\n}\n",
      "UretimKaydi.java": "import java.util.ArrayList;\n\npublic class UretimKaydi {\n    private ArrayList<UretimAsamasi> asamalar = new ArrayList<>();\n\n    public UretimKaydi() {\n\n    }\n\n    public void parcaEkle(UretimAsamasi asama) {\n        asamalar.add(asama);\n    }\n    \n    public void checkSteps() throws SiraUyumsuzluguException, OzellikDesteksizException {\n        boolean pastabanAdded = false;\n        boolean suslemeAdded = false;\n        for (UretimAsamasi uretimAsamasi : asamalar) {\n            if (uretimAsamasi.getTip().equals(\"krema\") && !pastabanAdded ) {\n                throw new SiraUyumsuzluguException(\"\\\"krema\\\" eklenmeden önce mutlaka en az bir katman \\\"pastaban\\\" eklenmiş olmalıdır\");\n            }\n            if (suslemeAdded && !(uretimAsamasi.getTip().equals(\"süsleme\"))) {\n                throw new SiraUyumsuzluguException(\"\\\"süsleme\\\" eklendikten sonra \\\"süsleme\\\" dışında herhangi bir aşama seçilemez.\");\n            }\n            if (!(uretimAsamasi.getTip().equals(\"pastaban\") || uretimAsamasi.getTip().equals(\"krema\") || uretimAsamasi.getTip().equals(\"süsleme\"))) {\n                throw new OzellikDesteksizException(uretimAsamasi.getTip());\n            }\n            if (uretimAsamasi.getTip().equals(\"pastaban\")) {\n                pastabanAdded = true;\n            }\n            if (uretimAsamasi.getTip().equals(\"süsleme\")) {\n                suslemeAdded = true;\n            }\n        }\n    }\n\n    public void printSteps() {\n        for (int i = 0; i < asamalar.size(); i++) {\n            System.out.println((i+1) + \". aşama: \" + asamalar.get(i).getOzellik() + \" \" + asamalar.get(i).getTip());\n        }\n    }\n\n    public ArrayList<UretimAsamasi> getAsamalar() {\n        return asamalar;\n    }\n}\n",
      "OzellikDesteksizException.java": "public class OzellikDesteksizException extends Exception {\n    // TODO: hatayı fırlattığın yeri yap\n    public OzellikDesteksizException(String stepName) {\n        super(\"HATA: \" + stepName + \" kek üretiminde desteklenmiyor.\");\n    }\n}\n",
      "SiraUyumsuzluguException.java": "public class SiraUyumsuzluguException extends Exception {\n    public SiraUyumsuzluguException(String ihlalKuralı) {\n        super(\"HATA: Üretim sırası uyumsuz. \" + ihlalKuralı);\n    }\n}\n",
      "InputException.java": "public class InputException extends Exception {\n    public InputException(String message) {\n        super(message);\n    }\n}\n",
      "DosyaBulunamadiException.java": "public class DosyaBulunamadiException extends InputException {\n    public DosyaBulunamadiException(String fileName) {\n        super(\"HATA: \" + fileName + \" dosyası bulunamadı.\");\n    }\n}\n"
    },
    {
      "id": "9830856",
      "UretimAsamasi.java": "public class UretimAsamasi {\n    private String tip;\n    private String ozellik;\n    \n    public UretimAsamasi(String tip, String ozellik) {\n        this.tip = tip;\n        this.ozellik = ozellik;\n    }\n    \n    public String getTip() {\n        return tip;\n    }\n    \n    public String getOzellik() {\n        return ozellik;\n    }\n    \n    @Override\n    public String toString() {\n        return tip + \" - \" + ozellik;\n    }\n}",
      "BosDosyaException.java": "public  class BosDosyaException extends InputException \n{\n    public BosDosyaException() \n    {\n        super(\"HATA: kek_uretim dosyası boş.\");\n    }\n}",
      "UretimKaydi.java": "import java.util.ArrayList;\n\npublic class UretimKaydi \n{\n    private ArrayList<UretimAsamasi> asamalar;\n    \n    public UretimKaydi() \n    {\n        this.asamalar = new ArrayList<>();\n    }\n    \n    public void parcaEkle(UretimAsamasi asama) \n    {\n        asamalar.add(asama);\n    }\n    \n    public ArrayList<UretimAsamasi> getAsamalar() \n    {\n        return asamalar;\n    }\n    \n    @Override\n    public String toString() \n    {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < asamalar.size(); i++) \n        {\n            sb.append((i + 1) + \". \" + asamalar.get(i).toString());\n            System.out.println();\n        }\n        return sb.toString();\n    }\n}",
      "OzellikDesteksizException.java": "public class OzellikDesteksizException extends Exception \n{\n    public OzellikDesteksizException(String asama) \n    {\n        super(\"HATA: \" + asama + \" kek üretiminde desteklenmiyor.\");\n    }\n}",
      "KekUretim.java": "import java.io.*;\nimport java.util.*;\n\n\n\n\npublic class KekUretim \n{\n    private static ArrayList<UretimKaydi> uretimGecmisi = new ArrayList<>();\n    private static final String filename = \"kek_uretim\";\n    private static final Set<String> validProcess = new HashSet<>(Arrays.asList(\"pastaban\", \"krema\", \"susleme\"));\n    \n    public static void main(String[] args) \n    {\n        Scanner scanner = new Scanner(System.in);\n        boolean devam = true;\n        \n        while (devam) \n        {\n            menuGoster();\n            int secim = scanner.nextInt();\n            scanner.nextLine(); \n            \n            try \n            {\n                switch (secim) \n                {\n                    case 1:\n                        uretimBaslat(scanner);\n                        break;\n                    case 2:\n                        uretimGecmisiGoster();\n                        break;\n                    case 3:\n                        kaydet();\n                        break;\n                    case 4:\n                        yukle();\n                        break;\n                    case 5:\n                        devam = false;\n                        break;\n                    default:\n                        System.out.println(\"Geçersiz seçim!\");\n                }\n            } \n            \n            catch (Exception e) \n            {\n                System.err.println(e.getMessage());\n            }\n        }\n        scanner.close();\n    }\n    \n    private static void menuGoster() \n    {\n        System.out.println();\n        System.out.println(\"=== KEK ÜRETİM BORU HATTI ===\");\n        System.out.println(\"1. Üretim Başlat\");\n        System.out.println(\"2. Üretim Geçmişi\");\n        System.out.println(\"3. Kaydet\");\n        System.out.println(\"4. Yükle\");\n        System.out.println(\"5. Çıkış\");\n        System.out.print(\"Seçiminiz: \");\n    }\n    \n    private static void uretimBaslat(Scanner scanner) throws Exception \n    {\n        UretimKaydi yeniUretim = new UretimKaydi();\n        boolean pastatabanVar = false;\n        boolean suslemeVar = false;\n        \n        while (true) \n        {\n            System.out.println();\n            System.out.println(\"1. Yeni aşama ekle\");\n            System.out.println(\"2. Üretimi tamamla\");\n            System.out.println(\"3. Üretimden vazgeç\");\n            System.out.print(\"Seçiminiz: \");\n            \n            int secim = scanner.nextInt();\n            scanner.nextLine(); \n            \n            if (secim == 1) \n            {\n                System.out.print(\"Aşama tipini girin (pastaban/krema/susleme): \");\n                String tip = scanner.nextLine().toLowerCase();\n                \n                if (!validProcess.contains(tip)) \n                {\n                    throw new OzellikDesteksizException(tip);\n                }\n                \n                if (suslemeVar) \n                {\n                    throw new SiraUyumsuzluguException(\"Süslemeden sonra başka aşama eklenemez.\");\n                }\n                \n                if (tip.equals(\"krema\") && !pastatabanVar) \n                {\n                    throw new SiraUyumsuzluguException(\"Krema eklemeden önce pastaban eklenmelidir.\");\n                }\n                \n                System.out.print(\"Özelliği girin: \");\n                String ozellik = scanner.nextLine();\n                \n                UretimAsamasi asama = new UretimAsamasi(tip, ozellik);\n                yeniUretim.parcaEkle(asama);\n                \n                if (tip.equals(\"pastaban\")) pastatabanVar = true;\n                if (tip.equals(\"susleme\")) suslemeVar = true;\n                \n            } else if (secim == 2) \n            {\n                if (!pastatabanVar) \n                {\n                    throw new SiraUyumsuzluguException(\"En az bir pastaban katmanı gerekli.\");\n                }\n                uretimGecmisi.add(yeniUretim);\n                System.out.println(\"Üretim başarıyla tamamlandı!\");\n                break;\n            } else if (secim == 3) \n            {\n                System.out.println(\"Üretimden vazgeçildi.\");\n                break;\n            }\n        }\n    }\n    \n    private static void uretimGecmisiGoster() \n    {\n        if (uretimGecmisi.isEmpty()) \n        {\n            System.out.println(\"Henüz üretim geçmişi yok.\");\n            return;\n        }\n        \n        System.out.println();\n        System.out.println(\"=== ÜRETİM GEÇMİŞİ ===\");\n\n        for (int i = 0; i < uretimGecmisi.size(); i++) \n        {\n            System.out.println();\n            System.out.println(\"Üretim #\" + (i + 1));\n            System.out.print(uretimGecmisi.get(i));\n        }\n    }\n    \n    private static void kaydet() throws IOException \n    {\n        try (PrintWriter writer = new PrintWriter(new FileWriter(filename))) \n        {\n            for (UretimKaydi kayit : uretimGecmisi) \n            {\n                for (UretimAsamasi asama : kayit.getAsamalar()) \n                {\n                    writer.println(asama.getTip() + \",\" + asama.getOzellik());\n                }\n                writer.println(\"---\"); \n            }\n            System.out.println(\"Üretim geçmişi başarıyla kaydedildi.\");\n        }\n    }\n    \n    private static void yukle() throws Exception \n    {\n        File dosya = new File(filename);\n        if (!dosya.exists()) \n        {\n           throw new DosyaBulunamadiException();\n        }\n        \n        uretimGecmisi.clear();\n        UretimKaydi geciciKayit = new UretimKaydi();\n        \n        try (BufferedReader reader = new BufferedReader(new FileReader(dosya))) \n        {\n            String satir;\n            boolean dosyaBos = true;\n            \n            while ((satir = reader.readLine()) != null) \n            {\n                dosyaBos = false;\n                \n                if (satir.equals(\"---\")) \n                {\n                    if (!geciciKayit.getAsamalar().isEmpty()) \n                    {\n                        uretimGecmisi.add(geciciKayit);\n                        geciciKayit = new UretimKaydi();\n                    }\n                } else \n                {\n                    String[] parcalar = satir.split(\",\");\n                    geciciKayit.parcaEkle(new UretimAsamasi(parcalar[0], parcalar[1]));\n                }\n            }\n            \n            if (dosyaBos) \n            {\n                throw new BosDosyaException();\n            }\n            \n            if (!geciciKayit.getAsamalar().isEmpty()) \n            {\n                uretimGecmisi.add(geciciKayit);\n            }\n            \n            System.out.println(\"Üretim geçmişi başarıyla yüklendi.\");\n        }\n    }\n}\n",
      "SiraUyumsuzluguException.java": "public class SiraUyumsuzluguException extends Exception \n{\n    public SiraUyumsuzluguException(String kural) \n    {\n        super(\"HATA: Üretim sırası uyumsuz. \" + kural);\n    }\n}\n",
      "InputException.java": "public class InputException extends Exception\n{\n    public InputException(String message) \n    {\n        super(message);\n    }\n}\n",
      "DosyaBulunamadiException.java": "public class DosyaBulunamadiException extends InputException \n{\n    public DosyaBulunamadiException() \n    {\n        super(\"HATA: kek_uretim dosyası bulunamadı.\");\n    }\n}\n"
    },
    {
      "id": "4380745",
      "UretimAsamasi.java": "package Bil211Quiz3;\n\npublic class UretimAsamasi {\n    private String tip;\n    private String ozellik;\n\n    public UretimAsamasi(String tip, String ozellik){\n        this.tip = tip;\n        this.ozellik = ozellik;\n    }\n\n    public String getTip(){\n        return tip;\n    }\n\n    public String getOzellik(){\n        return ozellik;\n    }\n\n    public void setTip(String tip){\n        if(tip.equalsIgnoreCase(\"pastaban\") || \n        tip.equalsIgnoreCase(\"krema\") || \n        tip.equalsIgnoreCase(\"susleme\")) this.tip = tip;\n    }\n    \n    public void setOzellik(String ozellik){\n        this.ozellik = ozellik;\n    }\n}\n",
      "MainProgram.java": "package Bil211Quiz3;\n\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.FileNotFoundException;\nimport java.io.FileOutputStream;\nimport java.io.IOException;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\nimport java.util.ArrayList;\nimport java.util.Scanner;\n\npublic class MainProgram {\n\n    static ArrayList<UretimKaydi> kayitlar = new ArrayList<>();\n        public static void main(String[] args) {\n            String fileName2 = \"kek_uretim.bin\";\n            UretimKaydi uretimKaydi;\n    \n            try{\n                uretimKaydi = new UretimKaydi();\n                Scanner scanner = new Scanner(System.in);\n                int state = 0; \n    \n                int state2;\n                System.out.println(\"0: Yeni Kayıt\");\n                System.out.println(\"1: Kayıt Yukle\");\n                System.out.println(\"2: Kayıt Yaz\");\n                System.out.println(\"3: Kayıt Göster\");\n                System.out.println(\"4: Çıkış\");\n                state2 = scanner.nextInt();\n                while(state2 == 0 || state2 == 1 || state2 == 2 ||state == 3){\n                    if(state2 == 0){\n                        System.out.println(\"0: Katman Ekle\");\n                        System.out.println(\"1: Uretimi Tamamla\");\n                        System.out.println(\"2: Vazgeç\");\n                        UretimAsamasi asama = new UretimAsamasi(\"\", \"\");\n                        while((state = scanner.nextInt()) == 0){\n                            System.out.println(\"0: Pastaban\");\n                            System.out.println(\"1: Krema\");\n                            System.out.println(\"2: Susleme\");\n                            int tipType = scanner.nextInt();\n                            \n                            String ozellik;\n                            scanner.nextLine();\n                            \n                            if(tipType == 0){\n                                if(SuslemeController(uretimKaydi)){\n                                    throw new SiraUyumsuzluguException(\"2: Susleme Aşamasından Sonra Susleme Dışında Başka Bir Aşama Eklenemez\");\n                                }\n                                else{\n                                    System.out.println(\"Çeşidi Belirtiniz\");    \n                                    ozellik = scanner.nextLine();\n                                    asama = new UretimAsamasi(\"pastaban\", ozellik);\n                                }\n                            }\n                            else if(tipType == 1){  \n                                if(SuslemeController(uretimKaydi)){\n                                    throw new SiraUyumsuzluguException(\"2: Susleme Aşamasından Sonra Susleme Dışında Başka Bir Aşama Eklenemez\");\n                                }\n                                else if(KremaPastabanController(uretimKaydi)){\n                                    System.out.println(\"Çeşidi Belirtiniz\");\n                                    ozellik = scanner.nextLine();\n                                    asama = new UretimAsamasi(\"Krema\", ozellik);\n                                }\n                                else{\n                                    throw new SiraUyumsuzluguException(\"1: Krema eklenmeden önce mutlaka en az bir katman pastaban eklenmelidir\");\n                                }\n                                                    \n                            }\n                            else if(tipType == 2){\n                                System.out.println(\"Çeşidi Belirtiniz\");\n                                ozellik = scanner.nextLine();\n                                asama = new UretimAsamasi(\"Susleme\", ozellik);\n                            }\n                            else{\n                                System.out.println(\"Oyle Bir Seçenek Yok\");\n                                continue;\n                            } \n\n                            uretimKaydi.parcaEkle(asama);\n                        }\n            \n                        if(state != 0 && state != 1 && state != 2 && state != 3 && state != 4) throw new OzellikDesteksizException(\"\" + state);\n\n                        if(state == 1) kayitlar.add(uretimKaydi);\n                        if(state == 2) uretimKaydi = new UretimKaydi(); \n                    }\n                    else if(state2 == 1){\n                        kayitlar = kayitOku(fileName2);\n                    }\n                    else if(state2 == 2){\n                        kayitYaz(kayitlar, fileName2);\n                    }\n                    else{\n                        kayitGoster(kayitlar);\n                    }\n                    state2 = scanner.nextInt();\n                }\n                scanner.close();\n        }\n        catch(Exception e){\n            System.err.println(e.getMessage());\n            e.printStackTrace();\n        }\n    }\n                    \n    public static boolean KremaPastabanController(UretimKaydi kayit){\n        boolean flag = false;\n\n        for(int i = 0; i < kayit.getAsamalar().size(); i++){\n            if(kayit.getAsamalar().get(i).getTip().equalsIgnoreCase(\"pastaban\")){\n                flag = true;\n                break;\n            }\n        }\n\n        return flag;\n    }\n\n    public static boolean SuslemeController(UretimKaydi kayit){\n        for(int i = 0; i < kayit.getAsamalar().size(); i++){\n            if(kayit.getAsamalar().get(i).getTip().equalsIgnoreCase(\"susleme\")){\n                return true;\n            }\n        }\n        return false;\n    }\n\n    @SuppressWarnings(\"unchecked\")\n    public static ArrayList<UretimKaydi> kayitOku(String fileName) throws DosyaBulunamadıException, IOException, ClassNotFoundException, BosDosyaException {\n        ArrayList<UretimKaydi> list;\n\n        File file = new File(fileName);\n\n        if(!file.exists()) throw new DosyaBulunamadıException();\n\n        if(file.length() <= 0) throw new BosDosyaException();\n\n        try(ObjectInputStream binaryIn = new ObjectInputStream(new FileInputStream(fileName))){\n            list = (ArrayList<UretimKaydi>) binaryIn.readObject();\n            \n            return list;\n        }\n        catch(FileNotFoundException e){\n            throw new DosyaBulunamadıException();\n        }\n    }\n\n    public static void kayitYaz(ArrayList<UretimKaydi> list, String fileName) throws DosyaBulunamadıException, IOException{\n        File file = new File(fileName);\n\n        if(!file.exists()) throw new DosyaBulunamadıException();\n\n        try(ObjectOutputStream binaryOut = new ObjectOutputStream(new FileOutputStream(fileName))){\n            binaryOut.writeObject(list);\n        }\n    }\n\n    public static void kayitGoster(ArrayList<UretimKaydi> list){\n        for(int i = 0; i < list.size(); i++){\n            for(int j = 0; j < list.get(i).getAsamalar().size(); j++){\n                System.out.println(list.get(i).getAsamalar().get(j).getTip() + \" - \" + list.get(i).getAsamalar().get(j).getOzellik());\n            }\n        }\n    }\n}\n",
      "DosyaBulunamadıException.java": "package Bil211Quiz3;\n\npublic class DosyaBulunamadıException extends InputException{\n    public DosyaBulunamadıException(){\n        super(\"HATA: kek_uretim dosyası bulunamadı.\");\n    }\n}\n",
      "BosDosyaException.java": "package Bil211Quiz3;\n\npublic class BosDosyaException extends InputException{\n    public BosDosyaException(){\n        super(\"HATA: keke-uretim dosyası boş.\");\n    }\n}\n",
      "UretimKaydi.java": "package Bil211Quiz3;\n\nimport java.io.Serializable;\nimport java.util.ArrayList;\n\npublic class UretimKaydi implements Serializable{\n    private ArrayList<UretimAsamasi> asamalar;\n    \n    public UretimKaydi(){\n        asamalar = new ArrayList<>();\n    }\n\n    public void parcaEkle(UretimAsamasi asama){\n        asamalar.add(asama);\n    }\n\n    public ArrayList<UretimAsamasi> getAsamalar(){\n        return asamalar;\n    }\n\n    public void setAsamalar(ArrayList<UretimAsamasi> asamalar){\n        this.asamalar = asamalar;\n    }\n}\n",
      "OzellikDesteksizException.java": "package Bil211Quiz3;\n\npublic class OzellikDesteksizException extends Exception{\n    public OzellikDesteksizException(UretimAsamasi asama){\n        super(\"HATA: \" + asama.getTip() + \"kek üretiminde desteklenmiyor.\");\n    }\n\n    public OzellikDesteksizException(String asama){\n        super(\"HATA: \" + asama + \"kek üretiminde desteklenmiyor.\");\n    }\n}\n",
      "SiraUyumsuzluguException.java": "package Bil211Quiz3;\n\npublic class SiraUyumsuzluguException extends Exception{\n    public SiraUyumsuzluguException(String hataliAsama){\n        super(\"HATA: Üretim sırası uyumsuz. \" + hataliAsama+\".\");\n    }\n}\n",
      "InputException.java": "package Bil211Quiz3;\n\npublic class InputException extends Exception{\n    public InputException(String message){\n        super(message);\n    }\n}\n"
    },
    {
      "id": "8435496",
      "UretimAsamasi.java": "package Quiz.Quiz3;\n\nimport java.io.Serializable;\n\npublic class UretimAsamasi implements Serializable\n{\n    private String tip;\n    private String ozellik;\n\n    public UretimAsamasi(String tip, String ozellik)\n    {\n        this.tip = tip;\n        this.ozellik = ozellik;\n    }\n\n    @Override\n    public String toString()\n    {\n        return \"tip: \" + tip + \", ozellik: \" + ozellik;\n    }\n\n    public String getTip()\n    {\n        return tip;\n    }\n    public void setTip(String tip)\n    {\n        this.tip = tip;\n    }\n    public String getOzellik()\n    {\n        return ozellik;\n    }\n    public void setOzellik(String ozellik)\n    {\n        this.ozellik = ozellik;\n    }\n}\n",
      "Main.java": "package Quiz.Quiz3;\n\nimport java.io.*;\nimport java.util.ArrayList;\nimport java.util.Scanner;\n\npublic class Main\n{\n    private static final String kek_uretim = \"kek_uretim.bin\";\n\n    public static void main(String[] args) throws InputException, IOException\n    {\n\n        Scanner scanner = new Scanner(System.in);\n\n        String info = \"– Üretim Başlat: Kek üretiminde kullanılacak aşamaların (pastaban, krema, süsleme) seçilmesi\\n\" +\n                \"sürecini başlatır.\\n\" +\n                \"– Üretim Geçmişi: Üretim geçmişinin ekranda listelenmesi.\\n\" +\n                \"– Kaydet: Üretim geçmişinin dosyaya kaydedilmesi.\\n\" +\n                \"– Yükle: Dosyadan üretim geçmişinin geri yüklenmesi.\\n\" +\n                \"– Çıkış: Program sonlandırılır.\";\n        System.out.println(info);\n\n        System.out.print(\"Enter command: \");\n        String command = scanner.nextLine();\n\n        ArrayList<UretimKaydi> liste = new ArrayList<>();\n        UretimKaydi uk = null;\n        while (!command.equals(\"Çıkış\"))\n        {\n            if (command.equals(\"Üretim Başlat\"))\n            {\n                try\n                {\n                    uk = uretimBaslat(scanner);\n                    if (uk != null)\n                        liste.add(uk);\n                }\n                catch (Exception e)\n                {\n                    System.err.println(e.getMessage());\n                }\n            }\n            else if (command.equals(\"Üretim Geçmişi\"))\n            {\n                System.out.println(liste);\n            }\n            else if (command.equals(\"Kaydet\"))\n            {\n                try\n                {\n                    ObjectOutputStream oos = null;\n                    oos = new ObjectOutputStream(new FileOutputStream(kek_uretim, true));\n                    oos.writeObject(liste);\n                    oos.close();\n                }\n                catch (Exception e)\n                {\n                    System.err.println(e.getMessage());\n                }\n            }\n            else if (command.equals(\"Yükle\"))\n            {\n                try\n                {\n                    ObjectInputStream ois = new ObjectInputStream(new FileInputStream(kek_uretim));\n\n                    liste = (ArrayList<UretimKaydi>) ois.readObject();\n\n                    for (Object o : liste)\n                    {\n                        o = (UretimKaydi) o;\n                    }\n\n                    ois.close();\n                }\n                catch (Exception e)\n                {\n                    System.err.println(e.getMessage());\n                    throw new BosDosyaException(kek_uretim);\n                }\n            }\n            else\n            {\n                System.err.println(\"Unknown command: \" + command);\n            }\n\n            System.out.println(info);\n            System.out.print(\"Enter command: \");\n            command = scanner.nextLine();\n        }\n    }\n\n    private static UretimKaydi uretimBaslat(Scanner scanner) throws Exception\n    {\n        UretimKaydi kayit = new UretimKaydi();\n\n        boolean nothingButSus = false;\n        boolean pastabanAdded = false;\n\n        String info = \"ekle, tamamla, vazgeç\";\n        System.out.println(info);\n\n        System.out.print(\"Enter command: \");\n        String command = scanner.nextLine();\n        while (!command.equals(\"Çıkış\"))\n        {\n            if (command.equals(\"ekle\"))\n            {\n                System.out.print(\"Uretim asamasinin tipi (yalnizca pastaban, krema ya da susleme olabilir): \");\n                String tip = scanner.nextLine();\n                switch (tip)\n                {\n                    case \"pastaban\":\n                        if (nothingButSus) throw new SiraUyumsuzluguException(\"\\\"süsleme\\\"\\n\" +\n                                \"eklendikten sonra \\\"süsleme\\\" dışında herhangi bir aşama seçilemez.\");\n                        pastabanAdded = true;\n                        break;\n                    case \"krema\":\n                        if (nothingButSus) throw new SiraUyumsuzluguException(\"\\\"süsleme\\\"\\n\" +\n                                \"eklendikten sonra \\\"süsleme\\\" dışında herhangi bir aşama seçilemez.\");\n                        if (!pastabanAdded) throw new SiraUyumsuzluguException(\"\\\"krema\\\" eklenmeden önce mutlaka en az bir katman \\\"pastaban\\\" eklenmiş olmalıdır;\");\n                        break;\n                    case \"susleme\":\n                        nothingButSus = true;\n                        break;\n                    default:\n                        throw new OzellikDesteksizException(tip); //TODO\n                }\n\n                System.out.print(\"Uretim asamasinin ozelligi (örn., krema, çilek): \");\n                String ozellik = scanner.nextLine();\n\n                kayit.parcaEkle(new UretimAsamasi(tip, ozellik));\n            }\n            else if (command.equals(\"tamamla\"))\n            {\n                return kayit;\n            }\n            else if (command.equals(\"vazgeç\"))\n            {\n                return null;\n            }\n            else\n            {\n                System.err.println(\"Unknown command: \" + command);\n            }\n\n            System.out.println(info);\n            System.out.print(\"Enter command: \");\n            command = scanner.nextLine();\n        }\n\n        return null;\n    }\n}\n",
      "BosDosyaException.java": "package Quiz.Quiz3;\n\npublic class BosDosyaException extends InputException\n{\n    public BosDosyaException(String file)\n    {\n        super(\"HATA: \" + file + \" dosyası boş.\");\n    }\n}\n",
      "UretimKaydi.java": "package Quiz.Quiz3;\n\nimport java.io.Serializable;\nimport java.util.ArrayList;\n\npublic class UretimKaydi implements Serializable\n{\n    private ArrayList<UretimAsamasi> asamalar = null;\n\n    public UretimKaydi()\n    {\n        asamalar = new ArrayList<>();\n    }\n\n    public void parcaEkle(UretimAsamasi asama)\n    {\n        asamalar.add(asama); // TODO: Maybe clone\n    }\n\n    @Override\n    public String toString()\n    {\n        String r = \"\";\n        int i = 1;\n        for (UretimAsamasi asama : asamalar)\n        {\n            r += (\"Kat \" + i++ + \"-> \") + asama + \"\\n\";\n        }\n\n        return r;\n    }\n}\n",
      "OzellikDesteksizException.java": "package Quiz.Quiz3;\n\npublic class OzellikDesteksizException extends Exception\n{\n    public OzellikDesteksizException(String asama)\n    {\n        super(\"HATA: \" + asama + \" kek üretiminde desteklenmiyor.\");\n    }\n}\n",
      "SiraUyumsuzluguException.java": "package Quiz.Quiz3;\n\npublic class SiraUyumsuzluguException extends Exception\n{\n    public SiraUyumsuzluguException(String kural)\n    {\n        super(\"HATA: Üretim sırası uyumsuz. \" + kural);\n    }\n}\n",
      "InputException.java": "package Quiz.Quiz3;\n\npublic class InputException extends Exception\n{\n    public InputException(String s)\n    {\n        super(s);\n    }\n}\n",
      "DosyaBulunamadiException.java": "package Quiz.Quiz3;\n\npublic class DosyaBulunamadiException extends InputException\n{\n    public DosyaBulunamadiException(String file)\n    {\n        super(\"HATA: \" + file + \" dosyası bulunamadı.\");\n    }\n}\n"
    },
    {
      "id": "6897869",
      "UretimAsamasi.java": "import java.io.Serializable;\n\npublic class UretimAsamasi implements Serializable {\n    private String tip;\n    private String ozellik;\n\n    public UretimAsamasi(String tip, String ozellik) {\n        this.ozellik = ozellik;\n        this.tip = tip;\n    }\n\n    public String getTip() {\n        return tip;\n    }\n\n    public String getOzellik() {\n        return ozellik;\n    }\n\n    public String toString() {\n        return tip + \" \" + ozellik;\n    }\n}\n",
      "Main.java": "import java.util.ArrayList;\nimport java.util.Scanner;\nimport java.io.FileInputStream;\nimport java.io.FileNotFoundException;\nimport java.io.FileOutputStream;\nimport java.io.IOException;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\n\npublic class Main {\n    @SuppressWarnings(\"unchecked\")\n    public static void main(String[] args) throws Exception {\n        ArrayList<UretimKaydi> kekler = new ArrayList<>();\n        Scanner scan = new Scanner(System.in);\n        String input;\n\n        do {\n            System.out.println(\"\\n------------\");\n            System.out.println(\"İşlem seçin:\");\n            System.out.println(\"1-Üretim başlat.\");\n            System.out.println(\"2-Üretim geçmişi.\");\n            System.out.println(\"3-Kaydet\");\n            System.out.println(\"4-Yükle.\");\n            System.out.println(\"5-Çıkış\");\n\n            input = scan.nextLine();\n            // System.out.println(input);\n\n            if (input.charAt(0) == '1' || \"retim başlat\".equals(input.toLowerCase().substring(1))) {\n                uret(kekler, scan);\n            } else if (input.charAt(0) == '2' || \"retim geçmişi\".equals(input.toLowerCase().substring(1))) {\n                int i = 1;\n                System.out.println(\"***************\");\n                for (UretimKaydi u : kekler) {\n                    System.out.println(i + \". üretim kaydı\");\n                    System.out.println(u);\n                    System.out.println();\n                    i++;\n                }\n            } else if (input.charAt(0) == '3' || \"kaydet\".startsWith(input.toLowerCase())) {\n                try {\n                    ObjectOutputStream o = new ObjectOutputStream(new FileOutputStream(\"data.bin\"));\n                    o.writeObject(kekler);\n                    o.close();\n                    System.out.println(\"Dosya kaydedildi.\");\n                } catch (FileNotFoundException e) {\n                    throw new DosyaBulunamadiException();\n                } catch (IOException e) {\n                    System.err.println(\"Dosya yazılırken hata oluştu\");\n                }\n\n            } else if (input.charAt(0) == '4' || \"yükle\".startsWith(input.toLowerCase())) {\n                try {\n                    ObjectInputStream o = new ObjectInputStream(new FileInputStream(\"data.bin\"));\n                    kekler = (ArrayList<UretimKaydi>) o.readObject();\n                    o.close();\n                    System.out.println(\"Dosya başarıyla yüklendi.\");\n                } catch (FileNotFoundException e) {\n                    throw new DosyaBulunamadiException();\n                } catch (IOException e) {\n                    throw new BosDosyaException();\n                }\n            } else if (input.charAt(0) == '5') {\n                scan.close();\n                return;\n            } else {\n                System.out.println(\"Geçersiz komut.\");\n            }\n\n        } while (input.charAt(0) != '5' || \"çıkış\".equals(input.toLowerCase()));\n\n        scan.close();\n    }\n\n    public static void uret(ArrayList<UretimKaydi> kekler, Scanner scan)\n            throws OzellikDesteksizException, SiraUyumsuzluguException {\n        UretimKaydi uk = new UretimKaydi();\n\n        String input;\n\n        System.out.println(\"*****************\");\n        System.out.println(\"Yeni üretim kaydı\");\n        do {\n            System.out.println(\"İşlem seçin:\");\n            System.out.println(\"1-Yeni aşama ekle\");\n            System.out.println(\"2-Üretimi tamamla\");\n            System.out.println(\"3-Üretimden vazgeç\");\n\n            input = scan.nextLine();\n\n            if (input.charAt(0) == '1' || \"yeni aşama ekle\".startsWith(input.toLowerCase())) {\n                yeniAsamaEkle(uk, scan);\n            } else if (input.charAt(0) == '2' || \"üretimi tamamla\".startsWith(input.toLowerCase())) {\n                boolean valid = true;\n\n                for (UretimAsamasi u : uk.getAsamalar()) {\n                    if (u.getTip().equals(\"Krema\")) {\n                        throw new SiraUyumsuzluguException(\n                                \"\\\"krema\\\" eklenmeden önce mutlaka en az bir katman \\\"pastaban\\\" eklenmiş olmalıdır.\");\n                    }\n                    if (u.getTip().equals(\"Pastaban\"))\n                        break;\n                }\n\n                for (UretimAsamasi u : uk.getAsamalar()) {\n                    if (u.getTip().equals(\"Süsleme\")) {\n                        valid = false;\n                    } else {\n                        if (!valid) {\n                            throw new SiraUyumsuzluguException(\n                                    \"\\\"süsleme\\\" eklendikten sonra \\\"süsleme\\\" dışında herhangi bir aşama seçilemez.\");\n                        }\n                    }\n\n                }\n\n                kekler.add(uk);\n                System.out.println(\"Yeni üretim kaydı oluştutuldu.\");\n                return;\n\n            } else if (input.charAt(0) == '3' || \"üretimden vazgeç\".startsWith(input.toLowerCase())) {\n                System.out.println(\"Üretim iptal edildi!\");\n                return;\n            } else {\n                System.out.println(\"Geçersiz komut.\");\n            }\n        } while (input.charAt(0) != '3' || \"üretimden vazgeç\".startsWith(input.toLowerCase()));\n    }\n\n    public static void yeniAsamaEkle(UretimKaydi uk, Scanner scan) throws OzellikDesteksizException {\n        System.out.println();\n        String input;\n        String ek;\n\n        System.out.print(\"Eklenecek aşamayı girin: \");\n        input = scan.nextLine();\n\n        if (\"pastaban\".equals(input.toLowerCase())) {\n            System.out.print(\"Ek bilgi:\");\n            ek = scan.nextLine();\n            uk.parcaEkle(new UretimAsamasi(\"Pastaban\", ek));\n        } else if (\"krema\".equals(input.toLowerCase())) {\n            System.out.print(\"Ek bilgi:\");\n            ek = scan.nextLine();\n            uk.parcaEkle(new UretimAsamasi(\"Krema\", ek));\n        } else if (\"süsleme\".equals(input.toLowerCase())\n                || (input.toLowerCase().startsWith(\"s\") && input.toLowerCase().endsWith(\"eme\"))) {\n            System.out.print(\"Ek bilgi:\");\n            ek = scan.nextLine();\n            uk.parcaEkle(new UretimAsamasi(\"Süsleme\", ek));\n        } else {\n            throw new OzellikDesteksizException(input);\n        }\n    }\n}\n",
      "BosDosyaException.java": "public class BosDosyaException extends InputException {\n    BosDosyaException() {\n        super(\"HATA: kek_uretim  dosyası boş.\");\n    }\n}\n",
      "UretimKaydi.java": "import java.io.Serializable;\nimport java.util.ArrayList;\n\npublic class UretimKaydi implements Serializable {\n    private ArrayList<UretimAsamasi> asamalar;\n\n    public UretimKaydi() {\n        asamalar = new ArrayList<>();\n    }\n\n    public void parcaEkle(UretimAsamasi asama) {\n        asamalar.add(asama);\n    }\n\n    public ArrayList<UretimAsamasi> getAsamalar() {\n        return new ArrayList<>(asamalar);\n    }\n\n    public String toString() {\n        String out = \"\";\n        for (UretimAsamasi u : asamalar) {\n            out += u + \"\\n\";\n        }\n        return out;\n    }\n}\n",
      "OzellikDesteksizException.java": "public class OzellikDesteksizException extends Exception {\n    OzellikDesteksizException() {\n        // EKSİK\n        super(\"HATA: Aşama kek üretiminde desteklenmiyor\");\n    }\n\n    OzellikDesteksizException(String message) {\n        super(\"HATA: \" + message + \" kek üretiminde desteklenmiyor.\");\n    }\n}\n",
      "SiraUyumsuzluguException.java": "public class SiraUyumsuzluguException extends Exception {\n    SiraUyumsuzluguException() {\n        // EKSİK\n        super(\"HATA: Üretim sırası uyumsuz. \");\n    }\n\n    SiraUyumsuzluguException(String message) {\n        super(\"HATA: Üretim sırası uyumsuz. \" + message);\n    }\n}\n",
      "InputException.java": "public class InputException extends Exception {\n    InputException(String message) {\n        super(message);\n    }\n}\n",
      "DosyaBulunamadiException.java": "public class DosyaBulunamadiException extends InputException {\n    DosyaBulunamadiException() {\n        super(\"HATA: kek_uretim dosyası bulunamdı.\");\n    }\n}\n"
    },
    {
      "id": "6275288",
      "UretimAsamasi.java": "import java.io.Serializable;\n\npublic class UretimAsamasi implements Serializable {\n    private String tip, ozellik;\n\n    UretimAsamasi(String tip, String ozellik) {\n        this.tip = tip;\n        this.ozellik = ozellik;\n    }\n\n    public String getTip() {\n        return tip;\n    }\n\n    public String getOzellik() {\n        return ozellik;\n    }\n\n    public void setTip(String tip) {\n        this.tip = tip;\n    }\n\n    public void setOzellik(String ozellik) {\n        this.ozellik = ozellik;\n    }\n\n}\n",
      "Quiz3.java": "import java.io.FileInputStream;\nimport java.io.FileOutputStream;\nimport java.io.IOException;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\nimport java.io.PrintWriter;\nimport java.io.RandomAccessFile;\nimport java.net.Socket;\nimport java.util.ArrayList;\nimport java.util.Random;\nimport java.util.Scanner;\n\npublic class Quiz3 {\n    public static void main(String[] args) throws Exception {\n        ArrayList<UretimAsamasi> asamalar = new ArrayList<>();\n        UretimKaydi kayit = new UretimKaydi(asamalar);\n        Scanner scan = new Scanner(System.in);\n        while (true) {\n            System.out.println(\n                    \" Üretimi baslatmak icin 1 \\n Üretim geçmişi için 2\\n Üretim geçmişinin dosyaya kaydi icin 3\\n Dosyadan  üretim kaydını geri yüklemek için 4 \\n Programdan çıkmak için 5e basınız:\");\n            int i = scan.nextInt();\n            if (i == 1) {\n                while (true) {\n                    System.out.println(\n                            \"Yeni bir asama eklemek icin 1\\nÜretimi tamamlamak icin 2\\nÜretimden vazgecme icin 3ü tiklayin.\");\n                    int y = scan.nextInt();\n                    if (y == 1) {\n                        System.out.println(\"Hangi asama yapmak istersiniz:(pastaban,krema,susleme)\");\n                        String j = scan.next();\n                        if (!(j.equals(\"pastaban\") || j.equals(\"krema\") || j.equals(\"susleme\"))) {\n                            throw new OzellikDesteksizException(\"HATA: [\" + j + \"] kek üretiminde desteklenmiyor.\");\n                        }\n                        if (j.equals(\"pastaban\")) {\n                            ArrayList<UretimAsamasi> asama = kayit.getAsamalar();\n                            if (isContainSusleme(asamalar)) {\n                                throw new SiraUyumsuzluguException(\n                                        \"Hata:Uretim sirasi uyumsuz.[ihlal edilen pasta üretim kurali]. \");\n                            } else {\n                                UretimAsamasi asama_pastaban = new UretimAsamasi(\"pastaban\", \"cilek\");\n                                kayit.parcaEkle(asama_pastaban);\n                            }\n                        }\n                        if (j.equals(\"krema\")) {\n                            ArrayList<UretimAsamasi> asama = kayit.getAsamalar();\n                            boolean isAdded = false;\n                            for (int k = 0; k < asama.size(); k++) {\n                                if (asama.get(k).getTip().equals(\"pastaban\")) {\n                                    isAdded = true;\n                                    break;\n                                }\n                            }\n                            if (isAdded && !isContainSusleme(asamalar)) {\n                                UretimAsamasi asama_krema = new UretimAsamasi(\"krema\", \"cilek\");\n                                kayit.parcaEkle(asama_krema);\n                            } else {\n                                throw new SiraUyumsuzluguException(\n                                        \"Hata:Uretim sirasi uyumsuz.[ihlal edilen pasta üretim kurali]. \");\n                            }\n                        }\n                        if (j.equals(\"susleme\")) {\n                            UretimAsamasi asama_susleme = new UretimAsamasi(\"susleme\", \"cilek\");\n                            kayit.parcaEkle(asama_susleme);\n                        }\n                    } else if (y == 2) {\n                        break;\n                    } else if (y == 3) {\n                        break;\n                    }\n                }\n            } else if (i == 2) {\n                ArrayList<UretimAsamasi> myAsama = kayit.getAsamalar();\n                int k = 1;\n                for (int j = 0; j < myAsama.size(); j++) {\n                    System.out.println(k + \". asamada \" + myAsama.get(j).getTip() + \" islemi yapildi.\");\n                }\n            } else if (i == 3) {\n                ObjectOutputStream obj = new ObjectOutputStream(new FileOutputStream(\"kayitim.bin\"));\n                obj.writeObject(kayit);\n            } else if (i == 4) {\n\n                try (ObjectInputStream objm = new ObjectInputStream(new FileInputStream(\"kayitim.bin\"))) {\n                    kayit = (UretimKaydi) objm.readObject();\n                    ArrayList<UretimAsamasi> asamm = kayit.getAsamalar();\n                    int zs = 1;\n                    for (int jk = 0; jk < asamm.size(); jk++) {\n                        System.out.println(zs + \".asamada \" + asamm.get(jk).getTip() + \" eklenmisti.\");\n                    }\n                    objm.close();\n                    System.out.println(\"Üretim kaydi yüklendi\");\n                    System.out.println();\n                } catch (Exception e) {\n                    System.out.println(e.getMessage());\n                }\n            } else if (i == 5) {\n                System.exit(0);\n            }\n            try {\n\n            } catch (Exception e) {\n                System.out.println(e.getMessage());\n            }\n        }\n\n    }\n\n    public static boolean isContainSusleme(ArrayList<UretimAsamasi> asamalar) {\n        for (int i = 0; i < asamalar.size(); i++) {\n            if (asamalar.get(i).getTip().equals(\"susleme\")) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\n",
      "BosDosyaException.java": "public class BosDosyaException extends InputException {\n    public BosDosyaException(String message) {\n        super(message);\n    }\n}\n",
      "UretimKaydi.java": "import java.io.Serializable;\nimport java.util.ArrayList;\n\npublic class UretimKaydi implements Serializable {\n    private ArrayList<UretimAsamasi> asamalar;\n\n    public UretimKaydi(ArrayList<UretimAsamasi> asamalar) {\n        this.asamalar = asamalar;\n    }\n\n    public void parcaEkle(UretimAsamasi asama) {\n        asamalar.add(asama);\n    }\n\n    public ArrayList<UretimAsamasi> getAsamalar() {\n        return asamalar;\n    }\n\n    public void setAsamalar(ArrayList<UretimAsamasi> asamalar) {\n        this.asamalar = asamalar;\n    }\n}\n",
      "OzellikDesteksizException.java": "public class OzellikDesteksizException extends Exception {\n    public OzellikDesteksizException(String message) {\n        super(message);\n    }\n}\n",
      "reader.java": "import java.io.BufferedReader;\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.FileNotFoundException;\nimport java.io.FileOutputStream;\nimport java.io.FileReader;\nimport java.io.PrintWriter;\nimport java.util.Scanner;\n\npublic class reader {\n    public static void main(String[] args) {\n        String name = \"gel beraber mesut olalim\";\n        String[] str = name.split(\" \");\n        System.out.println(str[3]);\n        FileOutputStream fos = null;\n        PrintWriter pw = null;\n        try {\n            File file = new File(\"ouyput.txt\");\n            fos = new FileOutputStream(file);\n            pw = new PrintWriter(fos);\n            pw.print(\"gelme\");\n            pw.println(\"lutfen\");\n        } catch (FileNotFoundException e) {\n            System.out.println(\"dosya açilamadi\");\n        } finally {\n            pw.close();\n        }\n        FileReader fis = null;\n        BufferedReader br = null;\n        try {\n            fis = new FileReader(\"output.txt\");\n            br = new BufferedReader(fis);\n            String s = br.readLine();\n            System.out.println(\"s:\" + s);\n            System.out.println(br.readLine());\n\n            fis.close();\n        } catch (Exception e) {\n            System.out.println(\"sorun\");\n        }\n        try {\n            Scanner scan = new Scanner(new FileInputStream(\"output.txt\"));\n            System.out.println(scan.nextLine());\n        } catch (Exception e) {\n            System.out.println(\"sorun\");\n        }\n    }\n}\n",
      "SiraUyumsuzluguException.java": "public class SiraUyumsuzluguException extends Exception {\n    public SiraUyumsuzluguException(String message) {\n        super(message);\n    }\n}\n",
      "InputException.java": "public class InputException extends Exception {\n    public InputException(String message) {\n        super(message);\n    }\n}\n",
      "DosyaBulunamadiException.java": "public class DosyaBulunamadiException extends InputException {\n    public DosyaBulunamadiException(String message) {\n        super(message);\n    }\n}\n"
    },
    {
      "id": "7817361",
      "Main.java": "import java.util.ArrayList;\nimport java.util.Scanner;\nimport java.io.FileNotFoundException;\nimport java.io.PrintWriter;\nimport java.io.BufferedReader;\nimport java.io.FileInputStream;\nimport java.io.FileOutputStream;\nimport java.io.FileWriter;\nimport java.io.FileReader;\nimport java.io.BufferedInputStream;\n\n\npublic class Main {\n    public static void main(String[] args){\n\n        int n = 0;\n        Scanner scan = new Scanner(System.in);\n\n        \n\n        UretimKaydi uk = new UretimKaydi();\n\n        \n\n        BufferedReader br = null;\n        \n\n        while (n>-1){\n            System.out.println(\"Lütfen aşağıdaki seçeneklerden brini seçiniz. \\n1: Üretim Başlat\\n2: Üretim Geçmişi\\n3: Kaydet\\n4: Yükle\\n5: Çıkış\");\n            int m = scan.nextInt();\n        \n            if(m== 1){\n\n                System.out.println(\"Lütfen bir malzeme seçiniz \\n1: pastaban\\n2: krema\\n3: süsleme\");\n                int k = scan.nextInt();\n\n                if(k == 1){\n                    n = k;\n                    System.out.println(\"Lütfen bir özellik seçiniz. \\n1: kakaolu\");\n                    int ozellik = scan.nextInt();\n\n                    \n                    \n                    UretimAsamasi ua1 = new UretimAsamasi(\"pastaban\", \"kakaolu\");\n                    uk.parcaEkle(ua1);\n                }\n\n                try{\n                    if((k==2)&& n!=1){\n\n                        SiraUyumsuzluguException sue = new SiraUyumsuzluguException();\n\n                        throw sue;\n\n\n                    }\n                    if(k==2){\n                        n = k;\n\n                        System.out.println(\"Lütfen bir özellik seçiniz. \\n1: kakaolu\");\n                        int ozellik = scan.nextInt();\n                        \n\n                        UretimAsamasi ua2 = new UretimAsamasi(\"krema\",\"kakaolu\");\n                        uk.parcaEkle(ua2);\n                    }\n\n                    if(k==3 && n!=2){\n                            SiraUyumsuzluguException sue = new SiraUyumsuzluguException();\n\n                        throw sue;\n                    }\n\n                    if(k==3){\n                        System.out.println(\"Lütfen bir özellik seçiniz. \\n1: kakaolu\");\n                        int ozellik = scan.nextInt();\n                        \n\n                        UretimAsamasi ua3 = new UretimAsamasi(\"süsleme\", \"kakaolu\");\n                        uk.parcaEkle(ua3);\n\n                    }\n                }catch(Exception e){\n\n                    System.out.println(\"HATA: pasta üretim sırası uyumsuz.\");\n\n                }\n                \n\n            }\n            if(m==2){\n\n                \n\n\n                try{\n\n                    Scanner scanner = new Scanner(new FileInputStream(\"kek_uretim\"));\n\n\n                     \n                    String s = scanner.nextLine();\n\n                    System.out.println(s);\n\n                    if(s.equals(null)){\n\n                    \n                        DosyaBulunamadiException dbe = new DosyaBulunamadiException();\n                        throw dbe;\n                    }\n                    \n\n                }catch(Exception e){\n                    System.out.println(\"HATA: kek_uretim.txt boş\");\n\n                }\n\n            }\n            if(m==3){\n                System.out.println(\"Dosyaya kaydedildi.\");\n            }\n            if(m==4){\n                \n                try{\n                    \n                    \n                        Scanner scanner =  new Scanner(new FileInputStream(\"kek_uretim.txt\"));\n\n\n                    \n\n                        String s = scanner.nextLine();\n\n                    \n\n                    \n\n                    if(s.equals(null)){\n\n                    \n                        DosyaBulunamadiException dbe = new DosyaBulunamadiException();\n                        throw dbe;\n                    }\n                \n\n\n\n                }catch(Exception e){\n                    System.out.println(\"HATA: kek_uretim.txt boş\");\n\n                }\n\n            }\n            if(m==5){\n                scan.close();\n            }   \n        }\n}\n\n   \n}\n\n\nclass UretimAsamasi{\n    private String tip;\n    private String ozellik;\n\n    public UretimAsamasi(String tip, String ozellik){\n        this.tip = tip;\n        this.ozellik = ozellik;\n    }\n\n    public String getTip(){\n\n        return tip;\n    }\n\n    public String getOzellik(){\n        return ozellik;\n    }\n\n    public void setTip(String yeniTip){\n        tip = yeniTip;\n    }\n\n    public void setOzellik(String yeniOzellik){\n        ozellik = yeniOzellik;\n    }\n\n\n}\n\nclass UretimKaydi{\n\n    private ArrayList<UretimAsamasi> asamalar = new ArrayList<>();\n\n\n    public UretimKaydi(){\n\n    }\n\n    public void parcaEkle(UretimAsamasi asama){\n\n        PrintWriter out = null;\n\n\n        try {\n            out = new PrintWriter(new FileOutputStream(\"kek_uretim.txt\"));\n        } catch (FileNotFoundException e) {\n            System.out.println(\"HATA: kek_uretim dosyası bulunamadı.\");\n        }\n\n        out.println(asama.getTip() + \" \" + asama.getOzellik());\n\n        asamalar.add(asama);\n\n        out.close();\n\n\n    }\n\n    public ArrayList geArrayList(){\n\n        return asamalar;\n    }\n\n}\n\nclass InputException extends Exception{\n\n}\n\nclass DosyaBulunamadiException extends InputException{\n\n\n}\nclass BosDosyaException extends InputException{\n\n}\n\nclass OzellikDesteksizException extends Exception{\n\n}\n\nclass SiraUyumsuzluguException extends Exception{\n\n}"
    },
    {
      "id": "1764665",
      "UretimAsamasi.java": "public class UretimAsamasi {\n    private String tip;\n    private String ozellik;\n\n    public String getOzellik() {\n        return ozellik;\n    }\n\n    public void setOzellik(String ozellik) {\n        this.ozellik = ozellik;\n    }\n\n    public String getTip() {\n        return tip;\n    }\n\n    public void setTip(String tip) {\n        this.tip = tip;\n    }\n\n    public UretimAsamasi(String tip, String ozellik) {\n        this.tip = tip;\n        this.ozellik = ozellik;\n    }\n}\n",
      "BosDosyaException.java": "public class BosDosyaException extends InputException {\n\n}\n",
      "UretimKaydi.java": "import java.util.ArrayList;\n\npublic class UretimKaydi {\n    private ArrayList<UretimAsamasi> asamalar = new ArrayList<>();\n\n    public ArrayList<UretimAsamasi> getAsamalar() {\n        return asamalar;\n    }\n\n    public UretimKaydi() {\n\n    }\n\n    public void parcaEkle(UretimAsamasi asama) {\n        asamalar.add(asama);\n    }\n\n}\n",
      "App.java": "\nimport java.io.BufferedReader;\nimport java.io.File;\nimport java.io.FileOutputStream;\nimport java.io.FileReader;\nimport java.io.PrintWriter;\nimport java.util.ArrayList;\nimport java.util.Scanner;\n\npublic class App {\n    public static void main(String[] args) throws Exception {\n        Scanner scan = new Scanner(System.in);\n        ArrayList<UretimKaydi> TümKayıtlar = new ArrayList<>();\n        MainMenu(scan, TümKayıtlar);\n    }\n\n    public static void Secenek1(Scanner scan, ArrayList<UretimKaydi> kayıt) throws Exception {\n        String tip = AsamaTipMenu(scan);\n        String ozellik = AsamaOzelikMenu(scan);\n        UretimAsamasi asama = new UretimAsamasi(tip, ozellik);\n        kayıt.get(kayıt.size() - 1).parcaEkle(asama);\n        PastaMenu(scan, kayıt);\n    }\n\n    public static void MainMenu(Scanner scan, ArrayList<UretimKaydi> kayıt) throws Exception {\n        int choose = MainMenuScanner(scan);\n        if (choose == 1) {\n            kayıt.add(new UretimKaydi());\n            PastaMenu(scan, kayıt);\n        } else if (choose == 2) {\n            for (int i = 0; i < kayıt.size(); i++) {\n                System.out.println(\"--------\" + (i + 1) + \". Pasta Katmanları--------\");\n                for (int j = 0; j < kayıt.get(i).getAsamalar().size(); j++) {\n                    System.out.println(\"---\" + (j + 1) + \". Katman, Tip:\" + kayıt.get(i).getAsamalar().get(j).getTip()\n                            + \", Özellik: \" + kayıt\n                                    .get(i).getAsamalar().get(j).getOzellik());\n                }\n            }\n            MainMenu(scan, kayıt);\n        } else if (choose == 3) {\n            Writer(\"kek_uretim.txt\", kayıt);\n            System.out.println(\"Dosya Kaydedildi\");\n            MainMenu(scan, kayıt);\n        } else if (choose == 4) {\n            GecmisYukle(kayıt);\n            MainMenu(scan, kayıt);\n        } else if (choose == 5) {\n            System.exit(0);\n        }\n    }\n\n    public static int MainMenuScanner(Scanner scan) {\n        System.out.println(\"1-> Üretim Başlat\");\n        System.out.println(\"2-> Üretim Geçmişi\");\n        System.out.println(\"3-> Kaydet\");\n        System.out.println(\"4-> Yükle\");\n        System.out.println(\"5-> Çıkış\");\n        try {\n            int a = scan.nextInt();\n            if (a == 1 || a == 2 || a == 3 || a == 4 || a == 5 || a == 6) {\n                return a;\n            } else {\n                throw new Exception();\n            }\n        } catch (Exception e) {\n            System.out.println(\"Hatalı Input Lütfen Tekrar Deneyin\");\n            return MainMenuScanner(scan);\n        }\n    }\n\n    public static void Secenek2(Scanner scan, ArrayList<UretimKaydi> kayıt) throws Exception {\n        System.out.println(\"Pasta Üretimi Tamamlandı İşte Pasta: \");\n        System.out.println(\"--------Pasta Katmanları--------\");\n        for (int j = 0; j < kayıt.get(kayıt.size() - 1).getAsamalar().size(); j++) {\n            System.out.println(\n                    \"---\" + (j + 1) + \". Katman, Tip:\" + kayıt.get(kayıt.size() - 1).getAsamalar().get(j).getTip()\n                            + \", Özellik: \" + kayıt\n                                    .get(kayıt.size() - 1).getAsamalar().get(j).getOzellik());\n        }\n        MainMenu(scan, kayıt);\n    }\n\n    public static void Secenek3(Scanner scan, ArrayList<UretimKaydi> kayıt) throws Exception {\n        System.out.println(\"Pasta Üretimi Iptal Edildi\");\n        kayıt.remove(kayıt.get(kayıt.size() - 1));\n        MainMenu(scan, kayıt);\n    }\n\n    public static void PastaMenu(Scanner scan, ArrayList<UretimKaydi> kayıt) throws Exception {\n        int choose = PastaMenuScan(scan);\n        if (choose == 1) {\n            Secenek1(scan, kayıt);\n        } else if (choose == 2) {\n            Secenek2(scan, kayıt);\n        } else if (choose == 3) {\n            Secenek3(scan, kayıt);\n        }\n    }\n\n    public static int PastaMenuScan(Scanner scan) {\n        System.out.println(\"1-yeni bir aşama ekleme\");\n        System.out.println(\"2-üretimi tamamlama\");\n        System.out.println(\"3-üretimden vazgeçme\");\n        try {\n            int a = scan.nextInt();\n            if (a == 1 || a == 2 || a == 3) {\n                return a;\n            } else {\n                throw new Exception();\n            }\n        } catch (Exception e) {\n            System.out.println(\"Hatalı Input Lütfen Tekrar Deneyin\");\n            return PastaMenuScan(scan);\n        }\n    }\n\n    public static String AsamaTipMenu(Scanner scan) {\n        System.out.println(\"--Asamanızın Tipi Nedir?--\");\n        System.out.println(\"->PastaTaban\");\n        System.out.println(\"->Krema\");\n        System.out.println(\"->Süsleme\");\n        try {\n            String a = scan.next();\n            if (a.equals(\"PastaTaban\") || a.equals(\"Krema\") || a.equals(\"Süsleme\")) {\n                return a;\n            } else {\n                throw new OzellikDesteksizException(\"HATA: \" + a + \" kek üretiminde desteklenmiyor.\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Lütfen Tekrar Deneyin\");\n            return AsamaTipMenu(scan);\n        }\n    }\n\n    public static String AsamaOzelikMenu(Scanner scan) {\n        System.out.println(\"Asamanızın Özelliğini Yazın?\");\n        return scan.next();\n    }\n\n    public static void Writer(String filename, ArrayList<UretimKaydi> kayıt) {\n        PrintWriter out = null;\n        FileOutputStream file = null;\n        try {\n            file = new FileOutputStream(filename);\n        } catch (Exception e) {\n            System.out.println(\"Exception\");\n            return;\n        }\n        try {\n            out = new PrintWriter(file);\n            for (int i = 0; i < kayıt.size(); i++) {\n                for (int j = 0; j < kayıt.get(i).getAsamalar().size(); j++) {\n                    out.println(kayıt.get(i).getAsamalar().get(j).getTip());\n                    out.println(kayıt.get(i).getAsamalar().get(j).getOzellik());\n                }\n                out.print(\"-\");\n            }\n        } catch (Exception e) {\n        } finally {\n            out.close();\n        }\n    }\n\n    public static void GecmisYukle(ArrayList<UretimKaydi> kayıt) throws Exception {\n        ArrayList<ArrayList<String>> gecmis = readFromFileBufferedReader(\"kek_uretim.txt\");\n        for (int i = 0; i < gecmis.size(); i++) {\n            UretimKaydi a = new UretimKaydi();\n            for (int j = 0; j < gecmis.get(i).size() - 1; j += 2) {\n                a.parcaEkle(new UretimAsamasi(gecmis.get(i).get(j), gecmis.get(i).get(j + 1)));\n                kayıt.add(a);\n            }\n        }\n        System.out.println(\"Geçmiş Pasta Verileri Yüklendi\");\n    }\n\n    public static ArrayList<ArrayList<String>> readFromFileBufferedReader(String filename) throws Exception {\n        ArrayList<ArrayList<String>> listBigger = new ArrayList<ArrayList<String>>();\n        ArrayList<String> list = new ArrayList<String>();\n        try {\n            File dosya = new File(filename);\n            if (dosya.exists()) {\n                BufferedReader in = new BufferedReader(new FileReader(filename));\n                if (in.read() == -1) {\n                    throw new BosDosyaException();\n                } else {\n                    String text = \"\";\n                    int ch;\n                    while ((ch = in.read()) != -1) {\n                        if (ch == 45) {\n                            listBigger.add(list);\n                        } else if (ch == 13) {\n                            list.add(text);\n                            text = \"\";\n                        } else {\n                            if (ch != 10) {\n                                text += (char) ch;\n                            }\n                        }\n                    }\n                    list.add(text);\n                    listBigger.add(list);\n                    in.close();\n                }\n            } else {\n                throw new DosyaBulunamadiException();\n            }\n\n        } catch (DosyaBulunamadiException e) {\n            System.out.println(\"HATA: \" + filename + \" bulunamadı.\");\n        } catch (BosDosyaException e) {\n            System.out.println(\"HATA: \" + filename + \" Boş.\");\n        }\n        return listBigger;\n    }\n}\n",
      "OzellikDesteksizException.java": "public class OzellikDesteksizException extends Exception {\n    public OzellikDesteksizException(String Exception) {\n        System.out.println(Exception);\n    }\n\n}\n",
      "SiraUyumsuzluguException.java": "public class SiraUyumsuzluguException extends Exception {\n    public SiraUyumsuzluguException(String Exception) {\n        System.out.println(Exception);\n    }\n\n}\n",
      "InputException.java": "public class InputException extends Exception {\n\n}\n",
      "DosyaBulunamadiException.java": "public class DosyaBulunamadiException extends InputException {\n\n}\n"
    },
    {
      "id": "4731282",
      "quiz3.java": "\nimport java.io.File;\nimport java.io.FileOutputStream;\nimport java.io.FileInputStream;\nimport java.io.FileNotFoundException;\nimport java.io.PrintWriter;\nimport java.util.ArrayList;\nimport java.util.Scanner;\n\npublic class quiz3 {\n    @SuppressWarnings(\"resource\")\n    public static void main(String[] args) throws Exception {\n        Scanner scan = new Scanner(System.in);\n        UretimKaydi uretimKaydi = new UretimKaydi();\n        File kekUretimDosyasi = new File(\"C:\\\\Users\\\\uston\\\\OneDrive\\\\Masaüstü\\\\kek_uretim.txt\");\n        int secim = 0;\n\n        while (secim != -1) {\n            System.out.println(\"Üretim Başlat : 1 \\nÜretim Geçmişi: 2 \\nKaydet: 3 \\nYükle: 4 \\nÇıkış: 5\");\n            secim = scan.nextInt();\n            if (secim != 1 && secim != 2 && secim != 3 && secim != 4 && secim != 5) {\n                System.out.println(\"[HATA] : Geçerli seçim yapınız.\");\n            }\n\n            if (secim == 1) {\n                int secim2 = 0;\n                while (secim2 != 3) {\n\n                    System.out.println(\n                            \"Ne yapmak istersiniz? \\nAşama Ekle: 1 \\nÜretimi Tamamla: 2 \\nÜretimden Vazgeç: 3\");\n                    secim2 = scan.nextInt();\n                    scan.nextLine();\n\n                    if (secim2 == 1) {\n                        try {\n\n                            String asamaTipi;\n                            String asamaOzelligi;\n                            System.out.println(\"Eklemek istediğiniz aşamanın tipi :\");\n                            asamaTipi = scan.nextLine();\n\n                            System.out.println(\"Eklemek istediğiniz aşamanın özelliği :\");\n                            asamaOzelligi = scan.nextLine();\n\n                            UretimAsamasi asama = new UretimAsamasi(asamaTipi, asamaOzelligi);\n                            uretimKaydi.parcaEkle(asama);\n                        } catch (OzellikDesteksizException e) {\n                            System.out.println(\"HATA : Aşama adı kek üretiminde desteklenmiyor. \");\n                            break;\n                        }\n\n                    }\n                    if (secim2 == 2) {\n                        ArrayList<UretimAsamasi> asamalar = uretimKaydi.getAsamalar();\n                        boolean pastabanVar = false;\n                        boolean süslemede = false;\n                        for (int i = 0; i < asamalar.size(); i++) {\n                            UretimAsamasi buAsama = asamalar.get(i);\n                            if (buAsama.getTip().equals(\"pastaban\")) {\n                                pastabanVar = true;\n                            }\n                            if (buAsama.getTip().equals(\"susleme\")) {\n                                süslemede = true;\n                            }\n                            if (süslemede && !(buAsama.getTip().equals(\"susleme\"))) {\n                                try {\n                                    throw new SiraUyumsuzluguException();\n                                } catch (SiraUyumsuzluguException e) {\n                                    System.out.println(\"HATA : Süsleme sonrası sadece tekrar süsleme eklenebilir.\");\n                                    for (int y = 0; y < asamalar.size(); y++) {\n                                        asamalar.remove(y);\n                                    }\n                                }\n\n                            }\n                            if (pastabanVar == false && buAsama.getTip().equals(\"krema\")) {\n                                try {\n                                    throw new SiraUyumsuzluguException();\n                                } catch (SiraUyumsuzluguException e) {\n                                    System.out.println(\"HATA : Pastaban eklenmeden krema eklenemez.\");\n\n                                    for (int x = 0; x < asamalar.size(); x++) {\n                                        asamalar.remove(x);\n                                    }\n                                }\n                            }\n\n                        }\n                        break;\n                    }\n                }\n\n                if (secim2 == 3) {\n                    ArrayList<UretimAsamasi> asamalar = uretimKaydi.getAsamalar();\n                    for (int i = 0; i < asamalar.size(); i++) {\n                        asamalar.remove(i);\n                    }\n                    System.out.println(\"Vazgeçildi...\");\n\n                }\n\n            }\n            if (secim == 2) {\n                ArrayList<UretimAsamasi> asamalar = uretimKaydi.getAsamalar();\n                for (int i = 0; i < asamalar.size(); i++) {\n                    System.out.println(i + 1 + \" \" + asamalar.get(i).getOzellik() + \" \" + asamalar.get(i).getTip());\n\n                }\n\n            }\n            if (secim == 3) {\n                PrintWriter pw;\n                try {\n                    pw = new PrintWriter(new FileOutputStream(kekUretimDosyasi, true));\n                    if (kekUretimDosyasi.exists() == false) {\n                        throw new DosyaBulunamadiException();\n                    }\n                    ArrayList<UretimAsamasi> asamalar = uretimKaydi.getAsamalar();\n                    for (int i = 0; i < asamalar.size(); i++) {\n                        pw.println(i + 1 + \" \" + asamalar.get(i).getOzellik() + \" \" + asamalar.get(i).getTip());\n                    }\n                    pw.close();\n\n                }\n\n                catch (DosyaBulunamadiException e) {\n                    System.out.println(\"HATA: kek_uretim dosyası bulunamadı.\");\n\n                }\n\n            }\n\n            if (secim == 4) {\n                try {\n\n                    Scanner sc = new Scanner(new FileInputStream(kekUretimDosyasi));\n                    if (sc.hasNextLine() == false) {\n                        throw new BosDosyaException();\n                    }\n                    if (kekUretimDosyasi.exists() == false) {\n                        throw new DosyaBulunamadiException();\n                    }\n                    while (sc.hasNextLine()) {\n                        System.out.println(sc.nextLine());\n                    }\n                } catch (BosDosyaException e) {\n                    System.out.println(\"HATA : kek_uretim dosyası boş.\");\n\n                } catch (DosyaBulunamadiException e) {\n                    System.out.println(\"HATA : kek_uretim dosyası bulunamadı\");\n                }\n\n            }\n            if (secim == 5) {\n                System.out.println(\"Çıkış yapıldı...\");\n                break;\n            }\n\n        }\n    }\n}\n\nclass UretimAsamasi {\n    private String tip;\n    private String ozellik;\n\n    public UretimAsamasi(String tip, String ozellik) throws OzellikDesteksizException {\n\n        if (tip.equals(\"pastaban\") || tip.equals(\"krema\") || tip.equals(\"susleme\")) {\n            this.tip = tip;\n        } else {\n            throw new OzellikDesteksizException();\n        }\n\n        this.ozellik = ozellik;\n\n    }\n\n    public String getTip() {\n        return this.tip;\n    }\n\n    public String getOzellik() {\n        return this.ozellik;\n    }\n\n    public void setTip(String tip) {\n        this.tip = tip;\n\n    }\n\n    public void setOzellik(String ozellik) {\n        this.ozellik = ozellik;\n\n    }\n\n}\n\nclass UretimKaydi {\n    private ArrayList<UretimAsamasi> asamalar = new ArrayList<UretimAsamasi>();\n\n    public UretimKaydi() {\n\n    }\n\n    public void parcaEkle(UretimAsamasi asama) {\n        this.asamalar.add(asama);\n\n    }\n\n    public ArrayList<UretimAsamasi> getAsamalar() {\n        return asamalar;\n    }\n}\n\nclass InputException extends Exception {\n\n}\n\nclass DosyaBulunamadiException extends InputException {\n\n}\n\nclass BosDosyaException extends InputException {\n\n}\n\nclass OzellikDesteksizException extends Exception {\n    public OzellikDesteksizException() {\n        super();\n    }\n\n}\n\nclass SiraUyumsuzluguException extends Exception {\n\n}"
    }
  ]
}